

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 02 17:09:25 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12LF1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 07/09/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC12LF1840 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     008C                     	;# 
    87     0091                     	;# 
    88     0092                     	;# 
    89     0095                     	;# 
    90     0096                     	;# 
    91     0097                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009A                     	;# 
    95     009B                     	;# 
    96     009B                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     010C                     	;# 
   101     0111                     	;# 
   102     0112                     	;# 
   103     0115                     	;# 
   104     0116                     	;# 
   105     0117                     	;# 
   106     0118                     	;# 
   107     0119                     	;# 
   108     011A                     	;# 
   109     011B                     	;# 
   110     011D                     	;# 
   111     011D                     	;# 
   112     018C                     	;# 
   113     0191                     	;# 
   114     0191                     	;# 
   115     0192                     	;# 
   116     0193                     	;# 
   117     0193                     	;# 
   118     0193                     	;# 
   119     0194                     	;# 
   120     0195                     	;# 
   121     0196                     	;# 
   122     0199                     	;# 
   123     019A                     	;# 
   124     019B                     	;# 
   125     019B                     	;# 
   126     019B                     	;# 
   127     019B                     	;# 
   128     019C                     	;# 
   129     019C                     	;# 
   130     019D                     	;# 
   131     019E                     	;# 
   132     019F                     	;# 
   133     020C                     	;# 
   134     0211                     	;# 
   135     0211                     	;# 
   136     0212                     	;# 
   137     0212                     	;# 
   138     0213                     	;# 
   139     0213                     	;# 
   140     0214                     	;# 
   141     0214                     	;# 
   142     0215                     	;# 
   143     0215                     	;# 
   144     0215                     	;# 
   145     0216                     	;# 
   146     0216                     	;# 
   147     0217                     	;# 
   148     0217                     	;# 
   149     0291                     	;# 
   150     0291                     	;# 
   151     0292                     	;# 
   152     0293                     	;# 
   153     0294                     	;# 
   154     0295                     	;# 
   155     0295                     	;# 
   156     0296                     	;# 
   157     0391                     	;# 
   158     0392                     	;# 
   159     0393                     	;# 
   160     039A                     	;# 
   161     039C                     	;# 
   162     039D                     	;# 
   163     039E                     	;# 
   164     039F                     	;# 
   165     0FE4                     	;# 
   166     0FE5                     	;# 
   167     0FE6                     	;# 
   168     0FE7                     	;# 
   169     0FE8                     	;# 
   170     0FE9                     	;# 
   171     0FEA                     	;# 
   172     0FEB                     	;# 
   173     0FED                     	;# 
   174     0FEE                     	;# 
   175     0FEF                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     008C                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     010C                     	;# 
   217     0111                     	;# 
   218     0112                     	;# 
   219     0115                     	;# 
   220     0116                     	;# 
   221     0117                     	;# 
   222     0118                     	;# 
   223     0119                     	;# 
   224     011A                     	;# 
   225     011B                     	;# 
   226     011D                     	;# 
   227     011D                     	;# 
   228     018C                     	;# 
   229     0191                     	;# 
   230     0191                     	;# 
   231     0192                     	;# 
   232     0193                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0199                     	;# 
   239     019A                     	;# 
   240     019B                     	;# 
   241     019B                     	;# 
   242     019B                     	;# 
   243     019B                     	;# 
   244     019C                     	;# 
   245     019C                     	;# 
   246     019D                     	;# 
   247     019E                     	;# 
   248     019F                     	;# 
   249     020C                     	;# 
   250     0211                     	;# 
   251     0211                     	;# 
   252     0212                     	;# 
   253     0212                     	;# 
   254     0213                     	;# 
   255     0213                     	;# 
   256     0214                     	;# 
   257     0214                     	;# 
   258     0215                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0216                     	;# 
   262     0216                     	;# 
   263     0217                     	;# 
   264     0217                     	;# 
   265     0291                     	;# 
   266     0291                     	;# 
   267     0292                     	;# 
   268     0293                     	;# 
   269     0294                     	;# 
   270     0295                     	;# 
   271     0295                     	;# 
   272     0296                     	;# 
   273     0391                     	;# 
   274     0392                     	;# 
   275     0393                     	;# 
   276     039A                     	;# 
   277     039C                     	;# 
   278     039D                     	;# 
   279     039E                     	;# 
   280     039F                     	;# 
   281     0FE4                     	;# 
   282     0FE5                     	;# 
   283     0FE6                     	;# 
   284     0FE7                     	;# 
   285     0FE8                     	;# 
   286     0FE9                     	;# 
   287     0FEA                     	;# 
   288     0FEB                     	;# 
   289     0FED                     	;# 
   290     0FEE                     	;# 
   291     0FEF                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     0011                     	;# 
   306     0012                     	;# 
   307     0015                     	;# 
   308     0016                     	;# 
   309     0016                     	;# 
   310     0017                     	;# 
   311     0018                     	;# 
   312     0019                     	;# 
   313     001A                     	;# 
   314     001B                     	;# 
   315     001C                     	;# 
   316     001E                     	;# 
   317     001F                     	;# 
   318     008C                     	;# 
   319     0091                     	;# 
   320     0092                     	;# 
   321     0095                     	;# 
   322     0096                     	;# 
   323     0097                     	;# 
   324     0098                     	;# 
   325     0099                     	;# 
   326     009A                     	;# 
   327     009B                     	;# 
   328     009B                     	;# 
   329     009C                     	;# 
   330     009D                     	;# 
   331     009E                     	;# 
   332     010C                     	;# 
   333     0111                     	;# 
   334     0112                     	;# 
   335     0115                     	;# 
   336     0116                     	;# 
   337     0117                     	;# 
   338     0118                     	;# 
   339     0119                     	;# 
   340     011A                     	;# 
   341     011B                     	;# 
   342     011D                     	;# 
   343     011D                     	;# 
   344     018C                     	;# 
   345     0191                     	;# 
   346     0191                     	;# 
   347     0192                     	;# 
   348     0193                     	;# 
   349     0193                     	;# 
   350     0193                     	;# 
   351     0194                     	;# 
   352     0195                     	;# 
   353     0196                     	;# 
   354     0199                     	;# 
   355     019A                     	;# 
   356     019B                     	;# 
   357     019B                     	;# 
   358     019B                     	;# 
   359     019B                     	;# 
   360     019C                     	;# 
   361     019C                     	;# 
   362     019D                     	;# 
   363     019E                     	;# 
   364     019F                     	;# 
   365     020C                     	;# 
   366     0211                     	;# 
   367     0211                     	;# 
   368     0212                     	;# 
   369     0212                     	;# 
   370     0213                     	;# 
   371     0213                     	;# 
   372     0214                     	;# 
   373     0214                     	;# 
   374     0215                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0216                     	;# 
   378     0216                     	;# 
   379     0217                     	;# 
   380     0217                     	;# 
   381     0291                     	;# 
   382     0291                     	;# 
   383     0292                     	;# 
   384     0293                     	;# 
   385     0294                     	;# 
   386     0295                     	;# 
   387     0295                     	;# 
   388     0296                     	;# 
   389     0391                     	;# 
   390     0392                     	;# 
   391     0393                     	;# 
   392     039A                     	;# 
   393     039C                     	;# 
   394     039D                     	;# 
   395     039E                     	;# 
   396     039F                     	;# 
   397     0FE4                     	;# 
   398     0FE5                     	;# 
   399     0FE6                     	;# 
   400     0FE7                     	;# 
   401     0FE8                     	;# 
   402     0FE9                     	;# 
   403     0FEA                     	;# 
   404     0FEB                     	;# 
   405     0FED                     	;# 
   406     0FEE                     	;# 
   407     0FEF                     	;# 
   408                           
   409                           	psect	idataBANK0
   410     03FA                     __pidataBANK0:
   411                           
   412                           ;initializer for _add
   413     03FA  3401               	retlw	1
   414                           
   415                           	psect	stringtext1
   416     01C6                     __pstringtext1:
   417     01C6                     _TABLE:
   418     01C6  34F0               	retlw	240
   419     01C7  3425               	retlw	37
   420     01C8  34CE               	retlw	206
   421     01C9  3423               	retlw	35
   422     01CA  34CE               	retlw	206
   423     01CB  3421               	retlw	33
   424     01CC  34EC               	retlw	236
   425     01CD  341F               	retlw	31
   426     01CE  342A               	retlw	42
   427     01CF  341E               	retlw	30
   428     01D0  3482               	retlw	130
   429     01D1  341C               	retlw	28
   430     01D2  34F4               	retlw	244
   431     01D3  341A               	retlw	26
   432     01D4  347E               	retlw	126
   433     01D5  3419               	retlw	25
   434     01D6  3420               	retlw	32
   435     01D7  3418               	retlw	24
   436     01D8  349E               	retlw	158
   437     01D9  3415               	retlw	21
   438     01DA  347A               	retlw	122
   439     01DB  3414               	retlw	20
   440     01DC  3466               	retlw	102
   441     01DD  3413               	retlw	19
   442     01DE  3464               	retlw	100
   443     01DF  3412               	retlw	18
   444     01E0  3470               	retlw	112
   445     01E1  3411               	retlw	17
   446     01E2  348A               	retlw	138
   447     01E3  3410               	retlw	16
   448     01E4  34B0               	retlw	176
   449     01E5  340F               	retlw	15
   450     01E6  34E4               	retlw	228
   451     01E7  340E               	retlw	14
   452     01E8  3424               	retlw	36
   453     01E9  340E               	retlw	14
   454     01EA  346E               	retlw	110
   455     01EB  340D               	retlw	13
   456     01EC  34C2               	retlw	194
   457     01ED  340C               	retlw	12
   458     01EE  3420               	retlw	32
   459     01EF  340C               	retlw	12
   460     01F0  3486               	retlw	134
   461     01F1  340B               	retlw	11
   462     01F2  34F6               	retlw	246
   463     01F3  340A               	retlw	10
   464     01F4  346C               	retlw	108
   465     01F5  340A               	retlw	10
   466     01F6  34EC               	retlw	236
   467     01F7  3409               	retlw	9
   468     01F8  3472               	retlw	114
   469     01F9  3409               	retlw	9
   470     01FA  34FE               	retlw	254
   471     01FB  3408               	retlw	8
   472     01FC  3490               	retlw	144
   473     01FD  3408               	retlw	8
   474     01FE  3428               	retlw	40
   475     01FF  3408               	retlw	8
   476     0200  34C6               	retlw	198
   477     0201  3407               	retlw	7
   478     0202  3469               	retlw	105
   479     0203  3407               	retlw	7
   480     0204  3411               	retlw	17
   481     0205  3407               	retlw	7
   482     0206  34BE               	retlw	190
   483     0207  3406               	retlw	6
   484     0208  346E               	retlw	110
   485     0209  3406               	retlw	6
   486     020A  3423               	retlw	35
   487     020B  3406               	retlw	6
   488     020C  34DC               	retlw	220
   489     020D  3405               	retlw	5
   490     020E  3498               	retlw	152
   491     020F  3405               	retlw	5
   492     0210  3458               	retlw	88
   493     0211  3405               	retlw	5
   494     0212  341B               	retlw	27
   495     0213  3405               	retlw	5
   496     0214  34E1               	retlw	225
   497     0215  3404               	retlw	4
   498     0216  34AA               	retlw	170
   499     0217  3404               	retlw	4
   500     0218  3476               	retlw	118
   501     0219  3404               	retlw	4
   502     021A  3444               	retlw	68
   503     021B  3404               	retlw	4
   504     021C  3415               	retlw	21
   505     021D  3404               	retlw	4
   506     021E  34E8               	retlw	232
   507     021F  3403               	retlw	3
   508     0220  34BD               	retlw	189
   509     0221  3403               	retlw	3
   510     0222  3494               	retlw	148
   511     0223  3403               	retlw	3
   512     0224  346D               	retlw	109
   513     0225  3403               	retlw	3
   514     0226  3448               	retlw	72
   515     0227  3403               	retlw	3
   516     0228  3425               	retlw	37
   517     0229  3403               	retlw	3
   518     022A  3404               	retlw	4
   519     022B  3403               	retlw	3
   520     022C  34E4               	retlw	228
   521     022D  3402               	retlw	2
   522     022E  34C5               	retlw	197
   523     022F  3402               	retlw	2
   524     0230  34A8               	retlw	168
   525     0231  3402               	retlw	2
   526     0232  348D               	retlw	141
   527     0233  3402               	retlw	2
   528     0234  3472               	retlw	114
   529     0235  3402               	retlw	2
   530     0236  3459               	retlw	89
   531     0237  3402               	retlw	2
   532     0238  3441               	retlw	65
   533     0239  3402               	retlw	2
   534     023A  342A               	retlw	42
   535     023B  3402               	retlw	2
   536     023C  3414               	retlw	20
   537     023D  3402               	retlw	2
   538     023E  34FF               	retlw	255
   539     023F  3401               	retlw	1
   540     0240  34EB               	retlw	235
   541     0241  3401               	retlw	1
   542     0242  34D8               	retlw	216
   543     0243  3401               	retlw	1
   544     0244  34C6               	retlw	198
   545     0245  3401               	retlw	1
   546     0246  34B4               	retlw	180
   547     0247  3401               	retlw	1
   548     0248  34A4               	retlw	164
   549     0249  3401               	retlw	1
   550     024A  3494               	retlw	148
   551     024B  3401               	retlw	1
   552     024C  3484               	retlw	132
   553     024D  3401               	retlw	1
   554     024E  3476               	retlw	118
   555     024F  3401               	retlw	1
   556     0250  3468               	retlw	104
   557     0251  3401               	retlw	1
   558     0252  345A               	retlw	90
   559     0253  3401               	retlw	1
   560     0254  344E               	retlw	78
   561     0255  3401               	retlw	1
   562     0256  3441               	retlw	65
   563     0257  3401               	retlw	1
   564     0258  3435               	retlw	53
   565     0259  3401               	retlw	1
   566     025A  342A               	retlw	42
   567     025B  3401               	retlw	1
   568     025C  341F               	retlw	31
   569     025D  3401               	retlw	1
   570     025E  3415               	retlw	21
   571     025F  3401               	retlw	1
   572     0260  340B               	retlw	11
   573     0261  3401               	retlw	1
   574     0262  3402               	retlw	2
   575     0263  3401               	retlw	1
   576     0264  34F8               	retlw	248
   577     0265  3400               	retlw	0
   578     0266                     __end_of_TABLE:
   579     000B                     _INTCONbits	set	11
   580     001B                     _PR2	set	27
   581     0011                     _PIR1bits	set	17
   582     000C                     _PORTAbits	set	12
   583     001C                     _T2CONbits	set	28
   584     009E                     _ADCON1	set	158
   585     0099                     _OSCCON	set	153
   586     0091                     _PIE1bits	set	145
   587     009B                     _ADRESL	set	155
   588     009C                     _ADRESH	set	156
   589     009D                     _ADCON0bits	set	157
   590     008C                     _TRISAbits	set	140
   591     011D                     _APFCONbits	set	285
   592     018C                     _ANSELAbits	set	396
   593     0293                     _CCP1CONbits	set	659
   594     0293                     _CCP1CON	set	659
   595     0291                     _CCPR1L	set	657
   596                           
   597                           	psect	cinit
   598     00DF                     start_initialization:	
   599                           ; #config settings
   600                           
   601     00DF                     __initialization:
   602                           
   603                           ; Initialize objects allocated to BANK0
   604     00DF  3183  23FA  3180   	fcall	__pidataBANK0	;fetch initializer
   605     00E2  00D6               	movwf	__pdataBANK0& (0+127)
   606                           
   607                           ; Clear objects allocated to COMMON
   608     00E3  01F6               	clrf	__pbssCOMMON& (0+127)
   609     00E4  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   610     00E5  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   611     00E6  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   612     00E7  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   613                           
   614                           ; Clear objects allocated to BANK0
   615     00E8  3044               	movlw	low __pbssBANK0
   616     00E9  0084               	movwf	4
   617     00EA  3000               	movlw	high __pbssBANK0
   618     00EB  0085               	movwf	5
   619     00EC  3012               	movlw	18
   620     00ED  3183  23F4  3180   	fcall	clear_ram0
   621     00F0                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624     00F0                     __end_of__initialization:
   625     00F0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   626     00F1  0020               	movlb	0
   627     00F2  3183  2B7B         	ljmp	_main	;jump to C main() function
   628                           
   629                           	psect	bssCOMMON
   630     0076                     __pbssCOMMON:
   631     0076                     _r:
   632     0076                     	ds	2
   633     0078                     _t:
   634     0078                     	ds	2
   635     007A                     _timerActive:
   636     007A                     	ds	1
   637                           
   638                           	psect	bssBANK0
   639     0044                     __pbssBANK0:
   640     0044                     _ad1:
   641     0044                     	ds	4
   642     0048                     _Rt:
   643     0048                     	ds	4
   644     004C                     _ad3:
   645     004C                     	ds	2
   646     004E                     _ad2:
   647     004E                     	ds	2
   648     0050                     _timerCounter:
   649     0050                     	ds	2
   650     0052                     _y:
   651     0052                     	ds	2
   652     0054                     _v:
   653     0054                     	ds	2
   654                           
   655                           	psect	dataBANK0
   656     0056                     __pdataBANK0:
   657     0056                     _add:
   658     0056                     	ds	1
   659                           
   660                           	psect	clrtext
   661     03F4                     clear_ram0:	
   662                           ;	Called with FSR0 containing the base address, and
   663                           ;	WREG with the size to clear
   664                           
   665     03F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   666     03F5                     clrloop0:
   667     03F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   668     03F6  3101               	addfsr 0,1
   669     03F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   670     03F8  2BF5               	goto	clrloop0	;have we reached the end yet?
   671     03F9  3400               	retlw	0	;all done for this memory range, return
   672                           
   673                           	psect	cstackCOMMON
   674     0070                     __pcstackCOMMON:
   675     0070                     ?_setup:
   676     0070                     ?_PWMinit:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_ADsensing:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_Tempjudgements:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_main:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_ISR:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ??_ISR:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 1 bytes @ 0x0
   696     0070                     	ds	4
   697     0074                     ISR@p:
   698                           
   699                           ; 1 bytes @ 0x4
   700     0074                     	ds	1
   701     0075                     ISR@i:
   702                           
   703                           ; 1 bytes @ 0x5
   704     0075                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707     0020                     __pcstackBANK0:
   708     0020                     ??_setup:
   709     0020                     ??_PWMinit:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0020                     ??_Tempjudgements:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0020                     ?_getADCValue:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0020                     ?___wmul:	
   719                           ; 2 bytes @ 0x0
   720                           
   721     0020                     ?___lmul:	
   722                           ; 2 bytes @ 0x0
   723                           
   724     0020                     ___wmul@multiplier:	
   725                           ; 4 bytes @ 0x0
   726                           
   727     0020                     ___lmul@multiplier:	
   728                           ; 2 bytes @ 0x0
   729                           
   730                           
   731                           ; 4 bytes @ 0x0
   732     0020                     	ds	2
   733     0022                     ??_getADCValue:
   734     0022                     ___wmul@multiplicand:	
   735                           ; 1 bytes @ 0x2
   736                           
   737                           
   738                           ; 2 bytes @ 0x2
   739     0022                     	ds	2
   740     0024                     ??___wmul:
   741     0024                     ___wmul@product:	
   742                           ; 1 bytes @ 0x4
   743                           
   744     0024                     ___lmul@multiplicand:	
   745                           ; 2 bytes @ 0x4
   746                           
   747                           
   748                           ; 4 bytes @ 0x4
   749     0024                     	ds	4
   750     0028                     ??___lmul:
   751     0028                     ___lmul@product:	
   752                           ; 1 bytes @ 0x8
   753                           
   754                           
   755                           ; 4 bytes @ 0x8
   756     0028                     	ds	1
   757     0029                     getADCValue@channel:
   758                           
   759                           ; 1 bytes @ 0x9
   760     0029                     	ds	3
   761     002C                     ?___lldiv:
   762     002C                     ___lldiv@divisor:	
   763                           ; 4 bytes @ 0xC
   764                           
   765                           
   766                           ; 4 bytes @ 0xC
   767     002C                     	ds	4
   768     0030                     ___lldiv@dividend:
   769                           
   770                           ; 4 bytes @ 0x10
   771     0030                     	ds	4
   772     0034                     ??___lldiv:
   773                           
   774                           ; 1 bytes @ 0x14
   775     0034                     	ds	1
   776     0035                     ___lldiv@quotient:
   777                           
   778                           ; 4 bytes @ 0x15
   779     0035                     	ds	4
   780     0039                     ___lldiv@counter:
   781                           
   782                           ; 1 bytes @ 0x19
   783     0039                     	ds	1
   784     003A                     ??_ADsensing:
   785                           
   786                           ; 1 bytes @ 0x1A
   787     003A                     	ds	4
   788     003E                     ADsensing@VR:
   789                           
   790                           ; 4 bytes @ 0x1E
   791     003E                     	ds	4
   792     0042                     ??_main:
   793                           
   794                           ; 1 bytes @ 0x22
   795     0042                     	ds	2
   796                           
   797                           	psect	maintext
   798     037B                     __pmaintext:	
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 39 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : B1F/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   818 ;;      Params:         0       0       0       0
   819 ;;      Locals:         0       0       0       0
   820 ;;      Temps:          0       2       0       0
   821 ;;      Totals:         0       2       0       0
   822 ;;Total ram usage:        2 bytes
   823 ;; Hardware stack levels required when called: 3
   824 ;; This function calls:
   825 ;;		_ADsensing
   826 ;;		_PWMinit
   827 ;;		_Tempjudgements
   828 ;;		_setup
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834     037B                     _main:	
   835                           ;psect for function _main
   836                           
   837     037B                     l1343:	
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   840                           
   841                           
   842                           ;main.c: 41:  timerActive = 0;
   843     037B  01FA               	clrf	_timerActive
   844                           
   845                           ;main.c: 42:     timerCounter = 0;
   846     037C  0020               	movlb	0	; select bank0
   847     037D  01D0               	clrf	_timerCounter
   848     037E  01D1               	clrf	_timerCounter+1
   849     037F                     l1345:
   850                           
   851                           ;main.c: 44:     setup();
   852     037F  3183  23CA  3183   	fcall	_setup
   853     0382                     l1347:
   854                           
   855                           ;main.c: 45:     PWMinit();
   856     0382  3183  23DF  3183   	fcall	_PWMinit
   857     0385                     l1349:
   858                           
   859                           ;main.c: 47:     _delay((unsigned long)((1000)*(32000000/4000.0)));
   860     0385  3029               	movlw	41
   861     0386  0020               	movlb	0	; select bank0
   862     0387  00C3               	movwf	??_main+1
   863     0388  3096               	movlw	150
   864     0389  00C2               	movwf	??_main
   865     038A  307F               	movlw	127
   866     038B                     u1067:
   867     038B  0B89               	decfsz	9,f
   868     038C  2B8B               	goto	u1067
   869     038D  0BC2               	decfsz	??_main,f
   870     038E  2B8B               	goto	u1067
   871     038F  0BC3               	decfsz	??_main+1,f
   872     0390  2B8B               	goto	u1067
   873     0391                     l1351:
   874                           
   875                           ;main.c: 48:  T2CONbits.TMR2ON = 1;
   876     0391  0020               	movlb	0	; select bank0
   877     0392  151C               	bsf	28,2	;volatile
   878     0393                     l1353:
   879                           
   880                           ;main.c: 49:  TRISAbits.TRISA5 = 0;
   881     0393  0021               	movlb	1	; select bank1
   882     0394  128C               	bcf	12,5	;volatile
   883     0395                     l1355:
   884                           
   885                           ;main.c: 52:     {;main.c: 53:   ADsensing();
   886     0395  3180  20F4  3183   	fcall	_ADsensing
   887     0398                     l1357:
   888                           
   889                           ;main.c: 54:   Tempjudgements();
   890     0398  3182  22C1  3183   	fcall	_Tempjudgements
   891     039B                     l1359:
   892                           
   893                           ;main.c: 56:   _delay((unsigned long)((100)*(32000000/4000.0)));
   894     039B  3005               	movlw	5
   895     039C  0020               	movlb	0	; select bank0
   896     039D  00C3               	movwf	??_main+1
   897     039E  300F               	movlw	15
   898     039F  00C2               	movwf	??_main
   899     03A0  30F1               	movlw	241
   900     03A1                     u1077:
   901     03A1  0B89               	decfsz	9,f
   902     03A2  2BA1               	goto	u1077
   903     03A3  0BC2               	decfsz	??_main,f
   904     03A4  2BA1               	goto	u1077
   905     03A5  0BC3               	decfsz	??_main+1,f
   906     03A6  2BA1               	goto	u1077
   907     03A7  2B95               	goto	l1355
   908     03A8  3180  28DD         	ljmp	start
   909     03AA                     __end_of_main:
   910                           
   911                           	psect	text1
   912     03CA                     __ptext1:	
   913 ;; *************** function _setup *****************
   914 ;; Defined at:
   915 ;;		line 5 in file "KF2.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   929 ;;      Params:         0       0       0       0
   930 ;;      Locals:         0       0       0       0
   931 ;;      Temps:          0       0       0       0
   932 ;;      Totals:         0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943     03CA                     _setup:	
   944                           ;psect for function _setup
   945                           
   946     03CA                     l1281:	
   947                           ;incstack = 0
   948                           ; Regs used in _setup: [wreg]
   949                           
   950                           
   951                           ;KF2.c: 7:     OSCCON = 0b01110000;
   952     03CA  3070               	movlw	112
   953     03CB  0021               	movlb	1	; select bank1
   954     03CC  0099               	movwf	25	;volatile
   955     03CD                     l1283:
   956                           
   957                           ;KF2.c: 10:     PORTAbits.RA4 = 0;
   958     03CD  0020               	movlb	0	; select bank0
   959     03CE  120C               	bcf	12,4	;volatile
   960     03CF                     l1285:
   961                           
   962                           ;KF2.c: 11:     TRISAbits.TRISA4 = 0;
   963     03CF  0021               	movlb	1	; select bank1
   964     03D0  120C               	bcf	12,4	;volatile
   965     03D1                     l1287:
   966                           
   967                           ;KF2.c: 14:     ANSELAbits.ANSA0 = 1;
   968     03D1  0023               	movlb	3	; select bank3
   969     03D2  140C               	bsf	12,0	;volatile
   970     03D3                     l1289:
   971                           
   972                           ;KF2.c: 15:     ANSELAbits.ANSA1 = 1;
   973     03D3  148C               	bsf	12,1	;volatile
   974     03D4                     l1291:
   975                           
   976                           ;KF2.c: 16:     ANSELAbits.ANSA2 = 1;
   977     03D4  150C               	bsf	12,2	;volatile
   978                           
   979                           ;KF2.c: 17:     ADCON1 = 0x50;
   980     03D5  3050               	movlw	80
   981     03D6  0021               	movlb	1	; select bank1
   982     03D7  009E               	movwf	30	;volatile
   983     03D8                     l1293:
   984                           
   985                           ;KF2.c: 18:     PIE1bits.ADIE = 1;
   986     03D8  1711               	bsf	17,6	;volatile
   987     03D9                     l1295:
   988                           
   989                           ;KF2.c: 19:     PIR1bits.ADIF = 0;
   990     03D9  0020               	movlb	0	; select bank0
   991     03DA  1311               	bcf	17,6	;volatile
   992     03DB                     l1297:
   993                           
   994                           ;KF2.c: 20:     ADCON0bits.GO = 0;
   995     03DB  0021               	movlb	1	; select bank1
   996     03DC  109D               	bcf	29,1	;volatile
   997     03DD                     l1299:
   998                           
   999                           ;KF2.c: 21:     ADCON0bits.ADON = 1;
  1000     03DD  141D               	bsf	29,0	;volatile
  1001     03DE                     l144:
  1002     03DE  0008               	return
  1003     03DF                     __end_of_setup:
  1004                           
  1005                           	psect	text2
  1006     02C1                     __ptext2:	
  1007 ;; *************** function _Tempjudgements *****************
  1008 ;; Defined at:
  1009 ;;		line 95 in file "main.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1023 ;;      Params:         0       0       0       0
  1024 ;;      Locals:         0       0       0       0
  1025 ;;      Temps:          0       3       0       0
  1026 ;;      Totals:         0       3       0       0
  1027 ;;Total ram usage:        3 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     02C1                     _Tempjudgements:	
  1038                           ;psect for function _Tempjudgements
  1039                           
  1040     02C1                     l1111:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _Tempjudgements: [wreg+status,2+status,0]
  1043                           
  1044                           
  1045                           ;main.c: 97:  if(v <= (t - 2))
  1046     02C1  0878               	movf	_t,w
  1047     02C2  3EFE               	addlw	254
  1048     02C3  0020               	movlb	0	; select bank0
  1049     02C4  00A0               	movwf	??_Tempjudgements
  1050     02C5  30FF               	movlw	255
  1051     02C6  3D79               	addwfc	_t+1,w
  1052     02C7  00A1               	movwf	??_Tempjudgements+1
  1053     02C8  0821               	movf	??_Tempjudgements+1,w
  1054     02C9  3A80               	xorlw	128
  1055     02CA  00A2               	movwf	??_Tempjudgements+2
  1056     02CB  0855               	movf	_v+1,w
  1057     02CC  3A80               	xorlw	128
  1058     02CD  0222               	subwf	??_Tempjudgements+2,w
  1059     02CE  1D03               	skipz
  1060     02CF  2AD2               	goto	u645
  1061     02D0  0854               	movf	_v,w
  1062     02D1  0220               	subwf	??_Tempjudgements,w
  1063     02D2                     u645:
  1064     02D2  1C03               	skipc
  1065     02D3  2AD5               	goto	u641
  1066     02D4  2AD6               	goto	u640
  1067     02D5                     u641:
  1068     02D5  2AF5               	goto	l1121
  1069     02D6                     u640:
  1070     02D6                     l1113:
  1071                           
  1072                           ;main.c: 98:   {;main.c: 99:    PORTAbits.RA4 = 1;
  1073     02D6  0020               	movlb	0	; select bank0
  1074     02D7  160C               	bsf	12,4	;volatile
  1075     02D8                     l1115:
  1076                           
  1077                           ;main.c: 100:    y = 1;
  1078     02D8  3001               	movlw	1
  1079     02D9  00D2               	movwf	_y
  1080     02DA  3000               	movlw	0
  1081     02DB  00D3               	movwf	_y+1
  1082                           
  1083                           ;main.c: 101:    if (r < 100 || r > 900)
  1084     02DC  3000               	movlw	0
  1085     02DD  0277               	subwf	_r+1,w
  1086     02DE  3064               	movlw	100
  1087     02DF  1903               	skipnz
  1088     02E0  0276               	subwf	_r,w
  1089     02E1  1C03               	skipc
  1090     02E2  2AE4               	goto	u651
  1091     02E3  2AE5               	goto	u650
  1092     02E4                     u651:
  1093     02E4  2AEE               	goto	l83
  1094     02E5                     u650:
  1095     02E5                     l1117:
  1096     02E5  3003               	movlw	3
  1097     02E6  0277               	subwf	_r+1,w
  1098     02E7  3085               	movlw	133
  1099     02E8  1903               	skipnz
  1100     02E9  0276               	subwf	_r,w
  1101     02EA  1C03               	skipc
  1102     02EB  2AED               	goto	u661
  1103     02EC  2AEE               	goto	u660
  1104     02ED                     u661:
  1105     02ED  2AF1               	goto	l1119
  1106     02EE                     u660:
  1107     02EE                     l83:
  1108                           
  1109                           ;main.c: 102:    {;main.c: 103:     timerActive = 1;
  1110     02EE  01FA               	clrf	_timerActive
  1111     02EF  0AFA               	incf	_timerActive,f
  1112                           
  1113                           ;main.c: 104:    }
  1114     02F0  2B0B               	goto	l87
  1115     02F1                     l1119:
  1116                           
  1117                           ;main.c: 106:    {;main.c: 107:     timerActive = 0;
  1118     02F1  01FA               	clrf	_timerActive
  1119                           
  1120                           ;main.c: 108:     timerCounter = 0;
  1121     02F2  01D0               	clrf	_timerCounter
  1122     02F3  01D1               	clrf	_timerCounter+1
  1123     02F4  2B0B               	goto	l87
  1124     02F5                     l1121:
  1125     02F5  0879               	movf	_t+1,w
  1126     02F6  3A80               	xorlw	128
  1127     02F7  0020               	movlb	0	; select bank0
  1128     02F8  00A0               	movwf	??_Tempjudgements
  1129     02F9  0855               	movf	_v+1,w
  1130     02FA  3A80               	xorlw	128
  1131     02FB  0220               	subwf	??_Tempjudgements,w
  1132     02FC  1D03               	skipz
  1133     02FD  2B00               	goto	u675
  1134     02FE  0854               	movf	_v,w
  1135     02FF  0278               	subwf	_t,w
  1136     0300                     u675:
  1137     0300  1803               	skipnc
  1138     0301  2B03               	goto	u671
  1139     0302  2B04               	goto	u670
  1140     0303                     u671:
  1141     0303  2B0B               	goto	l87
  1142     0304                     u670:
  1143     0304                     l1123:
  1144                           
  1145                           ;main.c: 112:   {;main.c: 113:    PORTAbits.RA4 = 0;
  1146     0304  0020               	movlb	0	; select bank0
  1147     0305  120C               	bcf	12,4	;volatile
  1148     0306                     l1125:
  1149                           
  1150                           ;main.c: 114:    y = 0;
  1151     0306  01D2               	clrf	_y
  1152     0307  01D3               	clrf	_y+1
  1153                           
  1154                           ;main.c: 115:    timerActive = 0;
  1155     0308  01FA               	clrf	_timerActive
  1156                           
  1157                           ;main.c: 116:    timerCounter = 0;
  1158     0309  01D0               	clrf	_timerCounter
  1159     030A  01D1               	clrf	_timerCounter+1
  1160     030B                     l87:
  1161     030B  0008               	return
  1162     030C                     __end_of_Tempjudgements:
  1163                           
  1164                           	psect	text3
  1165     03DF                     __ptext3:	
  1166 ;; *************** function _PWMinit *****************
  1167 ;; Defined at:
  1168 ;;		line 24 in file "KF2.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1182 ;;      Params:         0       0       0       0
  1183 ;;      Locals:         0       0       0       0
  1184 ;;      Temps:          0       0       0       0
  1185 ;;      Totals:         0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196     03DF                     _PWMinit:	
  1197                           ;psect for function _PWMinit
  1198                           
  1199     03DF                     l1301:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1202                           
  1203                           
  1204                           ;KF2.c: 26:  TRISAbits.TRISA5 = 1;
  1205     03DF  0021               	movlb	1	; select bank1
  1206     03E0  168C               	bsf	12,5	;volatile
  1207                           
  1208                           ;KF2.c: 27:  APFCONbits.CCP1SEL = 1;
  1209     03E1  0022               	movlb	2	; select bank2
  1210     03E2  141D               	bsf	29,0	;volatile
  1211     03E3                     l1303:
  1212                           
  1213                           ;KF2.c: 28:     PR2 = 254;
  1214     03E3  30FE               	movlw	254
  1215     03E4  0020               	movlb	0	; select bank0
  1216     03E5  009B               	movwf	27	;volatile
  1217     03E6                     l1305:
  1218                           
  1219                           ;KF2.c: 29:  CCP1CONbits.CCP1M = 0x0F;
  1220     03E6  300F               	movlw	15
  1221     03E7  0025               	movlb	5	; select bank5
  1222     03E8  0493               	iorwf	19,f	;volatile
  1223     03E9                     l1307:
  1224                           
  1225                           ;KF2.c: 30:  CCP1CONbits.P1M = 0;
  1226     03E9  303F               	movlw	-193
  1227     03EA  0593               	andwf	19,f	;volatile
  1228     03EB                     l1309:
  1229                           
  1230                           ;KF2.c: 31:     INTCONbits.GIE = 1;
  1231     03EB  178B               	bsf	11,7	;volatile
  1232     03EC                     l1311:
  1233                           
  1234                           ;KF2.c: 32:     INTCONbits.PEIE = 1;
  1235     03EC  170B               	bsf	11,6	;volatile
  1236     03ED                     l1313:
  1237                           
  1238                           ;KF2.c: 33:     PIE1bits.TMR2IE = 1;
  1239     03ED  0021               	movlb	1	; select bank1
  1240     03EE  1491               	bsf	17,1	;volatile
  1241     03EF                     l1315:
  1242                           
  1243                           ;KF2.c: 34:     PIR1bits.TMR2IF = 0;
  1244     03EF  0020               	movlb	0	; select bank0
  1245     03F0  1091               	bcf	17,1	;volatile
  1246     03F1                     l1317:
  1247                           
  1248                           ;KF2.c: 35:     T2CONbits.T2CKPS = 3;
  1249     03F1  3003               	movlw	3
  1250     03F2  049C               	iorwf	28,f	;volatile
  1251     03F3                     l147:
  1252     03F3  0008               	return
  1253     03F4                     __end_of_PWMinit:
  1254                           
  1255                           	psect	text4
  1256     00F4                     __ptext4:	
  1257 ;; *************** function _ADsensing *****************
  1258 ;; Defined at:
  1259 ;;		line 70 in file "main.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  VR              4   30[BANK0 ] unsigned long 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1273 ;;      Params:         0       0       0       0
  1274 ;;      Locals:         0       4       0       0
  1275 ;;      Temps:          0       4       0       0
  1276 ;;      Totals:         0       8       0       0
  1277 ;;Total ram usage:        8 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 2
  1280 ;; This function calls:
  1281 ;;		___lldiv
  1282 ;;		___lmul
  1283 ;;		___wmul
  1284 ;;		_getADCValue
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290     00F4                     _ADsensing:	
  1291                           ;psect for function _ADsensing
  1292                           
  1293     00F4                     l1319:	
  1294                           ;incstack = 0
  1295                           ; Regs used in _ADsensing: [wreg+status,2+status,0+pclath+cstack]
  1296                           
  1297                           
  1298                           ;main.c: 72:  if(add == 1)
  1299     00F4  0020               	movlb	0	; select bank0
  1300     00F5  0356               	decf	_add,w
  1301     00F6  1D03               	btfss	3,2
  1302     00F7  28F9               	goto	u1021
  1303     00F8  28FA               	goto	u1020
  1304     00F9                     u1021:
  1305     00F9  298D               	goto	l1331
  1306     00FA                     u1020:
  1307     00FA                     l1321:
  1308                           
  1309                           ;main.c: 73:         {;main.c: 74:             unsigned long VR;;main.c: 75:            
      +                           ad1 = getADCValue(0x00);
  1310     00FA  3000               	movlw	0
  1311     00FB  3183  230C  3180   	fcall	_getADCValue
  1312     00FE  0020               	movlb	0	; select bank0
  1313     00FF  0820               	movf	?_getADCValue,w
  1314     0100  00C4               	movwf	_ad1
  1315     0101  0821               	movf	?_getADCValue+1,w
  1316     0102  00C5               	movwf	_ad1+1
  1317     0103  01C6               	clrf	_ad1+2
  1318     0104  01C7               	clrf	_ad1+3
  1319     0105                     l1323:
  1320                           
  1321                           ;main.c: 76:             ad1 = 1024 - ad1;
  1322     0105  3000               	movlw	0
  1323     0106  00BA               	movwf	??_ADsensing
  1324     0107  3004               	movlw	4
  1325     0108  00BB               	movwf	??_ADsensing+1
  1326     0109  3000               	movlw	0
  1327     010A  00BC               	movwf	??_ADsensing+2
  1328     010B  3000               	movlw	0
  1329     010C  00BD               	movwf	??_ADsensing+3
  1330     010D  0844               	movf	_ad1,w
  1331     010E  02BA               	subwf	??_ADsensing,f
  1332     010F  0845               	movf	_ad1+1,w
  1333     0110  3BBB               	subwfb	??_ADsensing+1,f
  1334     0111  0846               	movf	_ad1+2,w
  1335     0112  3BBC               	subwfb	??_ADsensing+2,f
  1336     0113  0847               	movf	_ad1+3,w
  1337     0114  3BBD               	subwfb	??_ADsensing+3,f
  1338     0115  083D               	movf	??_ADsensing+3,w
  1339     0116  00C7               	movwf	_ad1+3
  1340     0117  083C               	movf	??_ADsensing+2,w
  1341     0118  00C6               	movwf	_ad1+2
  1342     0119  083B               	movf	??_ADsensing+1,w
  1343     011A  00C5               	movwf	_ad1+1
  1344     011B  083A               	movf	??_ADsensing,w
  1345     011C  00C4               	movwf	_ad1
  1346     011D                     l1325:
  1347                           
  1348                           ;main.c: 77:             VR = ad1 * 500 / 1024;
  1349     011D  0847               	movf	_ad1+3,w
  1350     011E  00A3               	movwf	___lmul@multiplier+3
  1351     011F  0846               	movf	_ad1+2,w
  1352     0120  00A2               	movwf	___lmul@multiplier+2
  1353     0121  0845               	movf	_ad1+1,w
  1354     0122  00A1               	movwf	___lmul@multiplier+1
  1355     0123  0844               	movf	_ad1,w
  1356     0124  00A0               	movwf	___lmul@multiplier
  1357     0125  3000               	movlw	0
  1358     0126  00A7               	movwf	___lmul@multiplicand+3
  1359     0127  3000               	movlw	0
  1360     0128  00A6               	movwf	___lmul@multiplicand+2
  1361     0129  3001               	movlw	1
  1362     012A  00A5               	movwf	___lmul@multiplicand+1
  1363     012B  30F4               	movlw	244
  1364     012C  00A4               	movwf	___lmul@multiplicand
  1365     012D  3183  2347  3180   	fcall	___lmul
  1366     0130  0020               	movlb	0	; select bank0
  1367     0131  0820               	movf	?___lmul,w
  1368     0132  00BA               	movwf	??_ADsensing
  1369     0133  0821               	movf	?___lmul+1,w
  1370     0134  00BB               	movwf	??_ADsensing+1
  1371     0135  0822               	movf	?___lmul+2,w
  1372     0136  00BC               	movwf	??_ADsensing+2
  1373     0137  0823               	movf	?___lmul+3,w
  1374     0138  00BD               	movwf	??_ADsensing+3
  1375     0139  300A               	movlw	10
  1376     013A                     u1035:
  1377     013A  36BD               	lsrf	??_ADsensing+3,f
  1378     013B  0CBC               	rrf	??_ADsensing+2,f
  1379     013C  0CBB               	rrf	??_ADsensing+1,f
  1380     013D  0CBA               	rrf	??_ADsensing,f
  1381     013E                     u1030:
  1382     013E  0B89               	decfsz	9,f
  1383     013F  293A               	goto	u1035
  1384     0140  083D               	movf	??_ADsensing+3,w
  1385     0141  00C1               	movwf	ADsensing@VR+3
  1386     0142  083C               	movf	??_ADsensing+2,w
  1387     0143  00C0               	movwf	ADsensing@VR+2
  1388     0144  083B               	movf	??_ADsensing+1,w
  1389     0145  00BF               	movwf	ADsensing@VR+1
  1390     0146  083A               	movf	??_ADsensing,w
  1391     0147  00BE               	movwf	ADsensing@VR
  1392     0148                     l1327:
  1393                           
  1394                           ;main.c: 78:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
  1395     0148  0841               	movf	ADsensing@VR+3,w
  1396     0149  00AF               	movwf	___lldiv@divisor+3
  1397     014A  0840               	movf	ADsensing@VR+2,w
  1398     014B  00AE               	movwf	___lldiv@divisor+2
  1399     014C  083F               	movf	ADsensing@VR+1,w
  1400     014D  00AD               	movwf	___lldiv@divisor+1
  1401     014E  083E               	movf	ADsensing@VR,w
  1402     014F  00AC               	movwf	___lldiv@divisor
  1403     0150  30F4               	movlw	244
  1404     0151  00BA               	movwf	??_ADsensing
  1405     0152  3001               	movlw	1
  1406     0153  00BB               	movwf	??_ADsensing+1
  1407     0154  3000               	movlw	0
  1408     0155  00BC               	movwf	??_ADsensing+2
  1409     0156  3000               	movlw	0
  1410     0157  00BD               	movwf	??_ADsensing+3
  1411     0158  083E               	movf	ADsensing@VR,w
  1412     0159  02BA               	subwf	??_ADsensing,f
  1413     015A  083F               	movf	ADsensing@VR+1,w
  1414     015B  3BBB               	subwfb	??_ADsensing+1,f
  1415     015C  0840               	movf	ADsensing@VR+2,w
  1416     015D  3BBC               	subwfb	??_ADsensing+2,f
  1417     015E  0841               	movf	ADsensing@VR+3,w
  1418     015F  3BBD               	subwfb	??_ADsensing+3,f
  1419     0160  083D               	movf	??_ADsensing+3,w
  1420     0161  00A3               	movwf	___lmul@multiplier+3
  1421     0162  083C               	movf	??_ADsensing+2,w
  1422     0163  00A2               	movwf	___lmul@multiplier+2
  1423     0164  083B               	movf	??_ADsensing+1,w
  1424     0165  00A1               	movwf	___lmul@multiplier+1
  1425     0166  083A               	movf	??_ADsensing,w
  1426     0167  00A0               	movwf	___lmul@multiplier
  1427     0168  3000               	movlw	0
  1428     0169  00A7               	movwf	___lmul@multiplicand+3
  1429     016A  3000               	movlw	0
  1430     016B  00A6               	movwf	___lmul@multiplicand+2
  1431     016C  3003               	movlw	3
  1432     016D  00A5               	movwf	___lmul@multiplicand+1
  1433     016E  30E8               	movlw	232
  1434     016F  00A4               	movwf	___lmul@multiplicand
  1435     0170  3183  2347  3180   	fcall	___lmul
  1436     0173  0020               	movlb	0	; select bank0
  1437     0174  0823               	movf	?___lmul+3,w
  1438     0175  00B3               	movwf	___lldiv@dividend+3
  1439     0176  0822               	movf	?___lmul+2,w
  1440     0177  00B2               	movwf	___lldiv@dividend+2
  1441     0178  0821               	movf	?___lmul+1,w
  1442     0179  00B1               	movwf	___lldiv@dividend+1
  1443     017A  0820               	movf	?___lmul,w
  1444     017B  00B0               	movwf	___lldiv@dividend
  1445     017C  3182  2266  3180   	fcall	___lldiv
  1446     017F  0020               	movlb	0	; select bank0
  1447     0180  082F               	movf	?___lldiv+3,w
  1448     0181  00CB               	movwf	_Rt+3
  1449     0182  082E               	movf	?___lldiv+2,w
  1450     0183  00CA               	movwf	_Rt+2
  1451     0184  082D               	movf	?___lldiv+1,w
  1452     0185  00C9               	movwf	_Rt+1
  1453     0186  082C               	movf	?___lldiv,w
  1454     0187  00C8               	movwf	_Rt
  1455     0188                     l1329:
  1456                           
  1457                           ;main.c: 79:             add++;
  1458     0188  3001               	movlw	1
  1459     0189  00BA               	movwf	??_ADsensing
  1460     018A  083A               	movf	??_ADsensing,w
  1461     018B  07D6               	addwf	_add,f
  1462                           
  1463                           ;main.c: 80:         }
  1464     018C  29C5               	goto	l77
  1465     018D                     l1331:
  1466     018D  3002               	movlw	2
  1467     018E  0656               	xorwf	_add,w
  1468     018F  1D03               	btfss	3,2
  1469     0190  2992               	goto	u1041
  1470     0191  2993               	goto	u1040
  1471     0192                     u1041:
  1472     0192  29B6               	goto	l1337
  1473     0193                     u1040:
  1474     0193                     l1333:
  1475                           
  1476                           ;main.c: 82:         {;main.c: 83:             ad2 = getADCValue(0x01);
  1477     0193  3001               	movlw	1
  1478     0194  3183  230C  3180   	fcall	_getADCValue
  1479     0197  0020               	movlb	0	; select bank0
  1480     0198  0821               	movf	?_getADCValue+1,w
  1481     0199  00CF               	movwf	_ad2+1
  1482     019A  0820               	movf	?_getADCValue,w
  1483     019B  00CE               	movwf	_ad2
  1484                           
  1485                           ;main.c: 84:             t = (int)(ad2 * 10 / 128);
  1486     019C  084F               	movf	_ad2+1,w
  1487     019D  00A1               	movwf	___wmul@multiplier+1
  1488     019E  084E               	movf	_ad2,w
  1489     019F  00A0               	movwf	___wmul@multiplier
  1490     01A0  300A               	movlw	10
  1491     01A1  00A2               	movwf	___wmul@multiplicand
  1492     01A2  3000               	movlw	0
  1493     01A3  00A3               	movwf	___wmul@multiplicand+1
  1494     01A4  3183  23AA  3180   	fcall	___wmul
  1495     01A7  0020               	movlb	0	; select bank0
  1496     01A8  0820               	movf	?___wmul,w
  1497     01A9  00BA               	movwf	??_ADsensing
  1498     01AA  0821               	movf	?___wmul+1,w
  1499     01AB  00BB               	movwf	??_ADsensing+1
  1500     01AC  3007               	movlw	7
  1501     01AD                     u1055:
  1502     01AD  36BB               	lsrf	??_ADsensing+1,f
  1503     01AE  0CBA               	rrf	??_ADsensing,f
  1504     01AF  0B89               	decfsz	9,f
  1505     01B0  29AD               	goto	u1055
  1506     01B1  083A               	movf	??_ADsensing,w
  1507     01B2  00F8               	movwf	_t
  1508     01B3  083B               	movf	??_ADsensing+1,w
  1509     01B4  00F9               	movwf	_t+1
  1510     01B5  2988               	goto	l1329
  1511     01B6                     l1337:
  1512                           
  1513                           ;main.c: 88:         {;main.c: 89:             ad3 = getADCValue(0x02);
  1514     01B6  3002               	movlw	2
  1515     01B7  3183  230C  3180   	fcall	_getADCValue
  1516     01BA  0020               	movlb	0	; select bank0
  1517     01BB  0821               	movf	?_getADCValue+1,w
  1518     01BC  00CD               	movwf	_ad3+1
  1519     01BD  0820               	movf	?_getADCValue,w
  1520     01BE  00CC               	movwf	_ad3
  1521     01BF                     l1339:
  1522                           
  1523                           ;main.c: 90:             r = ad3;
  1524     01BF  084D               	movf	_ad3+1,w
  1525     01C0  00F7               	movwf	_r+1
  1526     01C1  084C               	movf	_ad3,w
  1527     01C2  00F6               	movwf	_r
  1528     01C3                     l1341:
  1529                           
  1530                           ;main.c: 91:             add = 1;
  1531     01C3  01D6               	clrf	_add
  1532     01C4  0AD6               	incf	_add,f
  1533     01C5                     l77:
  1534     01C5  0008               	return
  1535     01C6                     __end_of_ADsensing:
  1536                           
  1537                           	psect	text5
  1538     030C                     __ptext5:	
  1539 ;; *************** function _getADCValue *****************
  1540 ;; Defined at:
  1541 ;;		line 61 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  channel         1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  channel         1    9[BANK0 ] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  2    0[BANK0 ] unsigned int 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1555 ;;      Params:         0       2       0       0
  1556 ;;      Locals:         0       1       0       0
  1557 ;;      Temps:          0       7       0       0
  1558 ;;      Totals:         0      10       0       0
  1559 ;;Total ram usage:       10 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_ADsensing
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     030C                     _getADCValue:	
  1570                           ;psect for function _getADCValue
  1571                           
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1575                           ;getADCValue@channel stored from wreg
  1576     030C  0020               	movlb	0	; select bank0
  1577     030D  00A9               	movwf	getADCValue@channel
  1578     030E                     l1219:
  1579                           
  1580                           ;main.c: 61: unsigned int getADCValue(unsigned char channel);main.c: 62: {;main.c: 63:  
      +                             ADCON0bits.CHS = channel;
  1581     030E  0829               	movf	getADCValue@channel,w
  1582     030F  00A2               	movwf	??_getADCValue
  1583     0310  0DA2               	rlf	??_getADCValue,f
  1584     0311  0DA2               	rlf	??_getADCValue,f
  1585     0312  0021               	movlb	1	; select bank1
  1586     0313  081D               	movf	29,w	;volatile
  1587     0314  0020               	movlb	0	; select bank0
  1588     0315  0622               	xorwf	??_getADCValue,w
  1589     0316  3983               	andlw	-125
  1590     0317  0622               	xorwf	??_getADCValue,w
  1591     0318  0021               	movlb	1	; select bank1
  1592     0319  009D               	movwf	29	;volatile
  1593     031A                     l1221:
  1594                           
  1595                           ;main.c: 64:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1596     031A  3034               	movlw	52
  1597     031B  0020               	movlb	0	; select bank0
  1598     031C  00A2               	movwf	??_getADCValue
  1599     031D  30F1               	movlw	241
  1600     031E                     u1087:
  1601     031E  0B89               	decfsz	9,f
  1602     031F  2B1E               	goto	u1087
  1603     0320  0BA2               	decfsz	??_getADCValue,f
  1604     0321  2B1E               	goto	u1087
  1605     0322  3200               	nop2
  1606     0323                     l1223:
  1607                           
  1608                           ;main.c: 65:     ADCON0bits.GO = 1;
  1609     0323  0021               	movlb	1	; select bank1
  1610     0324  149D               	bsf	29,1	;volatile
  1611     0325                     l67:	
  1612                           ;main.c: 66:     while (ADCON0bits.GO);
  1613                           
  1614     0325  189D               	btfsc	29,1	;volatile
  1615     0326  2B28               	goto	u851
  1616     0327  2B29               	goto	u850
  1617     0328                     u851:
  1618     0328  2B25               	goto	l67
  1619     0329                     u850:
  1620     0329                     l1225:
  1621                           
  1622                           ;main.c: 67:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1623     0329  081B               	movf	27,w	;volatile
  1624     032A  0020               	movlb	0	; select bank0
  1625     032B  00A2               	movwf	??_getADCValue
  1626     032C  3006               	movlw	6
  1627     032D                     u865:
  1628     032D  36A2               	lsrf	??_getADCValue,f
  1629     032E  0B89               	decfsz	9,f
  1630     032F  2B2D               	goto	u865
  1631     0330  0822               	movf	??_getADCValue,w
  1632     0331  00A3               	movwf	??_getADCValue+1
  1633     0332  01A4               	clrf	??_getADCValue+2
  1634     0333  0021               	movlb	1	; select bank1
  1635     0334  081C               	movf	28,w	;volatile
  1636     0335  0020               	movlb	0	; select bank0
  1637     0336  00A5               	movwf	??_getADCValue+3
  1638     0337  01A6               	clrf	??_getADCValue+4
  1639     0338  35A5               	lslf	??_getADCValue+3,f
  1640     0339  0DA6               	rlf	??_getADCValue+4,f
  1641     033A  35A5               	lslf	??_getADCValue+3,f
  1642     033B  0DA6               	rlf	??_getADCValue+4,f
  1643     033C  0823               	movf	??_getADCValue+1,w
  1644     033D  0425               	iorwf	??_getADCValue+3,w
  1645     033E  00A7               	movwf	??_getADCValue+5
  1646     033F  0824               	movf	??_getADCValue+2,w
  1647     0340  0426               	iorwf	??_getADCValue+4,w
  1648     0341  00A8               	movwf	??_getADCValue+6
  1649     0342  0827               	movf	??_getADCValue+5,w
  1650     0343  00A0               	movwf	?_getADCValue
  1651     0344  0828               	movf	??_getADCValue+6,w
  1652     0345  00A1               	movwf	?_getADCValue+1
  1653     0346                     l70:
  1654     0346  0008               	return
  1655     0347                     __end_of_getADCValue:
  1656                           
  1657                           	psect	text6
  1658     03AA                     __ptext6:	
  1659 ;; *************** function ___wmul *****************
  1660 ;; Defined at:
  1661 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul16.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1664 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  product         2    4[BANK0 ] unsigned int 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2    0[BANK0 ] unsigned int 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1676 ;;      Params:         0       4       0       0
  1677 ;;      Locals:         0       2       0       0
  1678 ;;      Temps:          0       0       0       0
  1679 ;;      Totals:         0       6       0       0
  1680 ;;Total ram usage:        6 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_ADsensing
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     03AA                     ___wmul:	
  1691                           ;psect for function ___wmul
  1692                           
  1693     03AA                     l1229:	
  1694                           ;incstack = 0
  1695                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1696                           
  1697     03AA  0020               	movlb	0	; select bank0
  1698     03AB  01A4               	clrf	___wmul@product
  1699     03AC  01A5               	clrf	___wmul@product+1
  1700     03AD                     l1231:
  1701     03AD  1C20               	btfss	___wmul@multiplier,0
  1702     03AE  2BB0               	goto	u871
  1703     03AF  2BB1               	goto	u870
  1704     03B0                     u871:
  1705     03B0  2BB5               	goto	l297
  1706     03B1                     u870:
  1707     03B1                     l1233:
  1708     03B1  0822               	movf	___wmul@multiplicand,w
  1709     03B2  07A4               	addwf	___wmul@product,f
  1710     03B3  0823               	movf	___wmul@multiplicand+1,w
  1711     03B4  3DA5               	addwfc	___wmul@product+1,f
  1712     03B5                     l297:
  1713     03B5  3001               	movlw	1
  1714     03B6                     u885:
  1715     03B6  35A2               	lslf	___wmul@multiplicand,f
  1716     03B7  0DA3               	rlf	___wmul@multiplicand+1,f
  1717     03B8  0B89               	decfsz	9,f
  1718     03B9  2BB6               	goto	u885
  1719     03BA                     l1235:
  1720     03BA  3001               	movlw	1
  1721     03BB                     u895:
  1722     03BB  36A1               	lsrf	___wmul@multiplier+1,f
  1723     03BC  0CA0               	rrf	___wmul@multiplier,f
  1724     03BD  0B89               	decfsz	9,f
  1725     03BE  2BBB               	goto	u895
  1726     03BF                     l1237:
  1727     03BF  0820               	movf	___wmul@multiplier,w
  1728     03C0  0421               	iorwf	___wmul@multiplier+1,w
  1729     03C1  1D03               	btfss	3,2
  1730     03C2  2BC4               	goto	u901
  1731     03C3  2BC5               	goto	u900
  1732     03C4                     u901:
  1733     03C4  2BAD               	goto	l1231
  1734     03C5                     u900:
  1735     03C5                     l1239:
  1736     03C5  0825               	movf	___wmul@product+1,w
  1737     03C6  00A1               	movwf	?___wmul+1
  1738     03C7  0824               	movf	___wmul@product,w
  1739     03C8  00A0               	movwf	?___wmul
  1740     03C9                     l299:
  1741     03C9  0008               	return
  1742     03CA                     __end_of___wmul:
  1743                           
  1744                           	psect	text7
  1745     0347                     __ptext7:	
  1746 ;; *************** function ___lmul *****************
  1747 ;; Defined at:
  1748 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1751 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  product         4    8[BANK0 ] unsigned long 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  4    0[BANK0 ] unsigned long 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1763 ;;      Params:         0       8       0       0
  1764 ;;      Locals:         0       4       0       0
  1765 ;;      Temps:          0       0       0       0
  1766 ;;      Totals:         0      12       0       0
  1767 ;;Total ram usage:       12 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_ADsensing
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     0347                     ___lmul:	
  1778                           ;psect for function ___lmul
  1779                           
  1780     0347                     l1243:	
  1781                           ;incstack = 0
  1782                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1783                           
  1784     0347  3000               	movlw	0
  1785     0348  0020               	movlb	0	; select bank0
  1786     0349  00AB               	movwf	___lmul@product+3
  1787     034A  3000               	movlw	0
  1788     034B  00AA               	movwf	___lmul@product+2
  1789     034C  3000               	movlw	0
  1790     034D  00A9               	movwf	___lmul@product+1
  1791     034E  3000               	movlw	0
  1792     034F  00A8               	movwf	___lmul@product
  1793     0350                     l1245:
  1794     0350  1C20               	btfss	___lmul@multiplier,0
  1795     0351  2B53               	goto	u911
  1796     0352  2B54               	goto	u910
  1797     0353                     u911:
  1798     0353  2B5C               	goto	l1249
  1799     0354                     u910:
  1800     0354                     l1247:
  1801     0354  0824               	movf	___lmul@multiplicand,w
  1802     0355  07A8               	addwf	___lmul@product,f
  1803     0356  0825               	movf	___lmul@multiplicand+1,w
  1804     0357  3DA9               	addwfc	___lmul@product+1,f
  1805     0358  0826               	movf	___lmul@multiplicand+2,w
  1806     0359  3DAA               	addwfc	___lmul@product+2,f
  1807     035A  0827               	movf	___lmul@multiplicand+3,w
  1808     035B  3DAB               	addwfc	___lmul@product+3,f
  1809     035C                     l1249:
  1810     035C  3001               	movlw	1
  1811     035D                     u925:
  1812     035D  35A4               	lslf	___lmul@multiplicand,f
  1813     035E  0DA5               	rlf	___lmul@multiplicand+1,f
  1814     035F  0DA6               	rlf	___lmul@multiplicand+2,f
  1815     0360  0DA7               	rlf	___lmul@multiplicand+3,f
  1816     0361  0B89               	decfsz	9,f
  1817     0362  2B5D               	goto	u925
  1818     0363                     l1251:
  1819     0363  3001               	movlw	1
  1820     0364                     u935:
  1821     0364  36A3               	lsrf	___lmul@multiplier+3,f
  1822     0365  0CA2               	rrf	___lmul@multiplier+2,f
  1823     0366  0CA1               	rrf	___lmul@multiplier+1,f
  1824     0367  0CA0               	rrf	___lmul@multiplier,f
  1825     0368  0B89               	decfsz	9,f
  1826     0369  2B64               	goto	u935
  1827     036A  0823               	movf	___lmul@multiplier+3,w
  1828     036B  0422               	iorwf	___lmul@multiplier+2,w
  1829     036C  0421               	iorwf	___lmul@multiplier+1,w
  1830     036D  0420               	iorwf	___lmul@multiplier,w
  1831     036E  1D03               	skipz
  1832     036F  2B71               	goto	u941
  1833     0370  2B72               	goto	u940
  1834     0371                     u941:
  1835     0371  2B50               	goto	l1245
  1836     0372                     u940:
  1837     0372                     l1253:
  1838     0372  082B               	movf	___lmul@product+3,w
  1839     0373  00A3               	movwf	?___lmul+3
  1840     0374  082A               	movf	___lmul@product+2,w
  1841     0375  00A2               	movwf	?___lmul+2
  1842     0376  0829               	movf	___lmul@product+1,w
  1843     0377  00A1               	movwf	?___lmul+1
  1844     0378  0828               	movf	___lmul@product,w
  1845     0379  00A0               	movwf	?___lmul
  1846     037A                     l311:
  1847     037A  0008               	return
  1848     037B                     __end_of___lmul:
  1849                           
  1850                           	psect	text8
  1851     0266                     __ptext8:	
  1852 ;; *************** function ___lldiv *****************
  1853 ;; Defined at:
  1854 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  divisor         4   12[BANK0 ] unsigned long 
  1857 ;;  dividend        4   16[BANK0 ] unsigned long 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  quotient        4   21[BANK0 ] unsigned long 
  1860 ;;  counter         1   25[BANK0 ] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  4   12[BANK0 ] unsigned long 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         0       8       0       0
  1871 ;;      Locals:         0       5       0       0
  1872 ;;      Temps:          0       1       0       0
  1873 ;;      Totals:         0      14       0       0
  1874 ;;Total ram usage:       14 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_ADsensing
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884     0266                     ___lldiv:	
  1885                           ;psect for function ___lldiv
  1886                           
  1887     0266                     l1257:	
  1888                           ;incstack = 0
  1889                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1890                           
  1891     0266  3000               	movlw	0
  1892     0267  0020               	movlb	0	; select bank0
  1893     0268  00B8               	movwf	___lldiv@quotient+3
  1894     0269  3000               	movlw	0
  1895     026A  00B7               	movwf	___lldiv@quotient+2
  1896     026B  3000               	movlw	0
  1897     026C  00B6               	movwf	___lldiv@quotient+1
  1898     026D  3000               	movlw	0
  1899     026E  00B5               	movwf	___lldiv@quotient
  1900     026F  082F               	movf	___lldiv@divisor+3,w
  1901     0270  042E               	iorwf	___lldiv@divisor+2,w
  1902     0271  042D               	iorwf	___lldiv@divisor+1,w
  1903     0272  042C               	iorwf	___lldiv@divisor,w
  1904     0273  1903               	skipnz
  1905     0274  2A76               	goto	u951
  1906     0275  2A77               	goto	u950
  1907     0276                     u951:
  1908     0276  2AB8               	goto	l1277
  1909     0277                     u950:
  1910     0277                     l1259:
  1911     0277  01B9               	clrf	___lldiv@counter
  1912     0278  0AB9               	incf	___lldiv@counter,f
  1913     0279  2A85               	goto	l1263
  1914     027A                     l1261:
  1915     027A  3001               	movlw	1
  1916     027B                     u965:
  1917     027B  35AC               	lslf	___lldiv@divisor,f
  1918     027C  0DAD               	rlf	___lldiv@divisor+1,f
  1919     027D  0DAE               	rlf	___lldiv@divisor+2,f
  1920     027E  0DAF               	rlf	___lldiv@divisor+3,f
  1921     027F  0B89               	decfsz	9,f
  1922     0280  2A7B               	goto	u965
  1923     0281  3001               	movlw	1
  1924     0282  00B4               	movwf	??___lldiv
  1925     0283  0834               	movf	??___lldiv,w
  1926     0284  07B9               	addwf	___lldiv@counter,f
  1927     0285                     l1263:
  1928     0285  1FAF               	btfss	___lldiv@divisor+3,7
  1929     0286  2A88               	goto	u971
  1930     0287  2A89               	goto	u970
  1931     0288                     u971:
  1932     0288  2A7A               	goto	l1261
  1933     0289                     u970:
  1934     0289                     l1265:
  1935     0289  3001               	movlw	1
  1936     028A                     u985:
  1937     028A  35B5               	lslf	___lldiv@quotient,f
  1938     028B  0DB6               	rlf	___lldiv@quotient+1,f
  1939     028C  0DB7               	rlf	___lldiv@quotient+2,f
  1940     028D  0DB8               	rlf	___lldiv@quotient+3,f
  1941     028E  0B89               	decfsz	9,f
  1942     028F  2A8A               	goto	u985
  1943     0290                     l1267:
  1944     0290  082F               	movf	___lldiv@divisor+3,w
  1945     0291  0233               	subwf	___lldiv@dividend+3,w
  1946     0292  1D03               	skipz
  1947     0293  2A9E               	goto	u995
  1948     0294  082E               	movf	___lldiv@divisor+2,w
  1949     0295  0232               	subwf	___lldiv@dividend+2,w
  1950     0296  1D03               	skipz
  1951     0297  2A9E               	goto	u995
  1952     0298  082D               	movf	___lldiv@divisor+1,w
  1953     0299  0231               	subwf	___lldiv@dividend+1,w
  1954     029A  1D03               	skipz
  1955     029B  2A9E               	goto	u995
  1956     029C  082C               	movf	___lldiv@divisor,w
  1957     029D  0230               	subwf	___lldiv@dividend,w
  1958     029E                     u995:
  1959     029E  1C03               	skipc
  1960     029F  2AA1               	goto	u991
  1961     02A0  2AA2               	goto	u990
  1962     02A1                     u991:
  1963     02A1  2AAB               	goto	l1273
  1964     02A2                     u990:
  1965     02A2                     l1269:
  1966     02A2  082C               	movf	___lldiv@divisor,w
  1967     02A3  02B0               	subwf	___lldiv@dividend,f
  1968     02A4  082D               	movf	___lldiv@divisor+1,w
  1969     02A5  3BB1               	subwfb	___lldiv@dividend+1,f
  1970     02A6  082E               	movf	___lldiv@divisor+2,w
  1971     02A7  3BB2               	subwfb	___lldiv@dividend+2,f
  1972     02A8  082F               	movf	___lldiv@divisor+3,w
  1973     02A9  3BB3               	subwfb	___lldiv@dividend+3,f
  1974     02AA                     l1271:
  1975     02AA  1435               	bsf	___lldiv@quotient,0
  1976     02AB                     l1273:
  1977     02AB  3001               	movlw	1
  1978     02AC                     u1005:
  1979     02AC  36AF               	lsrf	___lldiv@divisor+3,f
  1980     02AD  0CAE               	rrf	___lldiv@divisor+2,f
  1981     02AE  0CAD               	rrf	___lldiv@divisor+1,f
  1982     02AF  0CAC               	rrf	___lldiv@divisor,f
  1983     02B0  0B89               	decfsz	9,f
  1984     02B1  2AAC               	goto	u1005
  1985     02B2                     l1275:
  1986     02B2  3001               	movlw	1
  1987     02B3  02B9               	subwf	___lldiv@counter,f
  1988     02B4  1D03               	btfss	3,2
  1989     02B5  2AB7               	goto	u1011
  1990     02B6  2AB8               	goto	u1010
  1991     02B7                     u1011:
  1992     02B7  2A89               	goto	l1265
  1993     02B8                     u1010:
  1994     02B8                     l1277:
  1995     02B8  0838               	movf	___lldiv@quotient+3,w
  1996     02B9  00AF               	movwf	?___lldiv+3
  1997     02BA  0837               	movf	___lldiv@quotient+2,w
  1998     02BB  00AE               	movwf	?___lldiv+2
  1999     02BC  0836               	movf	___lldiv@quotient+1,w
  2000     02BD  00AD               	movwf	?___lldiv+1
  2001     02BE  0835               	movf	___lldiv@quotient,w
  2002     02BF  00AC               	movwf	?___lldiv
  2003     02C0                     l333:
  2004     02C0  0008               	return
  2005     02C1                     __end_of___lldiv:
  2006                           
  2007                           	psect	intentry
  2008     0004                     __pintentry:	
  2009 ;; *************** function _ISR *****************
  2010 ;; Defined at:
  2011 ;;		line 120 in file "main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  i               1    5[COMMON] unsigned char 
  2016 ;;  p               1    4[COMMON] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         0       0       0       0
  2027 ;;      Locals:         2       0       0       0
  2028 ;;      Temps:          4       0       0       0
  2029 ;;      Totals:         6       0       0       0
  2030 ;;Total ram usage:        6 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		Interrupt level 1
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039     0004                     _ISR:
  2040                           
  2041                           ;incstack = 0
  2042     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2043                           
  2044                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  2045     0005  3180               	pagesel	$
  2046     0006                     i1l1145:
  2047                           
  2048                           ;main.c: 122:  if(PIR1bits.TMR2IF == 1)
  2049     0006  0020               	movlb	0	; select bank0
  2050     0007  1C91               	btfss	17,1	;volatile
  2051     0008  280A               	goto	u68_21
  2052     0009  280B               	goto	u68_20
  2053     000A                     u68_21:
  2054     000A  2845               	goto	i1l1175
  2055     000B                     u68_20:
  2056     000B                     i1l1147:
  2057                           
  2058                           ;main.c: 123:  {;main.c: 124:   char p;;main.c: 125:   PIE1bits.TMR2IE = 0;
  2059     000B  0021               	movlb	1	; select bank1
  2060     000C  1091               	bcf	17,1	;volatile
  2061                           
  2062                           ;main.c: 126:   T2CONbits.TMR2ON = 0;
  2063     000D  0020               	movlb	0	; select bank0
  2064     000E  111C               	bcf	28,2	;volatile
  2065                           
  2066                           ;main.c: 127:   PIR1bits.TMR2IF = 0;
  2067     000F  1091               	bcf	17,1	;volatile
  2068     0010                     i1l1149:
  2069                           
  2070                           ;main.c: 128:   if(y == 0)
  2071     0010  0852               	movf	_y,w
  2072     0011  0453               	iorwf	_y+1,w
  2073     0012  1D03               	btfss	3,2
  2074     0013  2815               	goto	u69_21
  2075     0014  2816               	goto	u69_20
  2076     0015                     u69_21:
  2077     0015  2838               	goto	i1l1167
  2078     0016                     u69_20:
  2079     0016                     i1l1151:
  2080                           
  2081                           ;main.c: 129:   {;main.c: 130:    if(CCPR1L >= PR2)
  2082     0016  081B               	movf	27,w	;volatile
  2083     0017  0025               	movlb	5	; select bank5
  2084     0018  0211               	subwf	17,w	;volatile
  2085     0019  1C03               	skipc
  2086     001A  281C               	goto	u70_21
  2087     001B  281D               	goto	u70_20
  2088     001C                     u70_21:
  2089     001C  281F               	goto	i1l1155
  2090     001D                     u70_20:
  2091     001D                     i1l1153:
  2092                           
  2093                           ;main.c: 131:    {;main.c: 132:     p = 0;
  2094     001D  01F4               	clrf	ISR@p
  2095                           
  2096                           ;main.c: 133:    }
  2097     001E  2826               	goto	i1l1159
  2098     001F                     i1l1155:
  2099     001F  0811               	movf	17,w	;volatile
  2100     0020  1D03               	btfss	3,2
  2101     0021  2823               	goto	u71_21
  2102     0022  2824               	goto	u71_20
  2103     0023                     u71_21:
  2104     0023  2826               	goto	i1l1159
  2105     0024                     u71_20:
  2106     0024                     i1l1157:
  2107                           
  2108                           ;main.c: 135:    {;main.c: 136:     p = 1;
  2109     0024  01F4               	clrf	ISR@p
  2110     0025  0AF4               	incf	ISR@p,f
  2111     0026                     i1l1159:
  2112                           
  2113                           ;main.c: 138:    if(p == 1)
  2114     0026  0374               	decf	ISR@p,w
  2115     0027  1D03               	btfss	3,2
  2116     0028  282A               	goto	u72_21
  2117     0029  282B               	goto	u72_20
  2118     002A                     u72_21:
  2119     002A  2830               	goto	i1l1163
  2120     002B                     u72_20:
  2121     002B                     i1l1161:
  2122                           
  2123                           ;main.c: 139:    {;main.c: 140:     CCPR1L++;
  2124     002B  3001               	movlw	1
  2125     002C  00F0               	movwf	??_ISR
  2126     002D  0870               	movf	??_ISR,w
  2127     002E  0791               	addwf	17,f	;volatile
  2128                           
  2129                           ;main.c: 141:    }
  2130     002F  2841               	goto	i1l1171
  2131     0030                     i1l1163:
  2132     0030  0874               	movf	ISR@p,w
  2133     0031  1D03               	btfss	3,2
  2134     0032  2834               	goto	u73_21
  2135     0033  2835               	goto	u73_20
  2136     0034                     u73_21:
  2137     0034  2841               	goto	i1l1171
  2138     0035                     u73_20:
  2139     0035                     i1l1165:
  2140                           
  2141                           ;main.c: 143:    {;main.c: 144:     CCPR1L--;
  2142     0035  3001               	movlw	1
  2143     0036  0291               	subwf	17,f	;volatile
  2144     0037  2841               	goto	i1l1171
  2145     0038                     i1l1167:
  2146     0038  0352               	decf	_y,w
  2147     0039  0453               	iorwf	_y+1,w
  2148     003A  1D03               	btfss	3,2
  2149     003B  283D               	goto	u74_21
  2150     003C  283E               	goto	u74_20
  2151     003D                     u74_21:
  2152     003D  2841               	goto	i1l1171
  2153     003E                     u74_20:
  2154     003E                     i1l1169:
  2155                           
  2156                           ;main.c: 148:   {;main.c: 149:    CCPR1L = 0x3F;
  2157     003E  303F               	movlw	63
  2158     003F  0025               	movlb	5	; select bank5
  2159     0040  0091               	movwf	17	;volatile
  2160     0041                     i1l1171:
  2161                           
  2162                           ;main.c: 151:   PIE1bits.TMR2IE = 1;
  2163     0041  0021               	movlb	1	; select bank1
  2164     0042  1491               	bsf	17,1	;volatile
  2165     0043                     i1l1173:
  2166                           
  2167                           ;main.c: 152:   T2CONbits.TMR2ON = 1;
  2168     0043  0020               	movlb	0	; select bank0
  2169     0044  151C               	bsf	28,2	;volatile
  2170     0045                     i1l1175:
  2171                           
  2172                           ;main.c: 155:  if(PIR1bits.ADIF == 1)
  2173     0045  1F11               	btfss	17,6	;volatile
  2174     0046  2848               	goto	u75_21
  2175     0047  2849               	goto	u75_20
  2176     0048                     u75_21:
  2177     0048  28DB               	goto	i1l115
  2178     0049                     u75_20:
  2179     0049                     i1l1177:
  2180                           
  2181                           ;main.c: 156:  {;main.c: 157:   PIE1bits.ADIE = 0;
  2182     0049  0021               	movlb	1	; select bank1
  2183     004A  1311               	bcf	17,6	;volatile
  2184                           
  2185                           ;main.c: 158:   PIR1bits.ADIF = 0;
  2186     004B  0020               	movlb	0	; select bank0
  2187     004C  1311               	bcf	17,6	;volatile
  2188     004D                     i1l1179:
  2189                           
  2190                           ;main.c: 159:   char i;;main.c: 160:   for(i = 0; i < 80; i++)
  2191     004D  01F5               	clrf	ISR@i
  2192     004E                     i1l1185:
  2193                           
  2194                           ;main.c: 161:   {;main.c: 162:    if((unsigned int)Rt >= TABLE[i])
  2195     004E  0875               	movf	ISR@i,w
  2196     004F  00F0               	movwf	??_ISR
  2197     0050  01F1               	clrf	??_ISR+1
  2198     0051  35F0               	lslf	??_ISR,f
  2199     0052  0DF1               	rlf	??_ISR+1,f
  2200     0053  30C6               	movlw	low _TABLE
  2201     0054  0770               	addwf	??_ISR,w
  2202     0055  0084               	movwf	4
  2203     0056  3001               	movlw	high _TABLE
  2204     0057  3D71               	addwfc	??_ISR+1,w
  2205     0058  3880               	iorlw	128
  2206     0059  0085               	movwf	5
  2207     005A  3F00               	moviw [0]fsr0
  2208     005B  00F2               	movwf	??_ISR+2
  2209     005C  3F01               	moviw [1]fsr0
  2210     005D  00F3               	movwf	??_ISR+3
  2211     005E  0873               	movf	??_ISR+3,w
  2212     005F  0249               	subwf	_Rt+1,w
  2213     0060  1D03               	skipz
  2214     0061  2864               	goto	u76_25
  2215     0062  0872               	movf	??_ISR+2,w
  2216     0063  0248               	subwf	_Rt,w
  2217     0064                     u76_25:
  2218     0064  1C03               	skipc
  2219     0065  2867               	goto	u76_21
  2220     0066  2868               	goto	u76_20
  2221     0067                     u76_21:
  2222     0067  2870               	goto	i1l1189
  2223     0068                     u76_20:
  2224     0068                     i1l1187:
  2225                           
  2226                           ;main.c: 163:    {;main.c: 164:     v = i;
  2227     0068  0875               	movf	ISR@i,w
  2228     0069  00F0               	movwf	??_ISR
  2229     006A  01F1               	clrf	??_ISR+1
  2230     006B  0870               	movf	??_ISR,w
  2231     006C  00D4               	movwf	_v
  2232     006D  0871               	movf	??_ISR+1,w
  2233     006E  00D5               	movwf	_v+1
  2234                           
  2235                           ;main.c: 165:     break;
  2236     006F  287A               	goto	i1l1193
  2237     0070                     i1l1189:
  2238                           
  2239                           ;main.c: 167:   }
  2240     0070  3001               	movlw	1
  2241     0071  00F0               	movwf	??_ISR
  2242     0072  0870               	movf	??_ISR,w
  2243     0073  07F5               	addwf	ISR@i,f
  2244     0074                     i1l1191:
  2245     0074  3050               	movlw	80
  2246     0075  0275               	subwf	ISR@i,w
  2247     0076  1C03               	skipc
  2248     0077  2879               	goto	u77_21
  2249     0078  287A               	goto	u77_20
  2250     0079                     u77_21:
  2251     0079  284E               	goto	i1l1185
  2252     007A                     u77_20:
  2253     007A                     i1l1193:
  2254                           
  2255                           ;main.c: 193:   if (timerActive)
  2256     007A  087A               	movf	_timerActive,w
  2257     007B  1903               	btfsc	3,2
  2258     007C  287E               	goto	u78_21
  2259     007D  287F               	goto	u78_20
  2260     007E                     u78_21:
  2261     007E  28D9               	goto	i1l106
  2262     007F                     u78_20:
  2263     007F                     i1l1195:
  2264                           
  2265                           ;main.c: 194:   {;main.c: 195:             if((r < 100 || r > 900) && (v <= (t - 2)))
  2266     007F  3000               	movlw	0
  2267     0080  0277               	subwf	_r+1,w
  2268     0081  3064               	movlw	100
  2269     0082  1903               	skipnz
  2270     0083  0276               	subwf	_r,w
  2271     0084  1C03               	skipc
  2272     0085  2887               	goto	u79_21
  2273     0086  2888               	goto	u79_20
  2274     0087                     u79_21:
  2275     0087  2891               	goto	i1l1199
  2276     0088                     u79_20:
  2277     0088                     i1l1197:
  2278     0088  3003               	movlw	3
  2279     0089  0277               	subwf	_r+1,w
  2280     008A  3085               	movlw	133
  2281     008B  1903               	skipnz
  2282     008C  0276               	subwf	_r,w
  2283     008D  1C03               	skipc
  2284     008E  2890               	goto	u80_21
  2285     008F  2891               	goto	u80_20
  2286     0090                     u80_21:
  2287     0090  28AB               	goto	i1l1203
  2288     0091                     u80_20:
  2289     0091                     i1l1199:
  2290     0091  0878               	movf	_t,w
  2291     0092  3EFE               	addlw	254
  2292     0093  00F0               	movwf	??_ISR
  2293     0094  30FF               	movlw	255
  2294     0095  3D79               	addwfc	_t+1,w
  2295     0096  00F1               	movwf	??_ISR+1
  2296     0097  0871               	movf	??_ISR+1,w
  2297     0098  3A80               	xorlw	128
  2298     0099  00F2               	movwf	??_ISR+2
  2299     009A  0855               	movf	_v+1,w
  2300     009B  3A80               	xorlw	128
  2301     009C  0272               	subwf	??_ISR+2,w
  2302     009D  1D03               	skipz
  2303     009E  28A1               	goto	u81_25
  2304     009F  0854               	movf	_v,w
  2305     00A0  0270               	subwf	??_ISR,w
  2306     00A1                     u81_25:
  2307     00A1  1C03               	skipc
  2308     00A2  28A4               	goto	u81_21
  2309     00A3  28A5               	goto	u81_20
  2310     00A4                     u81_21:
  2311     00A4  28AB               	goto	i1l1203
  2312     00A5                     u81_20:
  2313     00A5                     i1l1201:
  2314                           
  2315                           ;main.c: 196:    {;main.c: 197:                 timerCounter++;
  2316     00A5  3001               	movlw	1
  2317     00A6  0020               	movlb	0	; select bank0
  2318     00A7  07D0               	addwf	_timerCounter,f
  2319     00A8  3000               	movlw	0
  2320     00A9  3DD1               	addwfc	_timerCounter+1,f
  2321                           
  2322                           ;main.c: 198:             }else
  2323     00AA  28AF               	goto	i1l1205
  2324     00AB                     i1l1203:
  2325                           
  2326                           ;main.c: 199:    {;main.c: 200:                 timerCounter = 0;
  2327     00AB  0020               	movlb	0	; select bank0
  2328     00AC  01D0               	clrf	_timerCounter
  2329     00AD  01D1               	clrf	_timerCounter+1
  2330                           
  2331                           ;main.c: 201:     timerActive = 0;
  2332     00AE  01FA               	clrf	_timerActive
  2333     00AF                     i1l1205:
  2334                           
  2335                           ;main.c: 204:             if(timerCounter >= 5)
  2336     00AF  3000               	movlw	0
  2337     00B0  0251               	subwf	_timerCounter+1,w
  2338     00B1  3005               	movlw	5
  2339     00B2  1903               	skipnz
  2340     00B3  0250               	subwf	_timerCounter,w
  2341     00B4  1C03               	skipc
  2342     00B5  28B7               	goto	u82_21
  2343     00B6  28B8               	goto	u82_20
  2344     00B7                     u82_21:
  2345     00B7  28D9               	goto	i1l106
  2346     00B8                     u82_20:
  2347     00B8                     i1l1207:
  2348                           
  2349                           ;main.c: 205:    {;main.c: 206:     PORTAbits.RA4 = 0;
  2350     00B8  120C               	bcf	12,4	;volatile
  2351                           
  2352                           ;main.c: 207:     T2CONbits.TMR2ON = 0;
  2353     00B9  111C               	bcf	28,2	;volatile
  2354     00BA                     i1l1209:
  2355                           
  2356                           ;main.c: 210:     CCP1CON = 0;
  2357     00BA  0025               	movlb	5	; select bank5
  2358     00BB  0193               	clrf	19	;volatile
  2359     00BC                     i1l1211:
  2360                           
  2361                           ;main.c: 212:     ADCON0bits.ADON = 0;
  2362     00BC  0021               	movlb	1	; select bank1
  2363     00BD  101D               	bcf	29,0	;volatile
  2364     00BE                     i1l1213:
  2365                           
  2366                           ;main.c: 213:     PORTAbits.RA5 = 0;
  2367     00BE  0020               	movlb	0	; select bank0
  2368     00BF  128C               	bcf	12,5	;volatile
  2369     00C0                     i1l1215:
  2370                           
  2371                           ;main.c: 215:     {;main.c: 216:      PORTAbits.RA5 = !PORTAbits.RA5;
  2372     00C0  1003               	clrc
  2373     00C1  0020               	movlb	0	; select bank0
  2374     00C2  1E8C               	btfss	12,5	;volatile
  2375     00C3  1403               	setc
  2376     00C4  1803               	btfsc	3,0
  2377     00C5  28C7               	goto	u83_21
  2378     00C6  28CA               	goto	u83_20
  2379     00C7                     u83_21:
  2380     00C7  0020               	movlb	0	; select bank0
  2381     00C8  168C               	bsf	12,5	;volatile
  2382     00C9  28CC               	goto	u84_24
  2383     00CA                     u83_20:
  2384     00CA  0020               	movlb	0	; select bank0
  2385     00CB  128C               	bcf	12,5	;volatile
  2386     00CC                     u84_24:
  2387     00CC                     i1l1217:
  2388                           
  2389                           ;main.c: 217:      _delay((unsigned long)((100)*(32000000/4000.0)));
  2390     00CC  3005               	movlw	5
  2391     00CD  00F1               	movwf	??_ISR+1
  2392     00CE  300F               	movlw	15
  2393     00CF  00F0               	movwf	??_ISR
  2394     00D0  30F1               	movlw	241
  2395     00D1                     u109_27:
  2396     00D1  0B89               	decfsz	9,f
  2397     00D2  28D1               	goto	u109_27
  2398     00D3  0BF0               	decfsz	??_ISR,f
  2399     00D4  28D1               	goto	u109_27
  2400     00D5  0BF1               	decfsz	??_ISR+1,f
  2401     00D6  28D1               	goto	u109_27
  2402     00D7  0000               	nop
  2403     00D8  28C0               	goto	i1l1215
  2404     00D9                     i1l106:	
  2405                           ;main.c: 220:         }
  2406                           
  2407                           
  2408                           ;main.c: 221:   PIE1bits.ADIE = 1;
  2409     00D9  0021               	movlb	1	; select bank1
  2410     00DA  1711               	bsf	17,6	;volatile
  2411     00DB                     i1l115:
  2412     00DB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2413     00DC  0009               	retfie
  2414     00DD                     __end_of_ISR:
  2415     007E                     btemp	set	126	;btemp
  2416     007E                     int$flags	set	126
  2417     007E                     wtemp0	set	126
  2418                           
  2419                           	psect	config
  2420                           
  2421                           ;Config register CONFIG1 @ 0x8007
  2422                           ;	Oscillator Selection
  2423                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2424                           ;	Watchdog Timer Enable
  2425                           ;	WDTE = OFF, WDT disabled
  2426                           ;	Power-up Timer Enable
  2427                           ;	PWRTE = OFF, PWRT disabled
  2428                           ;	MCLR Pin Function Select
  2429                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2430                           ;	Flash Program Memory Code Protection
  2431                           ;	CP = OFF, Program memory code protection is disabled
  2432                           ;	Data Memory Code Protection
  2433                           ;	CPD = OFF, Data memory code protection is disabled
  2434                           ;	Brown-out Reset Enable
  2435                           ;	BOREN = ON, Brown-out Reset enabled
  2436                           ;	Clock Out Enable
  2437                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2438                           ;	Internal/External Switchover
  2439                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2440                           ;	Fail-Safe Clock Monitor Enable
  2441                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2442     8007                     	org	32775
  2443     8007  2FE4               	dw	12260
  2444                           
  2445                           ;Config register CONFIG2 @ 0x8008
  2446                           ;	Flash Memory Self-Write Protection
  2447                           ;	WRT = OFF, Write protection off
  2448                           ;	PLL Enable
  2449                           ;	PLLEN = ON, 4x PLL enabled
  2450                           ;	Stack Overflow/Underflow Reset Enable
  2451                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2452                           ;	Brown-out Reset Voltage Selection
  2453                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2454                           ;	In-Circuit Debugger Mode
  2455                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  2456                           ;	Low-Voltage Programming Enable
  2457                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2458     8008                     	org	32776
  2459     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    160
    Data        1
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     36      55
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADsensing
    _ADsensing->___lldiv
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1329
                                             34 BANK0      2     2      0
                          _ADsensing
                            _PWMinit
                     _Tempjudgements
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tempjudgements                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADsensing                                            8     8      0    1329
                                             26 BANK0      8     8      0
                            ___lldiv
                             ___lmul
                             ___wmul
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      31
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0     136
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADsensing
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _getADCValue
   _PWMinit
   _Tempjudgements
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      42       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      42      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 02 17:09:25 2023

                      _r 0076                        _t 0078                        _v 0054  
                      _y 0052                       l70 0346                       l67 0325  
                     l83 02EE                       l77 01C5                       l87 030B  
                     _Rt 0048      ___wmul@multiplicand 0022                      l311 037A  
                    l144 03DE                      l147 03F3                      l333 02C0  
                    l297 03B5                      l299 03C9                      _PR2 001B  
                    _ISR 0004                      u640 02D6                      u641 02D5  
                    u650 02E5                      u651 02E4                      u900 03C5  
                    u660 02EE                      u901 03C4                      u661 02ED  
                    u645 02D2                      u910 0354                      u670 0304  
                    u911 0353                      u671 0303                      u850 0329  
                    u851 0328                      u675 0300                      u940 0372  
                    u941 0371                      u925 035D                      u950 0277  
                    u870 03B1                      u951 0276                      u935 0364  
                    u871 03B0                      u865 032D                      u970 0289  
                    u971 0288                      u965 027B                      u885 03B6  
                    u990 02A2                      u991 02A1                      u895 03BB  
                    u985 028A                      u995 029E                      _ad1 0044  
                    _ad2 004E                      _ad3 004C                      _add 0056  
                    wreg 0009                     ?_ISR 0070                     ISR@i 0075  
                   ISR@p 0074                     l1111 02C1                     l1113 02D6  
                   l1121 02F5                     l1123 0304                     l1115 02D8  
                   l1221 031A                     l1301 03DF                     l1125 0306  
                   l1117 02E5                     l1231 03AD                     l1223 0323  
                   l1311 03EC                     l1303 03E3                     l1119 02F1  
                   l1233 03B1                     l1225 0329                     l1321 00FA  
                   l1313 03ED                     l1305 03E6                     l1251 0363  
                   l1243 0347                     l1235 03BA                     l1219 030E  
                   l1323 0105                     l1331 018D                     l1315 03EF  
                   l1307 03E9                     l1261 027A                     l1253 0372  
                   l1245 0350                     l1237 03BF                     l1229 03AA  
                   l1341 01C3                     l1333 0193                     l1325 011D  
                   l1317 03F1                     l1309 03EB                     l1271 02AA  
                   l1263 0285                     l1247 0354                     l1239 03C5  
                   l1327 0148                     l1319 00F4                     l1351 0391  
                   l1343 037B                     l1273 02AB                     l1265 0289  
                   l1257 0266                     l1249 035C                     l1337 01B6  
                   l1329 0188                     l1281 03CA                     l1353 0393  
                   l1345 037F                     l1275 02B2                     l1267 0290  
                   l1259 0277                     l1339 01BF                     l1291 03D4  
                   l1283 03CD                     l1355 0395                     l1347 0382  
                   l1269 02A2                     l1277 02B8                     l1293 03D8  
                   l1285 03CF                     l1357 0398                     l1349 0385  
                   l1295 03D9                     l1287 03D1                     l1359 039B  
                   l1297 03DB                     l1289 03D3                     l1299 03DD  
                   u1010 02B8                     u1011 02B7                     u1020 00FA  
                   u1005 02AC                     u1021 00F9                     u1030 013E  
                   u1040 0193                     u1041 0192                     u1035 013A  
                   u1055 01AD                     u1067 038B                     u1077 03A1  
                   u1087 031E                     _main 037B                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 00DD          __end_of_PWMinit 03F4                    ??_ISR 0070  
                  ?_main 0070          __end_of___lldiv 02C1                    i1l106 00D9  
                  i1l115 00DB                    _TABLE 01C6                    u70_20 001D  
                  u70_21 001C                    u71_20 0024                    u71_21 0023  
                  u80_20 0091                    u72_20 002B                    u80_21 0090  
                  u72_21 002A                    u81_20 00A5                    u73_20 0035  
                  u81_21 00A4                    u73_21 0034                    u81_25 00A1  
                  u82_20 00B8                    u74_20 003E                    u82_21 00B7  
                  u74_21 003D                    u83_20 00CA                    u75_20 0049  
                  u83_21 00C7                    u75_21 0048                    u76_20 0068  
                  u68_20 000B                    u76_21 0067                    u68_21 000A  
                  u84_24 00CC                    u76_25 0064                    u77_20 007A  
                  u69_20 0016                    u77_21 0079                    u69_21 0015  
                  u78_20 007F                    u78_21 007E                    u79_20 0088  
                  u79_21 0087      ___lmul@multiplicand 0024                    _setup 03CA  
                  status 0003                    wtemp0 007E          __initialization 00DF  
           __end_of_main 03AA                   ??_main 0042                   _ADCON1 009E  
                 _ADRESH 009C                   _ADRESL 009B                   _CCPR1L 0291  
                 ?_setup 0070        __end_of_ADsensing 01C6                   i1l1201 00A5  
                 i1l1211 00BC                   i1l1203 00AB                   i1l1213 00BE  
                 i1l1205 00AF                   i1l1215 00C0                   i1l1207 00B8  
                 i1l1151 0016                   i1l1217 00CC                   i1l1209 00BA  
                 i1l1161 002B                   i1l1153 001D                   i1l1145 0006  
                 i1l1171 0041                   i1l1163 0030                   i1l1155 001F  
                 i1l1147 000B                   i1l1173 0043                   i1l1165 0035  
                 i1l1157 0024                   i1l1149 0010                   i1l1191 0074  
                 i1l1159 0026                   i1l1167 0038                   i1l1175 0045  
                 i1l1193 007A                   i1l1185 004E                   i1l1177 0049  
                 i1l1169 003E                   i1l1195 007F                   i1l1187 0068  
                 i1l1179 004D                   i1l1197 0088                   i1l1189 0070  
                 i1l1199 0091                ??_PWMinit 0020                   u109_27 00D1  
                 _OSCCON 0099                   ___lmul 0347                   ___wmul 03AA  
              ??___lldiv 0034              ADsensing@VR 003E  __end_of__initialization 00F0  
     getADCValue@channel 0029            __end_of_TABLE 0266           __pcstackCOMMON 0070  
           __pidataBANK0 03FA            __end_of_setup 03DF                  ??_setup 0020  
             __pbssBANK0 0044               __pmaintext 037B                  ?___lmul 0020  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0293  
         ___lmul@product 0028           _Tempjudgements 02C1                  _PWMinit 03DF  
          ??_getADCValue 0022                  ___lldiv 0266   __end_of_Tempjudgements 030C  
                __ptext1 03CA                  __ptext2 02C1                  __ptext3 03DF  
                __ptext4 00F4                  __ptext5 030C                  __ptext6 03AA  
                __ptext7 0347                  __ptext8 0266                _T2CONbits 001C  
                clrloop0 03F5     end_of_initialization 00F0                _ADsensing 00F4  
        ___lldiv@divisor 002C          ___lldiv@counter 0039          ?_Tempjudgements 0070  
    __end_of_getADCValue 0347                _PORTAbits 000C                _TRISAbits 008C  
            _CCP1CONbits 0293               ?_ADsensing 0070           __end_of___lmul 037B  
         __end_of___wmul 03CA      start_initialization 00DF              __end_of_ISR 00DD  
            _getADCValue 030C                 ??___lmul 0028                 ??___wmul 0024  
            __pdataBANK0 0056              __pbssCOMMON 0076                ___latbits 0001  
          __pcstackBANK0 0020                 ?_PWMinit 0070              ??_ADsensing 003A  
               ?___lldiv 002C           ___wmul@product 0024                clear_ram0 03F4  
               _PIE1bits 0091         ??_Tempjudgements 0020                 _PIR1bits 0011  
             _ADCON0bits 009D        ___wmul@multiplier 0020        ___lmul@multiplier 0020  
             _APFCONbits 011D               _ANSELAbits 018C             ?_getADCValue 0020  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
           _timerCounter 0050         ___lldiv@dividend 0030            __pstringtext1 01C6  
            _timerActive 007A         ___lldiv@quotient 0035  
