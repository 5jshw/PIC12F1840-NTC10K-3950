

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 05 16:03:15 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12LF1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 07/09/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC12LF1840 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     008C                     	;# 
    85     0091                     	;# 
    86     0092                     	;# 
    87     0095                     	;# 
    88     0096                     	;# 
    89     0097                     	;# 
    90     0098                     	;# 
    91     0099                     	;# 
    92     009A                     	;# 
    93     009B                     	;# 
    94     009B                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     010C                     	;# 
    99     0111                     	;# 
   100     0112                     	;# 
   101     0115                     	;# 
   102     0116                     	;# 
   103     0117                     	;# 
   104     0118                     	;# 
   105     0119                     	;# 
   106     011A                     	;# 
   107     011B                     	;# 
   108     011D                     	;# 
   109     011D                     	;# 
   110     018C                     	;# 
   111     0191                     	;# 
   112     0191                     	;# 
   113     0192                     	;# 
   114     0193                     	;# 
   115     0193                     	;# 
   116     0193                     	;# 
   117     0194                     	;# 
   118     0195                     	;# 
   119     0196                     	;# 
   120     0199                     	;# 
   121     019A                     	;# 
   122     019B                     	;# 
   123     019B                     	;# 
   124     019B                     	;# 
   125     019B                     	;# 
   126     019C                     	;# 
   127     019C                     	;# 
   128     019D                     	;# 
   129     019E                     	;# 
   130     019F                     	;# 
   131     020C                     	;# 
   132     0211                     	;# 
   133     0211                     	;# 
   134     0212                     	;# 
   135     0212                     	;# 
   136     0213                     	;# 
   137     0213                     	;# 
   138     0214                     	;# 
   139     0214                     	;# 
   140     0215                     	;# 
   141     0215                     	;# 
   142     0215                     	;# 
   143     0216                     	;# 
   144     0216                     	;# 
   145     0217                     	;# 
   146     0217                     	;# 
   147     0291                     	;# 
   148     0291                     	;# 
   149     0292                     	;# 
   150     0293                     	;# 
   151     0294                     	;# 
   152     0295                     	;# 
   153     0295                     	;# 
   154     0296                     	;# 
   155     0391                     	;# 
   156     0392                     	;# 
   157     0393                     	;# 
   158     039A                     	;# 
   159     039C                     	;# 
   160     039D                     	;# 
   161     039E                     	;# 
   162     039F                     	;# 
   163     0FE4                     	;# 
   164     0FE5                     	;# 
   165     0FE6                     	;# 
   166     0FE7                     	;# 
   167     0FE8                     	;# 
   168     0FE9                     	;# 
   169     0FEA                     	;# 
   170     0FEB                     	;# 
   171     0FED                     	;# 
   172     0FEE                     	;# 
   173     0FEF                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0015                     	;# 
   190     0016                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001C                     	;# 
   198     001E                     	;# 
   199     001F                     	;# 
   200     008C                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009B                     	;# 
   211     009C                     	;# 
   212     009D                     	;# 
   213     009E                     	;# 
   214     010C                     	;# 
   215     0111                     	;# 
   216     0112                     	;# 
   217     0115                     	;# 
   218     0116                     	;# 
   219     0117                     	;# 
   220     0118                     	;# 
   221     0119                     	;# 
   222     011A                     	;# 
   223     011B                     	;# 
   224     011D                     	;# 
   225     011D                     	;# 
   226     018C                     	;# 
   227     0191                     	;# 
   228     0191                     	;# 
   229     0192                     	;# 
   230     0193                     	;# 
   231     0193                     	;# 
   232     0193                     	;# 
   233     0194                     	;# 
   234     0195                     	;# 
   235     0196                     	;# 
   236     0199                     	;# 
   237     019A                     	;# 
   238     019B                     	;# 
   239     019B                     	;# 
   240     019B                     	;# 
   241     019B                     	;# 
   242     019C                     	;# 
   243     019C                     	;# 
   244     019D                     	;# 
   245     019E                     	;# 
   246     019F                     	;# 
   247     020C                     	;# 
   248     0211                     	;# 
   249     0211                     	;# 
   250     0212                     	;# 
   251     0212                     	;# 
   252     0213                     	;# 
   253     0213                     	;# 
   254     0214                     	;# 
   255     0214                     	;# 
   256     0215                     	;# 
   257     0215                     	;# 
   258     0215                     	;# 
   259     0216                     	;# 
   260     0216                     	;# 
   261     0217                     	;# 
   262     0217                     	;# 
   263     0291                     	;# 
   264     0291                     	;# 
   265     0292                     	;# 
   266     0293                     	;# 
   267     0294                     	;# 
   268     0295                     	;# 
   269     0295                     	;# 
   270     0296                     	;# 
   271     0391                     	;# 
   272     0392                     	;# 
   273     0393                     	;# 
   274     039A                     	;# 
   275     039C                     	;# 
   276     039D                     	;# 
   277     039E                     	;# 
   278     039F                     	;# 
   279     0FE4                     	;# 
   280     0FE5                     	;# 
   281     0FE6                     	;# 
   282     0FE7                     	;# 
   283     0FE8                     	;# 
   284     0FE9                     	;# 
   285     0FEA                     	;# 
   286     0FEB                     	;# 
   287     0FED                     	;# 
   288     0FEE                     	;# 
   289     0FEF                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     0011                     	;# 
   304     0012                     	;# 
   305     0015                     	;# 
   306     0016                     	;# 
   307     0016                     	;# 
   308     0017                     	;# 
   309     0018                     	;# 
   310     0019                     	;# 
   311     001A                     	;# 
   312     001B                     	;# 
   313     001C                     	;# 
   314     001E                     	;# 
   315     001F                     	;# 
   316     008C                     	;# 
   317     0091                     	;# 
   318     0092                     	;# 
   319     0095                     	;# 
   320     0096                     	;# 
   321     0097                     	;# 
   322     0098                     	;# 
   323     0099                     	;# 
   324     009A                     	;# 
   325     009B                     	;# 
   326     009B                     	;# 
   327     009C                     	;# 
   328     009D                     	;# 
   329     009E                     	;# 
   330     010C                     	;# 
   331     0111                     	;# 
   332     0112                     	;# 
   333     0115                     	;# 
   334     0116                     	;# 
   335     0117                     	;# 
   336     0118                     	;# 
   337     0119                     	;# 
   338     011A                     	;# 
   339     011B                     	;# 
   340     011D                     	;# 
   341     011D                     	;# 
   342     018C                     	;# 
   343     0191                     	;# 
   344     0191                     	;# 
   345     0192                     	;# 
   346     0193                     	;# 
   347     0193                     	;# 
   348     0193                     	;# 
   349     0194                     	;# 
   350     0195                     	;# 
   351     0196                     	;# 
   352     0199                     	;# 
   353     019A                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019B                     	;# 
   357     019B                     	;# 
   358     019C                     	;# 
   359     019C                     	;# 
   360     019D                     	;# 
   361     019E                     	;# 
   362     019F                     	;# 
   363     020C                     	;# 
   364     0211                     	;# 
   365     0211                     	;# 
   366     0212                     	;# 
   367     0212                     	;# 
   368     0213                     	;# 
   369     0213                     	;# 
   370     0214                     	;# 
   371     0214                     	;# 
   372     0215                     	;# 
   373     0215                     	;# 
   374     0215                     	;# 
   375     0216                     	;# 
   376     0216                     	;# 
   377     0217                     	;# 
   378     0217                     	;# 
   379     0291                     	;# 
   380     0291                     	;# 
   381     0292                     	;# 
   382     0293                     	;# 
   383     0294                     	;# 
   384     0295                     	;# 
   385     0295                     	;# 
   386     0296                     	;# 
   387     0391                     	;# 
   388     0392                     	;# 
   389     0393                     	;# 
   390     039A                     	;# 
   391     039C                     	;# 
   392     039D                     	;# 
   393     039E                     	;# 
   394     039F                     	;# 
   395     0FE4                     	;# 
   396     0FE5                     	;# 
   397     0FE6                     	;# 
   398     0FE7                     	;# 
   399     0FE8                     	;# 
   400     0FE9                     	;# 
   401     0FEA                     	;# 
   402     0FEB                     	;# 
   403     0FED                     	;# 
   404     0FEE                     	;# 
   405     0FEF                     	;# 
   406                           
   407                           	psect	stringtext1
   408     00F8                     __pstringtext1:
   409     00F8                     _TABLE:
   410     00F8  3468               	retlw	104
   411     00F9  34B3               	retlw	179
   412     00FA  3402               	retlw	2
   413     00FB  3400               	retlw	0
   414     00FC  3400               	retlw	0
   415     00FD  348A               	retlw	138
   416     00FE  3402               	retlw	2
   417     00FF  3400               	retlw	0
   418     0100  3454               	retlw	84
   419     0101  3463               	retlw	99
   420     0102  3402               	retlw	2
   421     0103  3400               	retlw	0
   422     0104  3400               	retlw	0
   423     0105  343F               	retlw	63
   424     0106  3402               	retlw	2
   425     0107  3400               	retlw	0
   426     0108  3404               	retlw	4
   427     0109  341D               	retlw	29
   428     010A  3402               	retlw	2
   429     010B  3400               	retlw	0
   430     010C  3460               	retlw	96
   431     010D  34FD               	retlw	253
   432     010E  3401               	retlw	1
   433     010F  3400               	retlw	0
   434     0110  3414               	retlw	20
   435     0111  34E0               	retlw	224
   436     0112  3401               	retlw	1
   437     0113  3400               	retlw	0
   438     0114  3458               	retlw	88
   439     0115  34C4               	retlw	196
   440     0116  3401               	retlw	1
   441     0117  3400               	retlw	0
   442     0118  342C               	retlw	44
   443     0119  34AA               	retlw	170
   444     011A  3401               	retlw	1
   445     011B  3400               	retlw	0
   446     011C  3460               	retlw	96
   447     011D  347B               	retlw	123
   448     011E  3401               	retlw	1
   449     011F  3400               	retlw	0
   450     0120  340C               	retlw	12
   451     0121  3466               	retlw	102
   452     0122  3401               	retlw	1
   453     0123  3400               	retlw	0
   454     0124  340C               	retlw	12
   455     0125  3452               	retlw	82
   456     0126  3401               	retlw	1
   457     0127  3400               	retlw	0
   458     0128  3438               	retlw	56
   459     0129  343F               	retlw	63
   460     012A  3401               	retlw	1
   461     012B  3400               	retlw	0
   462     012C  34A4               	retlw	164
   463     012D  342D               	retlw	45
   464     012E  3401               	retlw	1
   465     012F  3400               	retlw	0
   466     0130  3414               	retlw	20
   467     0131  341D               	retlw	29
   468     0132  3401               	retlw	1
   469     0133  3400               	retlw	0
   470     0134  3488               	retlw	136
   471     0135  340D               	retlw	13
   472     0136  3401               	retlw	1
   473     0137  3400               	retlw	0
   474     0138  34EC               	retlw	236
   475     0139  34FE               	retlw	254
   476     013A  3400               	retlw	0
   477     013B  3400               	retlw	0
   478     013C  3440               	retlw	64
   479     013D  34F1               	retlw	241
   480     013E  3400               	retlw	0
   481     013F  3400               	retlw	0
   482     0140  345C               	retlw	92
   483     0141  34E4               	retlw	228
   484     0142  3400               	retlw	0
   485     0143  3400               	retlw	0
   486     0144  342C               	retlw	44
   487     0145  34D8               	retlw	216
   488     0146  3400               	retlw	0
   489     0147  3400               	retlw	0
   490     0148  34C4               	retlw	196
   491     0149  34CC               	retlw	204
   492     014A  3400               	retlw	0
   493     014B  3400               	retlw	0
   494     014C  34FC               	retlw	252
   495     014D  34C1               	retlw	193
   496     014E  3400               	retlw	0
   497     014F  3400               	retlw	0
   498     0150  34E8               	retlw	232
   499     0151  34B7               	retlw	183
   500     0152  3400               	retlw	0
   501     0153  3400               	retlw	0
   502     0154  3460               	retlw	96
   503     0155  34AE               	retlw	174
   504     0156  3400               	retlw	0
   505     0157  3400               	retlw	0
   506     0158  3464               	retlw	100
   507     0159  34A5               	retlw	165
   508     015A  3400               	retlw	0
   509     015B  3400               	retlw	0
   510     015C  34E0               	retlw	224
   511     015D  349C               	retlw	156
   512     015E  3400               	retlw	0
   513     015F  3400               	retlw	0
   514     0160  34E8               	retlw	232
   515     0161  3494               	retlw	148
   516     0162  3400               	retlw	0
   517     0163  3400               	retlw	0
   518     0164  3468               	retlw	104
   519     0165  348D               	retlw	141
   520     0166  3400               	retlw	0
   521     0167  3400               	retlw	0
   522     0168  344C               	retlw	76
   523     0169  3486               	retlw	134
   524     016A  3400               	retlw	0
   525     016B  3400               	retlw	0
   526     016C  3494               	retlw	148
   527     016D  347F               	retlw	127
   528     016E  3400               	retlw	0
   529     016F  3400               	retlw	0
   530     0170  3440               	retlw	64
   531     0171  3479               	retlw	121
   532     0172  3400               	retlw	0
   533     0173  3400               	retlw	0
   534     0174  343C               	retlw	60
   535     0175  3473               	retlw	115
   536     0176  3400               	retlw	0
   537     0177  3400               	retlw	0
   538     0178  349C               	retlw	156
   539     0179  346D               	retlw	109
   540     017A  3400               	retlw	0
   541     017B  3400               	retlw	0
   542     017C  3438               	retlw	56
   543     017D  3468               	retlw	104
   544     017E  3400               	retlw	0
   545     017F  3400               	retlw	0
   546     0180  3438               	retlw	56
   547     0181  3463               	retlw	99
   548     0182  3400               	retlw	0
   549     0183  3400               	retlw	0
   550     0184  3474               	retlw	116
   551     0185  345E               	retlw	94
   552     0186  3400               	retlw	0
   553     0187  3400               	retlw	0
   554     0188  34EC               	retlw	236
   555     0189  3459               	retlw	89
   556     018A  3400               	retlw	0
   557     018B  3400               	retlw	0
   558     018C  34A0               	retlw	160
   559     018D  3455               	retlw	85
   560     018E  3400               	retlw	0
   561     018F  3400               	retlw	0
   562     0190  3490               	retlw	144
   563     0191  3451               	retlw	81
   564     0192  3400               	retlw	0
   565     0193  3400               	retlw	0
   566     0194  34BC               	retlw	188
   567     0195  344D               	retlw	77
   568     0196  3400               	retlw	0
   569     0197  3400               	retlw	0
   570     0198  341A               	retlw	26
   571     0199  344A               	retlw	74
   572     019A  3400               	retlw	0
   573     019B  3400               	retlw	0
   574     019C  34AA               	retlw	170
   575     019D  3446               	retlw	70
   576     019E  3400               	retlw	0
   577     019F  3400               	retlw	0
   578     01A0  346C               	retlw	108
   579     01A1  3443               	retlw	67
   580     01A2  3400               	retlw	0
   581     01A3  3400               	retlw	0
   582     01A4  344C               	retlw	76
   583     01A5  3440               	retlw	64
   584     01A6  3400               	retlw	0
   585     01A7  3400               	retlw	0
   586     01A8  345E               	retlw	94
   587     01A9  343D               	retlw	61
   588     01AA  3400               	retlw	0
   589     01AB  3400               	retlw	0
   590     01AC  3498               	retlw	152
   591     01AD  343A               	retlw	58
   592     01AE  3400               	retlw	0
   593     01AF  3400               	retlw	0
   594     01B0  34F0               	retlw	240
   595     01B1  3437               	retlw	55
   596     01B2  3400               	retlw	0
   597     01B3  3400               	retlw	0
   598     01B4  3470               	retlw	112
   599     01B5  3435               	retlw	53
   600     01B6  3400               	retlw	0
   601     01B7  3400               	retlw	0
   602     01B8  340E               	retlw	14
   603     01B9  3433               	retlw	51
   604     01BA  3400               	retlw	0
   605     01BB  3400               	retlw	0
   606     01BC  34CA               	retlw	202
   607     01BD  3430               	retlw	48
   608     01BE  3400               	retlw	0
   609     01BF  3400               	retlw	0
   610     01C0  34A4               	retlw	164
   611     01C1  342E               	retlw	46
   612     01C2  3400               	retlw	0
   613     01C3  3400               	retlw	0
   614     01C4  349C               	retlw	156
   615     01C5  342C               	retlw	44
   616     01C6  3400               	retlw	0
   617     01C7  3400               	retlw	0
   618     01C8  34A8               	retlw	168
   619     01C9  342A               	retlw	42
   620     01CA  3400               	retlw	0
   621     01CB  3400               	retlw	0
   622     01CC  34D2               	retlw	210
   623     01CD  3428               	retlw	40
   624     01CE  3400               	retlw	0
   625     01CF  3400               	retlw	0
   626     01D0  3410               	retlw	16
   627     01D1  3427               	retlw	39
   628     01D2  3400               	retlw	0
   629     01D3  3400               	retlw	0
   630     01D4  3466               	retlw	102
   631     01D5  3425               	retlw	37
   632     01D6  3400               	retlw	0
   633     01D7  3400               	retlw	0
   634     01D8  34CE               	retlw	206
   635     01D9  3423               	retlw	35
   636     01DA  3400               	retlw	0
   637     01DB  3400               	retlw	0
   638     01DC  344A               	retlw	74
   639     01DD  3422               	retlw	34
   640     01DE  3400               	retlw	0
   641     01DF  3400               	retlw	0
   642     01E0  34D8               	retlw	216
   643     01E1  3420               	retlw	32
   644     01E2  3400               	retlw	0
   645     01E3  3400               	retlw	0
   646     01E4  347A               	retlw	122
   647     01E5  341F               	retlw	31
   648     01E6  3400               	retlw	0
   649     01E7  3400               	retlw	0
   650     01E8  342A               	retlw	42
   651     01E9  341E               	retlw	30
   652     01EA  3400               	retlw	0
   653     01EB  3400               	retlw	0
   654     01EC  34EC               	retlw	236
   655     01ED  341C               	retlw	28
   656     01EE  3400               	retlw	0
   657     01EF  3400               	retlw	0
   658     01F0  34BA               	retlw	186
   659     01F1  341B               	retlw	27
   660     01F2  3400               	retlw	0
   661     01F3  3400               	retlw	0
   662     01F4  3498               	retlw	152
   663     01F5  341A               	retlw	26
   664     01F6  3400               	retlw	0
   665     01F7  3400               	retlw	0
   666     01F8  3484               	retlw	132
   667     01F9  3419               	retlw	25
   668     01FA  3400               	retlw	0
   669     01FB  3400               	retlw	0
   670     01FC  347C               	retlw	124
   671     01FD  3418               	retlw	24
   672     01FE  3400               	retlw	0
   673     01FF  3400               	retlw	0
   674     0200  3480               	retlw	128
   675     0201  3417               	retlw	23
   676     0202  3400               	retlw	0
   677     0203  3400               	retlw	0
   678     0204  3490               	retlw	144
   679     0205  3416               	retlw	22
   680     0206  3400               	retlw	0
   681     0207  3400               	retlw	0
   682     0208  34AA               	retlw	170
   683     0209  3415               	retlw	21
   684     020A  3400               	retlw	0
   685     020B  3400               	retlw	0
   686     020C  34CE               	retlw	206
   687     020D  3414               	retlw	20
   688     020E  3400               	retlw	0
   689     020F  3400               	retlw	0
   690     0210  34FE               	retlw	254
   691     0211  3413               	retlw	19
   692     0212  3400               	retlw	0
   693     0213  3400               	retlw	0
   694     0214  3436               	retlw	54
   695     0215  3413               	retlw	19
   696     0216  3400               	retlw	0
   697     0217  3400               	retlw	0
   698     0218  3476               	retlw	118
   699     0219  3412               	retlw	18
   700     021A  3400               	retlw	0
   701     021B  3400               	retlw	0
   702     021C  34C0               	retlw	192
   703     021D  3411               	retlw	17
   704     021E  3400               	retlw	0
   705     021F  3400               	retlw	0
   706     0220  3410               	retlw	16
   707     0221  3411               	retlw	17
   708     0222  3400               	retlw	0
   709     0223  3400               	retlw	0
   710     0224  346A               	retlw	106
   711     0225  3410               	retlw	16
   712     0226  3400               	retlw	0
   713     0227  3400               	retlw	0
   714     0228  34CA               	retlw	202
   715     0229  340F               	retlw	15
   716     022A  3400               	retlw	0
   717     022B  3400               	retlw	0
   718     022C  3430               	retlw	48
   719     022D  340F               	retlw	15
   720     022E  3400               	retlw	0
   721     022F  3400               	retlw	0
   722     0230  349E               	retlw	158
   723     0231  340E               	retlw	14
   724     0232  3400               	retlw	0
   725     0233  3400               	retlw	0
   726     0234  3412               	retlw	18
   727     0235  340E               	retlw	14
   728     0236  3400               	retlw	0
   729     0237  3400               	retlw	0
   730     0238  348C               	retlw	140
   731     0239  340D               	retlw	13
   732     023A  3400               	retlw	0
   733     023B  3400               	retlw	0
   734     023C  340C               	retlw	12
   735     023D  340D               	retlw	13
   736     023E  3400               	retlw	0
   737     023F  3400               	retlw	0
   738     0240  3490               	retlw	144
   739     0241  340C               	retlw	12
   740     0242  3400               	retlw	0
   741     0243  3400               	retlw	0
   742     0244  341A               	retlw	26
   743     0245  340C               	retlw	12
   744     0246  3400               	retlw	0
   745     0247  3400               	retlw	0
   746     0248  34AA               	retlw	170
   747     0249  340B               	retlw	11
   748     024A  3400               	retlw	0
   749     024B  3400               	retlw	0
   750     024C  343E               	retlw	62
   751     024D  340B               	retlw	11
   752     024E  3400               	retlw	0
   753     024F  3400               	retlw	0
   754     0250  34D6               	retlw	214
   755     0251  340A               	retlw	10
   756     0252  3400               	retlw	0
   757     0253  3400               	retlw	0
   758     0254  3472               	retlw	114
   759     0255  340A               	retlw	10
   760     0256  3400               	retlw	0
   761     0257  3400               	retlw	0
   762     0258  3414               	retlw	20
   763     0259  340A               	retlw	10
   764     025A  3400               	retlw	0
   765     025B  3400               	retlw	0
   766     025C  34B8               	retlw	184
   767     025D  3409               	retlw	9
   768     025E  3400               	retlw	0
   769     025F  3400               	retlw	0
   770     0260  3460               	retlw	96
   771     0261  3409               	retlw	9
   772     0262  3400               	retlw	0
   773     0263  3400               	retlw	0
   774     0264  340C               	retlw	12
   775     0265  3409               	retlw	9
   776     0266  3400               	retlw	0
   777     0267  3400               	retlw	0
   778     0268  34BA               	retlw	186
   779     0269  3408               	retlw	8
   780     026A  3400               	retlw	0
   781     026B  3400               	retlw	0
   782     026C  346E               	retlw	110
   783     026D  3408               	retlw	8
   784     026E  3400               	retlw	0
   785     026F  3400               	retlw	0
   786     0270  3422               	retlw	34
   787     0271  3408               	retlw	8
   788     0272  3400               	retlw	0
   789     0273  3400               	retlw	0
   790     0274  34DC               	retlw	220
   791     0275  3407               	retlw	7
   792     0276  3400               	retlw	0
   793     0277  3400               	retlw	0
   794     0278  3496               	retlw	150
   795     0279  3407               	retlw	7
   796     027A  3400               	retlw	0
   797     027B  3400               	retlw	0
   798     027C  3454               	retlw	84
   799     027D  3407               	retlw	7
   800     027E  3400               	retlw	0
   801     027F  3400               	retlw	0
   802     0280  3415               	retlw	21
   803     0281  3407               	retlw	7
   804     0282  3400               	retlw	0
   805     0283  3400               	retlw	0
   806     0284  34D7               	retlw	215
   807     0285  3406               	retlw	6
   808     0286  3400               	retlw	0
   809     0287  3400               	retlw	0
   810     0288                     __end_of_TABLE:
   811     000B                     _INTCONbits	set	11
   812     001B                     _PR2	set	27
   813     0011                     _PIR1bits	set	17
   814     000C                     _PORTAbits	set	12
   815     001C                     _T2CONbits	set	28
   816     009E                     _ADCON1	set	158
   817     0099                     _OSCCON	set	153
   818     0091                     _PIE1bits	set	145
   819     009B                     _ADRESL	set	155
   820     009C                     _ADRESH	set	156
   821     009D                     _ADCON0bits	set	157
   822     008C                     _TRISAbits	set	140
   823     011D                     _APFCONbits	set	285
   824     018C                     _ANSELAbits	set	396
   825     0293                     _CCP1CONbits	set	659
   826     0293                     _CCP1CON	set	659
   827     0291                     _CCPR1L	set	657
   828                           
   829                           	psect	cinit
   830     00E6                     start_initialization:	
   831                           ; #config settings
   832                           
   833     00E6                     __initialization:
   834                           
   835                           ; Clear objects allocated to COMMON
   836     00E6  01F0               	clrf	__pbssCOMMON& (0+127)
   837     00E7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   838     00E8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   839     00E9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   840     00EA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   841     00EB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   842                           
   843                           ; Clear objects allocated to BANK0
   844     00EC  3040               	movlw	low __pbssBANK0
   845     00ED  0084               	movwf	4
   846     00EE  3000               	movlw	high __pbssBANK0
   847     00EF  0085               	movwf	5
   848     00F0  3018               	movlw	24
   849     00F1  3184  24EF  3180   	fcall	clear_ram0
   850     00F4                     end_of_initialization:	
   851                           ;End of C runtime variable initialization code
   852                           
   853     00F4                     __end_of__initialization:
   854     00F4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   855     00F5  0020               	movlb	0
   856     00F6  3184  2C76         	ljmp	_main	;jump to C main() function
   857                           
   858                           	psect	bssCOMMON
   859     0070                     __pbssCOMMON:
   860     0070                     _t:
   861     0070                     	ds	2
   862     0072                     _timerActive:
   863     0072                     	ds	1
   864     0073                     _add:
   865     0073                     	ds	1
   866     0074                     _p:
   867     0074                     	ds	1
   868     0075                     _i:
   869     0075                     	ds	1
   870                           
   871                           	psect	bssBANK0
   872     0040                     __pbssBANK0:
   873     0040                     _ad1:
   874     0040                     	ds	4
   875     0044                     _Rt:
   876     0044                     	ds	4
   877     0048                     _ad3:
   878     0048                     	ds	2
   879     004A                     _ad2:
   880     004A                     	ds	2
   881     004C                     _timerCounter:
   882     004C                     	ds	2
   883     004E                     _r:
   884     004E                     	ds	2
   885     0050                     _y:
   886     0050                     	ds	2
   887     0052                     _v:
   888     0052                     	ds	2
   889     0054                     _VR:
   890     0054                     	ds	4
   891                           
   892                           	psect	clrtext
   893     04EF                     clear_ram0:	
   894                           ;	Called with FSR0 containing the base address, and
   895                           ;	WREG with the size to clear
   896                           
   897     04EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   898     04F0                     clrloop0:
   899     04F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   900     04F1  3101               	addfsr 0,1
   901     04F2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   902     04F3  2CF0               	goto	clrloop0	;have we reached the end yet?
   903     04F4  3400               	retlw	0	;all done for this memory range, return
   904                           
   905                           	psect	cstackCOMMON
   906     0076                     __pcstackCOMMON:
   907     0076                     ?_setup:
   908     0076                     ?_PWMinit:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0076                     ?_ADsensing:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0076                     ?_Tempjudgements:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0076                     ?_main:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0076                     ?_ISR:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0076                     ??_ISR:	
   924                           ; 1 bytes @ 0x0
   925                           
   926                           
   927                           ; 1 bytes @ 0x0
   928     0076                     	ds	6
   929                           
   930                           	psect	cstackBANK0
   931     0020                     __pcstackBANK0:
   932     0020                     ??_setup:
   933     0020                     ??_PWMinit:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0020                     ??_Tempjudgements:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0020                     ?_getADCValue:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0020                     ?___wmul:	
   943                           ; 2 bytes @ 0x0
   944                           
   945     0020                     ?___lmul:	
   946                           ; 2 bytes @ 0x0
   947                           
   948     0020                     ___wmul@multiplier:	
   949                           ; 4 bytes @ 0x0
   950                           
   951     0020                     ___lmul@multiplier:	
   952                           ; 2 bytes @ 0x0
   953                           
   954                           
   955                           ; 4 bytes @ 0x0
   956     0020                     	ds	2
   957     0022                     ??_getADCValue:
   958     0022                     ___wmul@multiplicand:	
   959                           ; 1 bytes @ 0x2
   960                           
   961                           
   962                           ; 2 bytes @ 0x2
   963     0022                     	ds	2
   964     0024                     ??___wmul:
   965     0024                     ___wmul@product:	
   966                           ; 1 bytes @ 0x4
   967                           
   968     0024                     ___lmul@multiplicand:	
   969                           ; 2 bytes @ 0x4
   970                           
   971                           
   972                           ; 4 bytes @ 0x4
   973     0024                     	ds	4
   974     0028                     ??___lmul:
   975     0028                     ___lmul@product:	
   976                           ; 1 bytes @ 0x8
   977                           
   978                           
   979                           ; 4 bytes @ 0x8
   980     0028                     	ds	1
   981     0029                     getADCValue@channel:
   982                           
   983                           ; 1 bytes @ 0x9
   984     0029                     	ds	3
   985     002C                     ?___lldiv:
   986     002C                     ___lldiv@divisor:	
   987                           ; 4 bytes @ 0xC
   988                           
   989                           
   990                           ; 4 bytes @ 0xC
   991     002C                     	ds	4
   992     0030                     ___lldiv@dividend:
   993                           
   994                           ; 4 bytes @ 0x10
   995     0030                     	ds	4
   996     0034                     ??___lldiv:
   997                           
   998                           ; 1 bytes @ 0x14
   999     0034                     	ds	1
  1000     0035                     ___lldiv@quotient:
  1001                           
  1002                           ; 4 bytes @ 0x15
  1003     0035                     	ds	4
  1004     0039                     ___lldiv@counter:
  1005                           
  1006                           ; 1 bytes @ 0x19
  1007     0039                     	ds	1
  1008     003A                     ??_ADsensing:
  1009                           
  1010                           ; 1 bytes @ 0x1A
  1011     003A                     	ds	4
  1012     003E                     ??_main:
  1013                           
  1014                           ; 1 bytes @ 0x1E
  1015     003E                     	ds	2
  1016                           
  1017                           	psect	maintext
  1018     0476                     __pmaintext:	
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 56 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : B1F/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1038 ;;      Params:         0       0       0       0
  1039 ;;      Locals:         0       0       0       0
  1040 ;;      Temps:          0       2       0       0
  1041 ;;      Totals:         0       2       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels required when called: 3
  1044 ;; This function calls:
  1045 ;;		_ADsensing
  1046 ;;		_PWMinit
  1047 ;;		_Tempjudgements
  1048 ;;		_setup
  1049 ;; This function is called by:
  1050 ;;		Startup code after reset
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054     0476                     _main:	
  1055                           ;psect for function _main
  1056                           
  1057     0476                     l1359:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1060                           
  1061                           
  1062                           ;main.c: 58:  timerActive = 0;
  1063     0476  01F2               	clrf	_timerActive
  1064                           
  1065                           ;main.c: 59:     timerCounter = 0;
  1066     0477  0020               	movlb	0	; select bank0
  1067     0478  01CC               	clrf	_timerCounter
  1068     0479  01CD               	clrf	_timerCounter+1
  1069     047A                     l1361:
  1070                           
  1071                           ;main.c: 61:     setup();
  1072     047A  3184  24C5  3184   	fcall	_setup
  1073     047D                     l1363:
  1074                           
  1075                           ;main.c: 62:     PWMinit();
  1076     047D  3184  24DA  3184   	fcall	_PWMinit
  1077     0480                     l1365:
  1078                           
  1079                           ;main.c: 64:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  1080     0480  3029               	movlw	41
  1081     0481  0020               	movlb	0	; select bank0
  1082     0482  00BF               	movwf	??_main+1
  1083     0483  3096               	movlw	150
  1084     0484  00BE               	movwf	??_main
  1085     0485  307F               	movlw	127
  1086     0486                     u1057:
  1087     0486  0B89               	decfsz	9,f
  1088     0487  2C86               	goto	u1057
  1089     0488  0BBE               	decfsz	??_main,f
  1090     0489  2C86               	goto	u1057
  1091     048A  0BBF               	decfsz	??_main+1,f
  1092     048B  2C86               	goto	u1057
  1093     048C                     l1367:
  1094                           
  1095                           ;main.c: 65:  T2CONbits.TMR2ON = 1;
  1096     048C  0020               	movlb	0	; select bank0
  1097     048D  151C               	bsf	28,2	;volatile
  1098     048E                     l1369:
  1099                           
  1100                           ;main.c: 66:  TRISAbits.TRISA5 = 0;
  1101     048E  0021               	movlb	1	; select bank1
  1102     048F  128C               	bcf	12,5	;volatile
  1103     0490                     l1371:
  1104                           
  1105                           ;main.c: 69:     {;main.c: 70:   ADsensing();
  1106     0490  3182  2288  3184   	fcall	_ADsensing
  1107     0493                     l1373:
  1108                           
  1109                           ;main.c: 71:   Tempjudgements();
  1110     0493  3183  23BC  3184   	fcall	_Tempjudgements
  1111     0496                     l1375:
  1112                           
  1113                           ;main.c: 73:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1114     0496  3005               	movlw	5
  1115     0497  0020               	movlb	0	; select bank0
  1116     0498  00BF               	movwf	??_main+1
  1117     0499  300F               	movlw	15
  1118     049A  00BE               	movwf	??_main
  1119     049B  30F1               	movlw	241
  1120     049C                     u1067:
  1121     049C  0B89               	decfsz	9,f
  1122     049D  2C9C               	goto	u1067
  1123     049E  0BBE               	decfsz	??_main,f
  1124     049F  2C9C               	goto	u1067
  1125     04A0  0BBF               	decfsz	??_main+1,f
  1126     04A1  2C9C               	goto	u1067
  1127     04A2  2C90               	goto	l1371
  1128     04A3  3180  28E4         	ljmp	start
  1129     04A5                     __end_of_main:
  1130                           
  1131                           	psect	text1
  1132     04C5                     __ptext1:	
  1133 ;; *************** function _setup *****************
  1134 ;; Defined at:
  1135 ;;		line 4 in file "KF2.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1149 ;;      Params:         0       0       0       0
  1150 ;;      Locals:         0       0       0       0
  1151 ;;      Temps:          0       0       0       0
  1152 ;;      Totals:         0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163     04C5                     _setup:	
  1164                           ;psect for function _setup
  1165                           
  1166     04C5                     l1291:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _setup: [wreg]
  1169                           
  1170                           
  1171                           ;KF2.c: 6:  OSCCON = 0b01110000;
  1172     04C5  3070               	movlw	112
  1173     04C6  0021               	movlb	1	; select bank1
  1174     04C7  0099               	movwf	25	;volatile
  1175     04C8                     l1293:
  1176                           
  1177                           ;KF2.c: 9:  PORTAbits.RA4 = 0;
  1178     04C8  0020               	movlb	0	; select bank0
  1179     04C9  120C               	bcf	12,4	;volatile
  1180     04CA                     l1295:
  1181                           
  1182                           ;KF2.c: 10:  TRISAbits.TRISA4 = 0;
  1183     04CA  0021               	movlb	1	; select bank1
  1184     04CB  120C               	bcf	12,4	;volatile
  1185     04CC                     l1297:
  1186                           
  1187                           ;KF2.c: 13:  ANSELAbits.ANSA0 = 1;
  1188     04CC  0023               	movlb	3	; select bank3
  1189     04CD  140C               	bsf	12,0	;volatile
  1190     04CE                     l1299:
  1191                           
  1192                           ;KF2.c: 14:  ANSELAbits.ANSA1 = 1;
  1193     04CE  148C               	bsf	12,1	;volatile
  1194     04CF                     l1301:
  1195                           
  1196                           ;KF2.c: 15:  ANSELAbits.ANSA2 = 1;
  1197     04CF  150C               	bsf	12,2	;volatile
  1198                           
  1199                           ;KF2.c: 16:  ADCON1 = 0x50;
  1200     04D0  3050               	movlw	80
  1201     04D1  0021               	movlb	1	; select bank1
  1202     04D2  009E               	movwf	30	;volatile
  1203     04D3                     l1303:
  1204                           
  1205                           ;KF2.c: 17:  PIE1bits.ADIE = 1;
  1206     04D3  1711               	bsf	17,6	;volatile
  1207     04D4                     l1305:
  1208                           
  1209                           ;KF2.c: 18:  PIR1bits.ADIF = 0;
  1210     04D4  0020               	movlb	0	; select bank0
  1211     04D5  1311               	bcf	17,6	;volatile
  1212     04D6                     l1307:
  1213                           
  1214                           ;KF2.c: 19:  ADCON0bits.GO = 0;
  1215     04D6  0021               	movlb	1	; select bank1
  1216     04D7  109D               	bcf	29,1	;volatile
  1217     04D8                     l1309:
  1218                           
  1219                           ;KF2.c: 20:  ADCON0bits.ADON = 1;
  1220     04D8  141D               	bsf	29,0	;volatile
  1221     04D9                     l150:
  1222     04D9  0008               	return
  1223     04DA                     __end_of_setup:
  1224                           
  1225                           	psect	text2
  1226     03BC                     __ptext2:	
  1227 ;; *************** function _Tempjudgements *****************
  1228 ;; Defined at:
  1229 ;;		line 112 in file "main.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1243 ;;      Params:         0       0       0       0
  1244 ;;      Locals:         0       0       0       0
  1245 ;;      Temps:          0       3       0       0
  1246 ;;      Totals:         0       3       0       0
  1247 ;;Total ram usage:        3 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257     03BC                     _Tempjudgements:	
  1258                           ;psect for function _Tempjudgements
  1259                           
  1260     03BC                     l1125:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _Tempjudgements: [wreg+status,2+status,0]
  1263                           
  1264                           
  1265                           ;main.c: 114:  if(v <= t)
  1266     03BC  0871               	movf	_t+1,w
  1267     03BD  3A80               	xorlw	128
  1268     03BE  0020               	movlb	0	; select bank0
  1269     03BF  00A0               	movwf	??_Tempjudgements
  1270     03C0  0853               	movf	_v+1,w
  1271     03C1  3A80               	xorlw	128
  1272     03C2  0220               	subwf	??_Tempjudgements,w
  1273     03C3  1D03               	skipz
  1274     03C4  2BC7               	goto	u645
  1275     03C5  0852               	movf	_v,w
  1276     03C6  0270               	subwf	_t,w
  1277     03C7                     u645:
  1278     03C7  1C03               	skipc
  1279     03C8  2BCA               	goto	u641
  1280     03C9  2BCB               	goto	u640
  1281     03CA                     u641:
  1282     03CA  2BEA               	goto	l1135
  1283     03CB                     u640:
  1284     03CB                     l1127:
  1285                           
  1286                           ;main.c: 115:  {;main.c: 116:   PORTAbits.RA4 = 1;
  1287     03CB  0020               	movlb	0	; select bank0
  1288     03CC  160C               	bsf	12,4	;volatile
  1289     03CD                     l1129:
  1290                           
  1291                           ;main.c: 117:   y = 1;
  1292     03CD  3001               	movlw	1
  1293     03CE  00D0               	movwf	_y
  1294     03CF  3000               	movlw	0
  1295     03D0  00D1               	movwf	_y+1
  1296                           
  1297                           ;main.c: 118:   if (r < 100 || r > 900)
  1298     03D1  3000               	movlw	0
  1299     03D2  024F               	subwf	_r+1,w
  1300     03D3  3064               	movlw	100
  1301     03D4  1903               	skipnz
  1302     03D5  024E               	subwf	_r,w
  1303     03D6  1C03               	skipc
  1304     03D7  2BD9               	goto	u651
  1305     03D8  2BDA               	goto	u650
  1306     03D9                     u651:
  1307     03D9  2BE3               	goto	l91
  1308     03DA                     u650:
  1309     03DA                     l1131:
  1310     03DA  3003               	movlw	3
  1311     03DB  024F               	subwf	_r+1,w
  1312     03DC  3085               	movlw	133
  1313     03DD  1903               	skipnz
  1314     03DE  024E               	subwf	_r,w
  1315     03DF  1C03               	skipc
  1316     03E0  2BE2               	goto	u661
  1317     03E1  2BE3               	goto	u660
  1318     03E2                     u661:
  1319     03E2  2BE6               	goto	l1133
  1320     03E3                     u660:
  1321     03E3                     l91:
  1322                           
  1323                           ;main.c: 119:   {;main.c: 120:    timerActive = 1;
  1324     03E3  01F2               	clrf	_timerActive
  1325     03E4  0AF2               	incf	_timerActive,f
  1326                           
  1327                           ;main.c: 121:   }
  1328     03E5  2C06               	goto	l95
  1329     03E6                     l1133:
  1330                           
  1331                           ;main.c: 123:   {;main.c: 124:    timerActive = 0;
  1332     03E6  01F2               	clrf	_timerActive
  1333                           
  1334                           ;main.c: 125:    timerCounter = 0;
  1335     03E7  01CC               	clrf	_timerCounter
  1336     03E8  01CD               	clrf	_timerCounter+1
  1337     03E9  2C06               	goto	l95
  1338     03EA                     l1135:
  1339     03EA  0870               	movf	_t,w
  1340     03EB  3E05               	addlw	5
  1341     03EC  0020               	movlb	0	; select bank0
  1342     03ED  00A0               	movwf	??_Tempjudgements
  1343     03EE  3000               	movlw	0
  1344     03EF  3D71               	addwfc	_t+1,w
  1345     03F0  00A1               	movwf	??_Tempjudgements+1
  1346     03F1  0821               	movf	??_Tempjudgements+1,w
  1347     03F2  3A80               	xorlw	128
  1348     03F3  00A2               	movwf	??_Tempjudgements+2
  1349     03F4  0853               	movf	_v+1,w
  1350     03F5  3A80               	xorlw	128
  1351     03F6  0222               	subwf	??_Tempjudgements+2,w
  1352     03F7  1D03               	skipz
  1353     03F8  2BFB               	goto	u675
  1354     03F9  0852               	movf	_v,w
  1355     03FA  0220               	subwf	??_Tempjudgements,w
  1356     03FB                     u675:
  1357     03FB  1803               	skipnc
  1358     03FC  2BFE               	goto	u671
  1359     03FD  2BFF               	goto	u670
  1360     03FE                     u671:
  1361     03FE  2C06               	goto	l95
  1362     03FF                     u670:
  1363     03FF                     l1137:
  1364                           
  1365                           ;main.c: 129:  {;main.c: 130:   PORTAbits.RA4 = 0;
  1366     03FF  0020               	movlb	0	; select bank0
  1367     0400  120C               	bcf	12,4	;volatile
  1368     0401                     l1139:
  1369                           
  1370                           ;main.c: 131:   y = 0;
  1371     0401  01D0               	clrf	_y
  1372     0402  01D1               	clrf	_y+1
  1373                           
  1374                           ;main.c: 132:   timerActive = 0;
  1375     0403  01F2               	clrf	_timerActive
  1376                           
  1377                           ;main.c: 133:   timerCounter = 0;
  1378     0404  01CC               	clrf	_timerCounter
  1379     0405  01CD               	clrf	_timerCounter+1
  1380     0406                     l95:
  1381     0406  0008               	return
  1382     0407                     __end_of_Tempjudgements:
  1383                           
  1384                           	psect	text3
  1385     04DA                     __ptext3:	
  1386 ;; *************** function _PWMinit *****************
  1387 ;; Defined at:
  1388 ;;		line 23 in file "KF2.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1402 ;;      Params:         0       0       0       0
  1403 ;;      Locals:         0       0       0       0
  1404 ;;      Temps:          0       0       0       0
  1405 ;;      Totals:         0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     04DA                     _PWMinit:	
  1417                           ;psect for function _PWMinit
  1418                           
  1419     04DA                     l1311:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1422                           
  1423                           
  1424                           ;KF2.c: 25:  TRISAbits.TRISA5 = 1;
  1425     04DA  0021               	movlb	1	; select bank1
  1426     04DB  168C               	bsf	12,5	;volatile
  1427                           
  1428                           ;KF2.c: 26:  APFCONbits.CCP1SEL = 1;
  1429     04DC  0022               	movlb	2	; select bank2
  1430     04DD  141D               	bsf	29,0	;volatile
  1431     04DE                     l1313:
  1432                           
  1433                           ;KF2.c: 27:  PR2 = 254;
  1434     04DE  30FE               	movlw	254
  1435     04DF  0020               	movlb	0	; select bank0
  1436     04E0  009B               	movwf	27	;volatile
  1437     04E1                     l1315:
  1438                           
  1439                           ;KF2.c: 28:  CCP1CONbits.CCP1M = 0x0F;
  1440     04E1  300F               	movlw	15
  1441     04E2  0025               	movlb	5	; select bank5
  1442     04E3  0493               	iorwf	19,f	;volatile
  1443     04E4                     l1317:
  1444                           
  1445                           ;KF2.c: 29:  CCP1CONbits.P1M = 0;
  1446     04E4  303F               	movlw	-193
  1447     04E5  0593               	andwf	19,f	;volatile
  1448     04E6                     l1319:
  1449                           
  1450                           ;KF2.c: 30:  INTCONbits.GIE = 1;
  1451     04E6  178B               	bsf	11,7	;volatile
  1452     04E7                     l1321:
  1453                           
  1454                           ;KF2.c: 31:  INTCONbits.PEIE = 1;
  1455     04E7  170B               	bsf	11,6	;volatile
  1456     04E8                     l1323:
  1457                           
  1458                           ;KF2.c: 32:  PIE1bits.TMR2IE = 1;
  1459     04E8  0021               	movlb	1	; select bank1
  1460     04E9  1491               	bsf	17,1	;volatile
  1461     04EA                     l1325:
  1462                           
  1463                           ;KF2.c: 33:  PIR1bits.TMR2IF = 0;
  1464     04EA  0020               	movlb	0	; select bank0
  1465     04EB  1091               	bcf	17,1	;volatile
  1466     04EC                     l1327:
  1467                           
  1468                           ;KF2.c: 34:  T2CONbits.T2CKPS = 3;
  1469     04EC  3003               	movlw	3
  1470     04ED  049C               	iorwf	28,f	;volatile
  1471     04EE                     l153:
  1472     04EE  0008               	return
  1473     04EF                     __end_of_PWMinit:
  1474                           
  1475                           	psect	text4
  1476     0288                     __ptext4:	
  1477 ;; *************** function _ADsensing *****************
  1478 ;; Defined at:
  1479 ;;		line 86 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1493 ;;      Params:         0       0       0       0
  1494 ;;      Locals:         0       0       0       0
  1495 ;;      Temps:          0       4       0       0
  1496 ;;      Totals:         0       4       0       0
  1497 ;;Total ram usage:        4 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 2
  1500 ;; This function calls:
  1501 ;;		___lldiv
  1502 ;;		___lmul
  1503 ;;		___wmul
  1504 ;;		_getADCValue
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510     0288                     _ADsensing:	
  1511                           ;psect for function _ADsensing
  1512                           
  1513     0288                     l1329:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _ADsensing: [wreg+status,2+status,0+pclath+cstack]
  1516                           
  1517                           
  1518                           ;main.c: 88:  if(add == 0)
  1519     0288  0873               	movf	_add,w
  1520     0289  1D03               	btfss	3,2
  1521     028A  2A8C               	goto	u1001
  1522     028B  2A8D               	goto	u1000
  1523     028C                     u1001:
  1524     028C  2B20               	goto	l1341
  1525     028D                     u1000:
  1526     028D                     l1331:
  1527                           
  1528                           ;main.c: 89:  {;main.c: 90:   ad1 = getADCValue(0x00);
  1529     028D  3000               	movlw	0
  1530     028E  3184  2407  3182   	fcall	_getADCValue
  1531     0291  0020               	movlb	0	; select bank0
  1532     0292  0820               	movf	?_getADCValue,w
  1533     0293  00C0               	movwf	_ad1
  1534     0294  0821               	movf	?_getADCValue+1,w
  1535     0295  00C1               	movwf	_ad1+1
  1536     0296  01C2               	clrf	_ad1+2
  1537     0297  01C3               	clrf	_ad1+3
  1538     0298                     l1333:
  1539                           
  1540                           ;main.c: 91:   ad1 = 1024 - ad1;
  1541     0298  3000               	movlw	0
  1542     0299  00BA               	movwf	??_ADsensing
  1543     029A  3004               	movlw	4
  1544     029B  00BB               	movwf	??_ADsensing+1
  1545     029C  3000               	movlw	0
  1546     029D  00BC               	movwf	??_ADsensing+2
  1547     029E  3000               	movlw	0
  1548     029F  00BD               	movwf	??_ADsensing+3
  1549     02A0  0840               	movf	_ad1,w
  1550     02A1  02BA               	subwf	??_ADsensing,f
  1551     02A2  0841               	movf	_ad1+1,w
  1552     02A3  3BBB               	subwfb	??_ADsensing+1,f
  1553     02A4  0842               	movf	_ad1+2,w
  1554     02A5  3BBC               	subwfb	??_ADsensing+2,f
  1555     02A6  0843               	movf	_ad1+3,w
  1556     02A7  3BBD               	subwfb	??_ADsensing+3,f
  1557     02A8  083D               	movf	??_ADsensing+3,w
  1558     02A9  00C3               	movwf	_ad1+3
  1559     02AA  083C               	movf	??_ADsensing+2,w
  1560     02AB  00C2               	movwf	_ad1+2
  1561     02AC  083B               	movf	??_ADsensing+1,w
  1562     02AD  00C1               	movwf	_ad1+1
  1563     02AE  083A               	movf	??_ADsensing,w
  1564     02AF  00C0               	movwf	_ad1
  1565     02B0                     l1335:
  1566                           
  1567                           ;main.c: 92:   VR = ad1 * 500 / 1024;
  1568     02B0  0843               	movf	_ad1+3,w
  1569     02B1  00A3               	movwf	___lmul@multiplier+3
  1570     02B2  0842               	movf	_ad1+2,w
  1571     02B3  00A2               	movwf	___lmul@multiplier+2
  1572     02B4  0841               	movf	_ad1+1,w
  1573     02B5  00A1               	movwf	___lmul@multiplier+1
  1574     02B6  0840               	movf	_ad1,w
  1575     02B7  00A0               	movwf	___lmul@multiplier
  1576     02B8  3000               	movlw	0
  1577     02B9  00A7               	movwf	___lmul@multiplicand+3
  1578     02BA  3000               	movlw	0
  1579     02BB  00A6               	movwf	___lmul@multiplicand+2
  1580     02BC  3001               	movlw	1
  1581     02BD  00A5               	movwf	___lmul@multiplicand+1
  1582     02BE  30F4               	movlw	244
  1583     02BF  00A4               	movwf	___lmul@multiplicand
  1584     02C0  3184  2442  3182   	fcall	___lmul
  1585     02C3  0020               	movlb	0	; select bank0
  1586     02C4  0820               	movf	?___lmul,w
  1587     02C5  00BA               	movwf	??_ADsensing
  1588     02C6  0821               	movf	?___lmul+1,w
  1589     02C7  00BB               	movwf	??_ADsensing+1
  1590     02C8  0822               	movf	?___lmul+2,w
  1591     02C9  00BC               	movwf	??_ADsensing+2
  1592     02CA  0823               	movf	?___lmul+3,w
  1593     02CB  00BD               	movwf	??_ADsensing+3
  1594     02CC  300A               	movlw	10
  1595     02CD                     u1015:
  1596     02CD  36BD               	lsrf	??_ADsensing+3,f
  1597     02CE  0CBC               	rrf	??_ADsensing+2,f
  1598     02CF  0CBB               	rrf	??_ADsensing+1,f
  1599     02D0  0CBA               	rrf	??_ADsensing,f
  1600     02D1                     u1010:
  1601     02D1  0B89               	decfsz	9,f
  1602     02D2  2ACD               	goto	u1015
  1603     02D3  083D               	movf	??_ADsensing+3,w
  1604     02D4  00D7               	movwf	_VR+3
  1605     02D5  083C               	movf	??_ADsensing+2,w
  1606     02D6  00D6               	movwf	_VR+2
  1607     02D7  083B               	movf	??_ADsensing+1,w
  1608     02D8  00D5               	movwf	_VR+1
  1609     02D9  083A               	movf	??_ADsensing,w
  1610     02DA  00D4               	movwf	_VR
  1611     02DB                     l1337:
  1612                           
  1613                           ;main.c: 93:   Rt = (unsigned long)(500 - VR) * 10000 / VR;
  1614     02DB  0857               	movf	_VR+3,w
  1615     02DC  00AF               	movwf	___lldiv@divisor+3
  1616     02DD  0856               	movf	_VR+2,w
  1617     02DE  00AE               	movwf	___lldiv@divisor+2
  1618     02DF  0855               	movf	_VR+1,w
  1619     02E0  00AD               	movwf	___lldiv@divisor+1
  1620     02E1  0854               	movf	_VR,w
  1621     02E2  00AC               	movwf	___lldiv@divisor
  1622     02E3  30F4               	movlw	244
  1623     02E4  00BA               	movwf	??_ADsensing
  1624     02E5  3001               	movlw	1
  1625     02E6  00BB               	movwf	??_ADsensing+1
  1626     02E7  3000               	movlw	0
  1627     02E8  00BC               	movwf	??_ADsensing+2
  1628     02E9  3000               	movlw	0
  1629     02EA  00BD               	movwf	??_ADsensing+3
  1630     02EB  0854               	movf	_VR,w
  1631     02EC  02BA               	subwf	??_ADsensing,f
  1632     02ED  0855               	movf	_VR+1,w
  1633     02EE  3BBB               	subwfb	??_ADsensing+1,f
  1634     02EF  0856               	movf	_VR+2,w
  1635     02F0  3BBC               	subwfb	??_ADsensing+2,f
  1636     02F1  0857               	movf	_VR+3,w
  1637     02F2  3BBD               	subwfb	??_ADsensing+3,f
  1638     02F3  083D               	movf	??_ADsensing+3,w
  1639     02F4  00A3               	movwf	___lmul@multiplier+3
  1640     02F5  083C               	movf	??_ADsensing+2,w
  1641     02F6  00A2               	movwf	___lmul@multiplier+2
  1642     02F7  083B               	movf	??_ADsensing+1,w
  1643     02F8  00A1               	movwf	___lmul@multiplier+1
  1644     02F9  083A               	movf	??_ADsensing,w
  1645     02FA  00A0               	movwf	___lmul@multiplier
  1646     02FB  3000               	movlw	0
  1647     02FC  00A7               	movwf	___lmul@multiplicand+3
  1648     02FD  3000               	movlw	0
  1649     02FE  00A6               	movwf	___lmul@multiplicand+2
  1650     02FF  3027               	movlw	39
  1651     0300  00A5               	movwf	___lmul@multiplicand+1
  1652     0301  3010               	movlw	16
  1653     0302  00A4               	movwf	___lmul@multiplicand
  1654     0303  3184  2442  3182   	fcall	___lmul
  1655     0306  0020               	movlb	0	; select bank0
  1656     0307  0823               	movf	?___lmul+3,w
  1657     0308  00B3               	movwf	___lldiv@dividend+3
  1658     0309  0822               	movf	?___lmul+2,w
  1659     030A  00B2               	movwf	___lldiv@dividend+2
  1660     030B  0821               	movf	?___lmul+1,w
  1661     030C  00B1               	movwf	___lldiv@dividend+1
  1662     030D  0820               	movf	?___lmul,w
  1663     030E  00B0               	movwf	___lldiv@dividend
  1664     030F  3183  2361  3182   	fcall	___lldiv
  1665     0312  0020               	movlb	0	; select bank0
  1666     0313  082F               	movf	?___lldiv+3,w
  1667     0314  00C7               	movwf	_Rt+3
  1668     0315  082E               	movf	?___lldiv+2,w
  1669     0316  00C6               	movwf	_Rt+2
  1670     0317  082D               	movf	?___lldiv+1,w
  1671     0318  00C5               	movwf	_Rt+1
  1672     0319  082C               	movf	?___lldiv,w
  1673     031A  00C4               	movwf	_Rt
  1674     031B                     l1339:
  1675                           
  1676                           ;main.c: 94:   add++;
  1677     031B  3001               	movlw	1
  1678     031C  00BA               	movwf	??_ADsensing
  1679     031D  083A               	movf	??_ADsensing,w
  1680     031E  07F3               	addwf	_add,f
  1681                           
  1682                           ;main.c: 95:  }
  1683     031F  2B60               	goto	l85
  1684     0320                     l1341:
  1685     0320  0373               	decf	_add,w
  1686     0321  1D03               	btfss	3,2
  1687     0322  2B24               	goto	u1021
  1688     0323  2B25               	goto	u1020
  1689     0324                     u1021:
  1690     0324  2B4C               	goto	l1349
  1691     0325                     u1020:
  1692     0325                     l1343:
  1693                           
  1694                           ;main.c: 97:  {;main.c: 98:   ad2 = getADCValue(0x01);
  1695     0325  3001               	movlw	1
  1696     0326  3184  2407  3182   	fcall	_getADCValue
  1697     0329  0020               	movlb	0	; select bank0
  1698     032A  0821               	movf	?_getADCValue+1,w
  1699     032B  00CB               	movwf	_ad2+1
  1700     032C  0820               	movf	?_getADCValue,w
  1701     032D  00CA               	movwf	_ad2
  1702                           
  1703                           ;main.c: 99:   t = (int)(ad2 * 10 / 128);
  1704     032E  084B               	movf	_ad2+1,w
  1705     032F  00A1               	movwf	___wmul@multiplier+1
  1706     0330  084A               	movf	_ad2,w
  1707     0331  00A0               	movwf	___wmul@multiplier
  1708     0332  300A               	movlw	10
  1709     0333  00A2               	movwf	___wmul@multiplicand
  1710     0334  3000               	movlw	0
  1711     0335  00A3               	movwf	___wmul@multiplicand+1
  1712     0336  3184  24A5  3182   	fcall	___wmul
  1713     0339  0020               	movlb	0	; select bank0
  1714     033A  0820               	movf	?___wmul,w
  1715     033B  00BA               	movwf	??_ADsensing
  1716     033C  0821               	movf	?___wmul+1,w
  1717     033D  00BB               	movwf	??_ADsensing+1
  1718     033E  3007               	movlw	7
  1719     033F                     u1035:
  1720     033F  36BB               	lsrf	??_ADsensing+1,f
  1721     0340  0CBA               	rrf	??_ADsensing,f
  1722     0341  0B89               	decfsz	9,f
  1723     0342  2B3F               	goto	u1035
  1724     0343  083A               	movf	??_ADsensing,w
  1725     0344  00F0               	movwf	_t
  1726     0345  083B               	movf	??_ADsensing+1,w
  1727     0346  00F1               	movwf	_t+1
  1728     0347                     l1345:
  1729                           
  1730                           ;main.c: 100:   t += 10;
  1731     0347  300A               	movlw	10
  1732     0348  07F0               	addwf	_t,f
  1733     0349  3000               	movlw	0
  1734     034A  3DF1               	addwfc	_t+1,f
  1735     034B  2B1B               	goto	l1339
  1736     034C                     l1349:
  1737     034C  3002               	movlw	2
  1738     034D  0673               	xorwf	_add,w
  1739     034E  1D03               	btfss	3,2
  1740     034F  2B51               	goto	u1041
  1741     0350  2B52               	goto	u1040
  1742     0351                     u1041:
  1743     0351  2B5F               	goto	l1355
  1744     0352                     u1040:
  1745     0352                     l1351:
  1746                           
  1747                           ;main.c: 104:  {;main.c: 105:   ad3 = getADCValue(0x02);
  1748     0352  3002               	movlw	2
  1749     0353  3184  2407  3182   	fcall	_getADCValue
  1750     0356  0020               	movlb	0	; select bank0
  1751     0357  0821               	movf	?_getADCValue+1,w
  1752     0358  00C9               	movwf	_ad3+1
  1753     0359  0820               	movf	?_getADCValue,w
  1754     035A  00C8               	movwf	_ad3
  1755     035B                     l1353:
  1756                           
  1757                           ;main.c: 106:   r = ad3;
  1758     035B  0849               	movf	_ad3+1,w
  1759     035C  00CF               	movwf	_r+1
  1760     035D  0848               	movf	_ad3,w
  1761     035E  00CE               	movwf	_r
  1762     035F                     l1355:
  1763                           
  1764                           ;main.c: 107:   add = 0;
  1765     035F  01F3               	clrf	_add
  1766     0360                     l85:	
  1767                           ;main.c: 108:  }
  1768                           
  1769     0360  0008               	return
  1770     0361                     __end_of_ADsensing:
  1771                           
  1772                           	psect	text5
  1773     0407                     __ptext5:	
  1774 ;; *************** function _getADCValue *****************
  1775 ;; Defined at:
  1776 ;;		line 77 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  channel         1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  channel         1    9[BANK0 ] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    0[BANK0 ] unsigned int 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1790 ;;      Params:         0       2       0       0
  1791 ;;      Locals:         0       1       0       0
  1792 ;;      Temps:          0       7       0       0
  1793 ;;      Totals:         0      10       0       0
  1794 ;;Total ram usage:       10 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_ADsensing
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804     0407                     _getADCValue:	
  1805                           ;psect for function _getADCValue
  1806                           
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1810                           ;getADCValue@channel stored from wreg
  1811     0407  0020               	movlb	0	; select bank0
  1812     0408  00A9               	movwf	getADCValue@channel
  1813     0409                     l1229:
  1814                           
  1815                           ;main.c: 77: unsigned int getADCValue(unsigned char channel);main.c: 78: {;main.c: 79:  
      +                             ADCON0bits.CHS = channel;
  1816     0409  0829               	movf	getADCValue@channel,w
  1817     040A  00A2               	movwf	??_getADCValue
  1818     040B  0DA2               	rlf	??_getADCValue,f
  1819     040C  0DA2               	rlf	??_getADCValue,f
  1820     040D  0021               	movlb	1	; select bank1
  1821     040E  081D               	movf	29,w	;volatile
  1822     040F  0020               	movlb	0	; select bank0
  1823     0410  0622               	xorwf	??_getADCValue,w
  1824     0411  3983               	andlw	-125
  1825     0412  0622               	xorwf	??_getADCValue,w
  1826     0413  0021               	movlb	1	; select bank1
  1827     0414  009D               	movwf	29	;volatile
  1828     0415                     l1231:
  1829                           
  1830                           ;main.c: 80:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1831     0415  3034               	movlw	52
  1832     0416  0020               	movlb	0	; select bank0
  1833     0417  00A2               	movwf	??_getADCValue
  1834     0418  30F1               	movlw	241
  1835     0419                     u1077:
  1836     0419  0B89               	decfsz	9,f
  1837     041A  2C19               	goto	u1077
  1838     041B  0BA2               	decfsz	??_getADCValue,f
  1839     041C  2C19               	goto	u1077
  1840     041D  3200               	nop2
  1841     041E                     l1233:
  1842                           
  1843                           ;main.c: 81:     ADCON0bits.GO = 1;
  1844     041E  0021               	movlb	1	; select bank1
  1845     041F  149D               	bsf	29,1	;volatile
  1846     0420                     l73:	
  1847                           ;main.c: 82:     while (ADCON0bits.GO);
  1848                           
  1849     0420  189D               	btfsc	29,1	;volatile
  1850     0421  2C23               	goto	u831
  1851     0422  2C24               	goto	u830
  1852     0423                     u831:
  1853     0423  2C20               	goto	l73
  1854     0424                     u830:
  1855     0424                     l1235:
  1856                           
  1857                           ;main.c: 83:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1858     0424  081B               	movf	27,w	;volatile
  1859     0425  0020               	movlb	0	; select bank0
  1860     0426  00A2               	movwf	??_getADCValue
  1861     0427  3006               	movlw	6
  1862     0428                     u845:
  1863     0428  36A2               	lsrf	??_getADCValue,f
  1864     0429  0B89               	decfsz	9,f
  1865     042A  2C28               	goto	u845
  1866     042B  0822               	movf	??_getADCValue,w
  1867     042C  00A3               	movwf	??_getADCValue+1
  1868     042D  01A4               	clrf	??_getADCValue+2
  1869     042E  0021               	movlb	1	; select bank1
  1870     042F  081C               	movf	28,w	;volatile
  1871     0430  0020               	movlb	0	; select bank0
  1872     0431  00A5               	movwf	??_getADCValue+3
  1873     0432  01A6               	clrf	??_getADCValue+4
  1874     0433  35A5               	lslf	??_getADCValue+3,f
  1875     0434  0DA6               	rlf	??_getADCValue+4,f
  1876     0435  35A5               	lslf	??_getADCValue+3,f
  1877     0436  0DA6               	rlf	??_getADCValue+4,f
  1878     0437  0823               	movf	??_getADCValue+1,w
  1879     0438  0425               	iorwf	??_getADCValue+3,w
  1880     0439  00A7               	movwf	??_getADCValue+5
  1881     043A  0824               	movf	??_getADCValue+2,w
  1882     043B  0426               	iorwf	??_getADCValue+4,w
  1883     043C  00A8               	movwf	??_getADCValue+6
  1884     043D  0827               	movf	??_getADCValue+5,w
  1885     043E  00A0               	movwf	?_getADCValue
  1886     043F  0828               	movf	??_getADCValue+6,w
  1887     0440  00A1               	movwf	?_getADCValue+1
  1888     0441                     l76:
  1889     0441  0008               	return
  1890     0442                     __end_of_getADCValue:
  1891                           
  1892                           	psect	text6
  1893     04A5                     __ptext6:	
  1894 ;; *************** function ___wmul *****************
  1895 ;; Defined at:
  1896 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul16.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1899 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  product         2    4[BANK0 ] unsigned int 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2    0[BANK0 ] unsigned int 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1911 ;;      Params:         0       4       0       0
  1912 ;;      Locals:         0       2       0       0
  1913 ;;      Temps:          0       0       0       0
  1914 ;;      Totals:         0       6       0       0
  1915 ;;Total ram usage:        6 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_ADsensing
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     04A5                     ___wmul:	
  1926                           ;psect for function ___wmul
  1927                           
  1928     04A5                     l1239:	
  1929                           ;incstack = 0
  1930                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1931                           
  1932     04A5  0020               	movlb	0	; select bank0
  1933     04A6  01A4               	clrf	___wmul@product
  1934     04A7  01A5               	clrf	___wmul@product+1
  1935     04A8                     l1241:
  1936     04A8  1C20               	btfss	___wmul@multiplier,0
  1937     04A9  2CAB               	goto	u851
  1938     04AA  2CAC               	goto	u850
  1939     04AB                     u851:
  1940     04AB  2CB0               	goto	l303
  1941     04AC                     u850:
  1942     04AC                     l1243:
  1943     04AC  0822               	movf	___wmul@multiplicand,w
  1944     04AD  07A4               	addwf	___wmul@product,f
  1945     04AE  0823               	movf	___wmul@multiplicand+1,w
  1946     04AF  3DA5               	addwfc	___wmul@product+1,f
  1947     04B0                     l303:
  1948     04B0  3001               	movlw	1
  1949     04B1                     u865:
  1950     04B1  35A2               	lslf	___wmul@multiplicand,f
  1951     04B2  0DA3               	rlf	___wmul@multiplicand+1,f
  1952     04B3  0B89               	decfsz	9,f
  1953     04B4  2CB1               	goto	u865
  1954     04B5                     l1245:
  1955     04B5  3001               	movlw	1
  1956     04B6                     u875:
  1957     04B6  36A1               	lsrf	___wmul@multiplier+1,f
  1958     04B7  0CA0               	rrf	___wmul@multiplier,f
  1959     04B8  0B89               	decfsz	9,f
  1960     04B9  2CB6               	goto	u875
  1961     04BA                     l1247:
  1962     04BA  0820               	movf	___wmul@multiplier,w
  1963     04BB  0421               	iorwf	___wmul@multiplier+1,w
  1964     04BC  1D03               	btfss	3,2
  1965     04BD  2CBF               	goto	u881
  1966     04BE  2CC0               	goto	u880
  1967     04BF                     u881:
  1968     04BF  2CA8               	goto	l1241
  1969     04C0                     u880:
  1970     04C0                     l1249:
  1971     04C0  0825               	movf	___wmul@product+1,w
  1972     04C1  00A1               	movwf	?___wmul+1
  1973     04C2  0824               	movf	___wmul@product,w
  1974     04C3  00A0               	movwf	?___wmul
  1975     04C4                     l305:
  1976     04C4  0008               	return
  1977     04C5                     __end_of___wmul:
  1978                           
  1979                           	psect	text7
  1980     0442                     __ptext7:	
  1981 ;; *************** function ___lmul *****************
  1982 ;; Defined at:
  1983 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1986 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  product         4    8[BANK0 ] unsigned long 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  4    0[BANK0 ] unsigned long 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1998 ;;      Params:         0       8       0       0
  1999 ;;      Locals:         0       4       0       0
  2000 ;;      Temps:          0       0       0       0
  2001 ;;      Totals:         0      12       0       0
  2002 ;;Total ram usage:       12 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_ADsensing
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012     0442                     ___lmul:	
  2013                           ;psect for function ___lmul
  2014                           
  2015     0442                     l1253:	
  2016                           ;incstack = 0
  2017                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2018                           
  2019     0442  3000               	movlw	0
  2020     0443  0020               	movlb	0	; select bank0
  2021     0444  00AB               	movwf	___lmul@product+3
  2022     0445  3000               	movlw	0
  2023     0446  00AA               	movwf	___lmul@product+2
  2024     0447  3000               	movlw	0
  2025     0448  00A9               	movwf	___lmul@product+1
  2026     0449  3000               	movlw	0
  2027     044A  00A8               	movwf	___lmul@product
  2028     044B                     l1255:
  2029     044B  1C20               	btfss	___lmul@multiplier,0
  2030     044C  2C4E               	goto	u891
  2031     044D  2C4F               	goto	u890
  2032     044E                     u891:
  2033     044E  2C57               	goto	l1259
  2034     044F                     u890:
  2035     044F                     l1257:
  2036     044F  0824               	movf	___lmul@multiplicand,w
  2037     0450  07A8               	addwf	___lmul@product,f
  2038     0451  0825               	movf	___lmul@multiplicand+1,w
  2039     0452  3DA9               	addwfc	___lmul@product+1,f
  2040     0453  0826               	movf	___lmul@multiplicand+2,w
  2041     0454  3DAA               	addwfc	___lmul@product+2,f
  2042     0455  0827               	movf	___lmul@multiplicand+3,w
  2043     0456  3DAB               	addwfc	___lmul@product+3,f
  2044     0457                     l1259:
  2045     0457  3001               	movlw	1
  2046     0458                     u905:
  2047     0458  35A4               	lslf	___lmul@multiplicand,f
  2048     0459  0DA5               	rlf	___lmul@multiplicand+1,f
  2049     045A  0DA6               	rlf	___lmul@multiplicand+2,f
  2050     045B  0DA7               	rlf	___lmul@multiplicand+3,f
  2051     045C  0B89               	decfsz	9,f
  2052     045D  2C58               	goto	u905
  2053     045E                     l1261:
  2054     045E  3001               	movlw	1
  2055     045F                     u915:
  2056     045F  36A3               	lsrf	___lmul@multiplier+3,f
  2057     0460  0CA2               	rrf	___lmul@multiplier+2,f
  2058     0461  0CA1               	rrf	___lmul@multiplier+1,f
  2059     0462  0CA0               	rrf	___lmul@multiplier,f
  2060     0463  0B89               	decfsz	9,f
  2061     0464  2C5F               	goto	u915
  2062     0465  0823               	movf	___lmul@multiplier+3,w
  2063     0466  0422               	iorwf	___lmul@multiplier+2,w
  2064     0467  0421               	iorwf	___lmul@multiplier+1,w
  2065     0468  0420               	iorwf	___lmul@multiplier,w
  2066     0469  1D03               	skipz
  2067     046A  2C6C               	goto	u921
  2068     046B  2C6D               	goto	u920
  2069     046C                     u921:
  2070     046C  2C4B               	goto	l1255
  2071     046D                     u920:
  2072     046D                     l1263:
  2073     046D  082B               	movf	___lmul@product+3,w
  2074     046E  00A3               	movwf	?___lmul+3
  2075     046F  082A               	movf	___lmul@product+2,w
  2076     0470  00A2               	movwf	?___lmul+2
  2077     0471  0829               	movf	___lmul@product+1,w
  2078     0472  00A1               	movwf	?___lmul+1
  2079     0473  0828               	movf	___lmul@product,w
  2080     0474  00A0               	movwf	?___lmul
  2081     0475                     l317:
  2082     0475  0008               	return
  2083     0476                     __end_of___lmul:
  2084                           
  2085                           	psect	text8
  2086     0361                     __ptext8:	
  2087 ;; *************** function ___lldiv *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  divisor         4   12[BANK0 ] unsigned long 
  2092 ;;  dividend        4   16[BANK0 ] unsigned long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        4   21[BANK0 ] unsigned long 
  2095 ;;  counter         1   25[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  4   12[BANK0 ] unsigned long 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2105 ;;      Params:         0       8       0       0
  2106 ;;      Locals:         0       5       0       0
  2107 ;;      Temps:          0       1       0       0
  2108 ;;      Totals:         0      14       0       0
  2109 ;;Total ram usage:       14 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_ADsensing
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119     0361                     ___lldiv:	
  2120                           ;psect for function ___lldiv
  2121                           
  2122     0361                     l1267:	
  2123                           ;incstack = 0
  2124                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2125                           
  2126     0361  3000               	movlw	0
  2127     0362  0020               	movlb	0	; select bank0
  2128     0363  00B8               	movwf	___lldiv@quotient+3
  2129     0364  3000               	movlw	0
  2130     0365  00B7               	movwf	___lldiv@quotient+2
  2131     0366  3000               	movlw	0
  2132     0367  00B6               	movwf	___lldiv@quotient+1
  2133     0368  3000               	movlw	0
  2134     0369  00B5               	movwf	___lldiv@quotient
  2135     036A  082F               	movf	___lldiv@divisor+3,w
  2136     036B  042E               	iorwf	___lldiv@divisor+2,w
  2137     036C  042D               	iorwf	___lldiv@divisor+1,w
  2138     036D  042C               	iorwf	___lldiv@divisor,w
  2139     036E  1903               	skipnz
  2140     036F  2B71               	goto	u931
  2141     0370  2B72               	goto	u930
  2142     0371                     u931:
  2143     0371  2BB3               	goto	l1287
  2144     0372                     u930:
  2145     0372                     l1269:
  2146     0372  01B9               	clrf	___lldiv@counter
  2147     0373  0AB9               	incf	___lldiv@counter,f
  2148     0374  2B80               	goto	l1273
  2149     0375                     l1271:
  2150     0375  3001               	movlw	1
  2151     0376                     u945:
  2152     0376  35AC               	lslf	___lldiv@divisor,f
  2153     0377  0DAD               	rlf	___lldiv@divisor+1,f
  2154     0378  0DAE               	rlf	___lldiv@divisor+2,f
  2155     0379  0DAF               	rlf	___lldiv@divisor+3,f
  2156     037A  0B89               	decfsz	9,f
  2157     037B  2B76               	goto	u945
  2158     037C  3001               	movlw	1
  2159     037D  00B4               	movwf	??___lldiv
  2160     037E  0834               	movf	??___lldiv,w
  2161     037F  07B9               	addwf	___lldiv@counter,f
  2162     0380                     l1273:
  2163     0380  1FAF               	btfss	___lldiv@divisor+3,7
  2164     0381  2B83               	goto	u951
  2165     0382  2B84               	goto	u950
  2166     0383                     u951:
  2167     0383  2B75               	goto	l1271
  2168     0384                     u950:
  2169     0384                     l1275:
  2170     0384  3001               	movlw	1
  2171     0385                     u965:
  2172     0385  35B5               	lslf	___lldiv@quotient,f
  2173     0386  0DB6               	rlf	___lldiv@quotient+1,f
  2174     0387  0DB7               	rlf	___lldiv@quotient+2,f
  2175     0388  0DB8               	rlf	___lldiv@quotient+3,f
  2176     0389  0B89               	decfsz	9,f
  2177     038A  2B85               	goto	u965
  2178     038B                     l1277:
  2179     038B  082F               	movf	___lldiv@divisor+3,w
  2180     038C  0233               	subwf	___lldiv@dividend+3,w
  2181     038D  1D03               	skipz
  2182     038E  2B99               	goto	u975
  2183     038F  082E               	movf	___lldiv@divisor+2,w
  2184     0390  0232               	subwf	___lldiv@dividend+2,w
  2185     0391  1D03               	skipz
  2186     0392  2B99               	goto	u975
  2187     0393  082D               	movf	___lldiv@divisor+1,w
  2188     0394  0231               	subwf	___lldiv@dividend+1,w
  2189     0395  1D03               	skipz
  2190     0396  2B99               	goto	u975
  2191     0397  082C               	movf	___lldiv@divisor,w
  2192     0398  0230               	subwf	___lldiv@dividend,w
  2193     0399                     u975:
  2194     0399  1C03               	skipc
  2195     039A  2B9C               	goto	u971
  2196     039B  2B9D               	goto	u970
  2197     039C                     u971:
  2198     039C  2BA6               	goto	l1283
  2199     039D                     u970:
  2200     039D                     l1279:
  2201     039D  082C               	movf	___lldiv@divisor,w
  2202     039E  02B0               	subwf	___lldiv@dividend,f
  2203     039F  082D               	movf	___lldiv@divisor+1,w
  2204     03A0  3BB1               	subwfb	___lldiv@dividend+1,f
  2205     03A1  082E               	movf	___lldiv@divisor+2,w
  2206     03A2  3BB2               	subwfb	___lldiv@dividend+2,f
  2207     03A3  082F               	movf	___lldiv@divisor+3,w
  2208     03A4  3BB3               	subwfb	___lldiv@dividend+3,f
  2209     03A5                     l1281:
  2210     03A5  1435               	bsf	___lldiv@quotient,0
  2211     03A6                     l1283:
  2212     03A6  3001               	movlw	1
  2213     03A7                     u985:
  2214     03A7  36AF               	lsrf	___lldiv@divisor+3,f
  2215     03A8  0CAE               	rrf	___lldiv@divisor+2,f
  2216     03A9  0CAD               	rrf	___lldiv@divisor+1,f
  2217     03AA  0CAC               	rrf	___lldiv@divisor,f
  2218     03AB  0B89               	decfsz	9,f
  2219     03AC  2BA7               	goto	u985
  2220     03AD                     l1285:
  2221     03AD  3001               	movlw	1
  2222     03AE  02B9               	subwf	___lldiv@counter,f
  2223     03AF  1D03               	btfss	3,2
  2224     03B0  2BB2               	goto	u991
  2225     03B1  2BB3               	goto	u990
  2226     03B2                     u991:
  2227     03B2  2B84               	goto	l1275
  2228     03B3                     u990:
  2229     03B3                     l1287:
  2230     03B3  0838               	movf	___lldiv@quotient+3,w
  2231     03B4  00AF               	movwf	?___lldiv+3
  2232     03B5  0837               	movf	___lldiv@quotient+2,w
  2233     03B6  00AE               	movwf	?___lldiv+2
  2234     03B7  0836               	movf	___lldiv@quotient+1,w
  2235     03B8  00AD               	movwf	?___lldiv+1
  2236     03B9  0835               	movf	___lldiv@quotient,w
  2237     03BA  00AC               	movwf	?___lldiv
  2238     03BB                     l339:
  2239     03BB  0008               	return
  2240     03BC                     __end_of___lldiv:
  2241                           
  2242                           	psect	intentry
  2243     0004                     __pintentry:	
  2244 ;; *************** function _ISR *****************
  2245 ;; Defined at:
  2246 ;;		line 137 in file "main.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2260 ;;      Params:         0       0       0       0
  2261 ;;      Locals:         0       0       0       0
  2262 ;;      Temps:          6       0       0       0
  2263 ;;      Totals:         6       0       0       0
  2264 ;;Total ram usage:        6 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		Interrupt level 1
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     0004                     _ISR:
  2274                           
  2275                           ;incstack = 0
  2276     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2277                           
  2278                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  2279     0005  3180               	pagesel	$
  2280     0006                     i1l1159:
  2281                           
  2282                           ;main.c: 139:  if(PIR1bits.TMR2IF == 1)
  2283     0006  0020               	movlb	0	; select bank0
  2284     0007  1C91               	btfss	17,1	;volatile
  2285     0008  280A               	goto	u68_21
  2286     0009  280B               	goto	u68_20
  2287     000A                     u68_21:
  2288     000A  2845               	goto	i1l1189
  2289     000B                     u68_20:
  2290     000B                     i1l1161:
  2291                           
  2292                           ;main.c: 140:  {;main.c: 141:   PIE1bits.TMR2IE = 0;
  2293     000B  0021               	movlb	1	; select bank1
  2294     000C  1091               	bcf	17,1	;volatile
  2295                           
  2296                           ;main.c: 142:   T2CONbits.TMR2ON = 0;
  2297     000D  0020               	movlb	0	; select bank0
  2298     000E  111C               	bcf	28,2	;volatile
  2299                           
  2300                           ;main.c: 143:   PIR1bits.TMR2IF = 0;
  2301     000F  1091               	bcf	17,1	;volatile
  2302     0010                     i1l1163:
  2303                           
  2304                           ;main.c: 144:   if(y == 0)
  2305     0010  0850               	movf	_y,w
  2306     0011  0451               	iorwf	_y+1,w
  2307     0012  1D03               	btfss	3,2
  2308     0013  2815               	goto	u69_21
  2309     0014  2816               	goto	u69_20
  2310     0015                     u69_21:
  2311     0015  2838               	goto	i1l1181
  2312     0016                     u69_20:
  2313     0016                     i1l1165:
  2314                           
  2315                           ;main.c: 145:   {;main.c: 146:    if(CCPR1L >= PR2)
  2316     0016  081B               	movf	27,w	;volatile
  2317     0017  0025               	movlb	5	; select bank5
  2318     0018  0211               	subwf	17,w	;volatile
  2319     0019  1C03               	skipc
  2320     001A  281C               	goto	u70_21
  2321     001B  281D               	goto	u70_20
  2322     001C                     u70_21:
  2323     001C  281F               	goto	i1l1169
  2324     001D                     u70_20:
  2325     001D                     i1l1167:
  2326                           
  2327                           ;main.c: 147:    {;main.c: 148:     p = 0;
  2328     001D  01F4               	clrf	_p
  2329                           
  2330                           ;main.c: 149:    }
  2331     001E  2826               	goto	i1l1173
  2332     001F                     i1l1169:
  2333     001F  0811               	movf	17,w	;volatile
  2334     0020  1D03               	btfss	3,2
  2335     0021  2823               	goto	u71_21
  2336     0022  2824               	goto	u71_20
  2337     0023                     u71_21:
  2338     0023  2826               	goto	i1l1173
  2339     0024                     u71_20:
  2340     0024                     i1l1171:
  2341                           
  2342                           ;main.c: 151:    {;main.c: 152:     p = 1;
  2343     0024  01F4               	clrf	_p
  2344     0025  0AF4               	incf	_p,f
  2345     0026                     i1l1173:
  2346                           
  2347                           ;main.c: 154:    if(p == 1)
  2348     0026  0374               	decf	_p,w
  2349     0027  1D03               	btfss	3,2
  2350     0028  282A               	goto	u72_21
  2351     0029  282B               	goto	u72_20
  2352     002A                     u72_21:
  2353     002A  2830               	goto	i1l1177
  2354     002B                     u72_20:
  2355     002B                     i1l1175:
  2356                           
  2357                           ;main.c: 155:    {;main.c: 156:     CCPR1L++;
  2358     002B  3001               	movlw	1
  2359     002C  00F6               	movwf	??_ISR
  2360     002D  0876               	movf	??_ISR,w
  2361     002E  0791               	addwf	17,f	;volatile
  2362                           
  2363                           ;main.c: 157:    }
  2364     002F  2841               	goto	i1l1185
  2365     0030                     i1l1177:
  2366     0030  0874               	movf	_p,w
  2367     0031  1D03               	btfss	3,2
  2368     0032  2834               	goto	u73_21
  2369     0033  2835               	goto	u73_20
  2370     0034                     u73_21:
  2371     0034  2841               	goto	i1l1185
  2372     0035                     u73_20:
  2373     0035                     i1l1179:
  2374                           
  2375                           ;main.c: 159:    {;main.c: 160:     CCPR1L--;
  2376     0035  3001               	movlw	1
  2377     0036  0291               	subwf	17,f	;volatile
  2378     0037  2841               	goto	i1l1185
  2379     0038                     i1l1181:
  2380     0038  0350               	decf	_y,w
  2381     0039  0451               	iorwf	_y+1,w
  2382     003A  1D03               	btfss	3,2
  2383     003B  283D               	goto	u74_21
  2384     003C  283E               	goto	u74_20
  2385     003D                     u74_21:
  2386     003D  2841               	goto	i1l1185
  2387     003E                     u74_20:
  2388     003E                     i1l1183:
  2389                           
  2390                           ;main.c: 164:   {;main.c: 165:    CCPR1L = 0x3F;
  2391     003E  303F               	movlw	63
  2392     003F  0025               	movlb	5	; select bank5
  2393     0040  0091               	movwf	17	;volatile
  2394     0041                     i1l1185:
  2395                           
  2396                           ;main.c: 167:   PIE1bits.TMR2IE = 1;
  2397     0041  0021               	movlb	1	; select bank1
  2398     0042  1491               	bsf	17,1	;volatile
  2399     0043                     i1l1187:
  2400                           
  2401                           ;main.c: 168:   T2CONbits.TMR2ON = 1;
  2402     0043  0020               	movlb	0	; select bank0
  2403     0044  151C               	bsf	28,2	;volatile
  2404     0045                     i1l1189:
  2405                           
  2406                           ;main.c: 171:  if(PIR1bits.ADIF == 1)
  2407     0045  1F11               	btfss	17,6	;volatile
  2408     0046  2848               	goto	u75_21
  2409     0047  2849               	goto	u75_20
  2410     0048                     u75_21:
  2411     0048  28E2               	goto	i1l121
  2412     0049                     u75_20:
  2413     0049                     i1l1191:
  2414                           
  2415                           ;main.c: 172:  {;main.c: 173:   PIE1bits.ADIE = 0;
  2416     0049  0021               	movlb	1	; select bank1
  2417     004A  1311               	bcf	17,6	;volatile
  2418                           
  2419                           ;main.c: 174:   PIR1bits.ADIF = 0;
  2420     004B  0020               	movlb	0	; select bank0
  2421     004C  1311               	bcf	17,6	;volatile
  2422     004D                     i1l1193:
  2423                           
  2424                           ;main.c: 175:   for(i = 0; i < 100; i++)
  2425     004D  01F5               	clrf	_i
  2426     004E                     i1l1195:
  2427     004E  3064               	movlw	100
  2428     004F  0275               	subwf	_i,w
  2429     0050  1C03               	skipc
  2430     0051  2853               	goto	u76_21
  2431     0052  2854               	goto	u76_20
  2432     0053                     u76_21:
  2433     0053  2855               	goto	i1l1199
  2434     0054                     u76_20:
  2435     0054  28AD               	goto	i1l1213
  2436     0055                     i1l1199:
  2437                           
  2438                           ;main.c: 176:   {;main.c: 177:    if(Rt >= TABLE[i])
  2439     0055  0875               	movf	_i,w
  2440     0056  00F6               	movwf	??_ISR
  2441     0057  01F7               	clrf	??_ISR+1
  2442     0058  35F6               	lslf	??_ISR,f
  2443     0059  0DF7               	rlf	??_ISR+1,f
  2444     005A  35F6               	lslf	??_ISR,f
  2445     005B  0DF7               	rlf	??_ISR+1,f
  2446     005C  30F8               	movlw	low _TABLE
  2447     005D  0776               	addwf	??_ISR,w
  2448     005E  0084               	movwf	4
  2449     005F  3000               	movlw	high _TABLE
  2450     0060  3D77               	addwfc	??_ISR+1,w
  2451     0061  3880               	iorlw	128
  2452     0062  0085               	movwf	5
  2453     0063  3F00               	moviw [0]fsr0
  2454     0064  00F8               	movwf	??_ISR+2
  2455     0065  3F01               	moviw [1]fsr0
  2456     0066  00F9               	movwf	??_ISR+3
  2457     0067  3F02               	moviw [2]fsr0
  2458     0068  00FA               	movwf	??_ISR+4
  2459     0069  3F03               	moviw [3]fsr0
  2460     006A  00FB               	movwf	??_ISR+5
  2461     006B  087B               	movf	??_ISR+5,w
  2462     006C  0247               	subwf	_Rt+3,w
  2463     006D  1D03               	skipz
  2464     006E  2879               	goto	u77_25
  2465     006F  087A               	movf	??_ISR+4,w
  2466     0070  0246               	subwf	_Rt+2,w
  2467     0071  1D03               	skipz
  2468     0072  2879               	goto	u77_25
  2469     0073  0879               	movf	??_ISR+3,w
  2470     0074  0245               	subwf	_Rt+1,w
  2471     0075  1D03               	skipz
  2472     0076  2879               	goto	u77_25
  2473     0077  0878               	movf	??_ISR+2,w
  2474     0078  0244               	subwf	_Rt,w
  2475     0079                     u77_25:
  2476     0079  1C03               	skipc
  2477     007A  287C               	goto	u77_21
  2478     007B  287D               	goto	u77_20
  2479     007C                     u77_21:
  2480     007C  2885               	goto	i1l1205
  2481     007D                     u77_20:
  2482     007D                     i1l1201:
  2483                           
  2484                           ;main.c: 178:    {;main.c: 179:     v = i;
  2485     007D  0875               	movf	_i,w
  2486     007E  00F6               	movwf	??_ISR
  2487     007F  01F7               	clrf	??_ISR+1
  2488     0080  0876               	movf	??_ISR,w
  2489     0081  00D2               	movwf	_v
  2490     0082  0877               	movf	??_ISR+1,w
  2491     0083  00D3               	movwf	_v+1
  2492                           
  2493                           ;main.c: 180:     break;
  2494     0084  28AD               	goto	i1l1213
  2495     0085                     i1l1205:
  2496     0085  3084               	movlw	low ((_TABLE+396)| (0+32768))
  2497     0086  0084               	movwf	4
  2498     0087  3082               	movlw	high ((_TABLE+396)| (0+32768))
  2499     0088  0085               	movwf	5
  2500     0089  3F00               	moviw [0]fsr0
  2501     008A  00F6               	movwf	??_ISR
  2502     008B  3F01               	moviw [1]fsr0
  2503     008C  00F7               	movwf	??_ISR+1
  2504     008D  3F02               	moviw [2]fsr0
  2505     008E  00F8               	movwf	??_ISR+2
  2506     008F  3F03               	moviw [3]fsr0
  2507     0090  00F9               	movwf	??_ISR+3
  2508     0091  0879               	movf	??_ISR+3,w
  2509     0092  0247               	subwf	_Rt+3,w
  2510     0093  1D03               	skipz
  2511     0094  289F               	goto	u78_25
  2512     0095  0878               	movf	??_ISR+2,w
  2513     0096  0246               	subwf	_Rt+2,w
  2514     0097  1D03               	skipz
  2515     0098  289F               	goto	u78_25
  2516     0099  0877               	movf	??_ISR+1,w
  2517     009A  0245               	subwf	_Rt+1,w
  2518     009B  1D03               	skipz
  2519     009C  289F               	goto	u78_25
  2520     009D  0876               	movf	??_ISR,w
  2521     009E  0244               	subwf	_Rt,w
  2522     009F                     u78_25:
  2523     009F  1803               	skipnc
  2524     00A0  28A2               	goto	u78_21
  2525     00A1  28A3               	goto	u78_20
  2526     00A2                     u78_21:
  2527     00A2  28A8               	goto	i1l1209
  2528     00A3                     u78_20:
  2529     00A3                     i1l1207:
  2530                           
  2531                           ;main.c: 183:    {;main.c: 184:     v = 200;
  2532     00A3  30C8               	movlw	200
  2533     00A4  00D2               	movwf	_v
  2534     00A5  3000               	movlw	0
  2535     00A6  00D3               	movwf	_v+1
  2536                           
  2537                           ;main.c: 185:     break;
  2538     00A7  28AD               	goto	i1l1213
  2539     00A8                     i1l1209:
  2540                           
  2541                           ;main.c: 187:   }
  2542     00A8  3001               	movlw	1
  2543     00A9  00F6               	movwf	??_ISR
  2544     00AA  0876               	movf	??_ISR,w
  2545     00AB  07F5               	addwf	_i,f
  2546     00AC  284E               	goto	i1l1195
  2547     00AD                     i1l1213:
  2548                           
  2549                           ;main.c: 188:   if (timerActive)
  2550     00AD  0872               	movf	_timerActive,w
  2551     00AE  1903               	btfsc	3,2
  2552     00AF  28B1               	goto	u79_21
  2553     00B0  28B2               	goto	u79_20
  2554     00B1                     u79_21:
  2555     00B1  28E0               	goto	i1l116
  2556     00B2                     u79_20:
  2557     00B2                     i1l1215:
  2558                           
  2559                           ;main.c: 189:   {;main.c: 190:    timerCounter++;
  2560     00B2  3001               	movlw	1
  2561     00B3  07CC               	addwf	_timerCounter,f
  2562     00B4  3000               	movlw	0
  2563     00B5  3DCD               	addwfc	_timerCounter+1,f
  2564                           
  2565                           ;main.c: 191:    if(timerCounter >= 5)
  2566     00B6  3000               	movlw	0
  2567     00B7  024D               	subwf	_timerCounter+1,w
  2568     00B8  3005               	movlw	5
  2569     00B9  1903               	skipnz
  2570     00BA  024C               	subwf	_timerCounter,w
  2571     00BB  1C03               	skipc
  2572     00BC  28BE               	goto	u80_21
  2573     00BD  28BF               	goto	u80_20
  2574     00BE                     u80_21:
  2575     00BE  28E0               	goto	i1l116
  2576     00BF                     u80_20:
  2577     00BF                     i1l1217:
  2578                           
  2579                           ;main.c: 192:    {;main.c: 193:     PORTAbits.RA4 = 0;
  2580     00BF  120C               	bcf	12,4	;volatile
  2581                           
  2582                           ;main.c: 194:     T2CONbits.TMR2ON = 0;
  2583     00C0  111C               	bcf	28,2	;volatile
  2584     00C1                     i1l1219:
  2585                           
  2586                           ;main.c: 195:     CCP1CON = 0;
  2587     00C1  0025               	movlb	5	; select bank5
  2588     00C2  0193               	clrf	19	;volatile
  2589     00C3                     i1l1221:
  2590                           
  2591                           ;main.c: 196:     ADCON0bits.ADON = 0;
  2592     00C3  0021               	movlb	1	; select bank1
  2593     00C4  101D               	bcf	29,0	;volatile
  2594     00C5                     i1l1223:
  2595                           
  2596                           ;main.c: 197:     PORTAbits.RA5 = 0;
  2597     00C5  0020               	movlb	0	; select bank0
  2598     00C6  128C               	bcf	12,5	;volatile
  2599     00C7                     i1l1225:
  2600                           
  2601                           ;main.c: 199:     {;main.c: 200:      PORTAbits.RA5 = !PORTAbits.RA5;
  2602     00C7  1003               	clrc
  2603     00C8  0020               	movlb	0	; select bank0
  2604     00C9  1E8C               	btfss	12,5	;volatile
  2605     00CA  1403               	setc
  2606     00CB  1803               	btfsc	3,0
  2607     00CC  28CE               	goto	u81_21
  2608     00CD  28D1               	goto	u81_20
  2609     00CE                     u81_21:
  2610     00CE  0020               	movlb	0	; select bank0
  2611     00CF  168C               	bsf	12,5	;volatile
  2612     00D0  28D3               	goto	u82_24
  2613     00D1                     u81_20:
  2614     00D1  0020               	movlb	0	; select bank0
  2615     00D2  128C               	bcf	12,5	;volatile
  2616     00D3                     u82_24:
  2617     00D3                     i1l1227:
  2618                           
  2619                           ;main.c: 201:      _delay((unsigned long)((100)*(32000000/4000.0)));
  2620     00D3  3005               	movlw	5
  2621     00D4  00F7               	movwf	??_ISR+1
  2622     00D5  300F               	movlw	15
  2623     00D6  00F6               	movwf	??_ISR
  2624     00D7  30F1               	movlw	241
  2625     00D8                     u108_27:
  2626     00D8  0B89               	decfsz	9,f
  2627     00D9  28D8               	goto	u108_27
  2628     00DA  0BF6               	decfsz	??_ISR,f
  2629     00DB  28D8               	goto	u108_27
  2630     00DC  0BF7               	decfsz	??_ISR+1,f
  2631     00DD  28D8               	goto	u108_27
  2632     00DE  0000               	nop
  2633     00DF  28C7               	goto	i1l1225
  2634     00E0                     i1l116:	
  2635                           ;main.c: 204:   }
  2636                           
  2637                           
  2638                           ;main.c: 205:   PIE1bits.ADIE = 1;
  2639     00E0  0021               	movlb	1	; select bank1
  2640     00E1  1711               	bsf	17,6	;volatile
  2641     00E2                     i1l121:
  2642     00E2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2643     00E3  0009               	retfie
  2644     00E4                     __end_of_ISR:
  2645     007E                     btemp	set	126	;btemp
  2646     007E                     int$flags	set	126
  2647     007E                     wtemp0	set	126
  2648                           
  2649                           	psect	config
  2650                           
  2651                           ;Config register CONFIG1 @ 0x8007
  2652                           ;	Oscillator Selection
  2653                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2654                           ;	Watchdog Timer Enable
  2655                           ;	WDTE = OFF, WDT disabled
  2656                           ;	Power-up Timer Enable
  2657                           ;	PWRTE = OFF, PWRT disabled
  2658                           ;	MCLR Pin Function Select
  2659                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2660                           ;	Flash Program Memory Code Protection
  2661                           ;	CP = OFF, Program memory code protection is disabled
  2662                           ;	Data Memory Code Protection
  2663                           ;	CPD = OFF, Data memory code protection is disabled
  2664                           ;	Brown-out Reset Enable
  2665                           ;	BOREN = ON, Brown-out Reset enabled
  2666                           ;	Clock Out Enable
  2667                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2668                           ;	Internal/External Switchover
  2669                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2670                           ;	Fail-Safe Clock Monitor Enable
  2671                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2672     8007                     	org	32775
  2673     8007  2FE4               	dw	12260
  2674                           
  2675                           ;Config register CONFIG2 @ 0x8008
  2676                           ;	Flash Memory Self-Write Protection
  2677                           ;	WRT = OFF, Write protection off
  2678                           ;	PLL Enable
  2679                           ;	PLLEN = ON, 4x PLL enabled
  2680                           ;	Stack Overflow/Underflow Reset Enable
  2681                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2682                           ;	Brown-out Reset Voltage Selection
  2683                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2684                           ;	In-Circuit Debugger Mode
  2685                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  2686                           ;	Low-Voltage Programming Enable
  2687                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2688     8008                     	org	32776
  2689     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    400
    Data        0
    BSS         30
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     32      56
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADsensing
    _ADsensing->___lldiv
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1264
                                             30 BANK0      2     2      0
                          _ADsensing
                            _PWMinit
                     _Tempjudgements
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tempjudgements                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADsensing                                            4     4      0    1264
                                             26 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                             ___wmul
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      31
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADsensing
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _getADCValue
   _PWMinit
   _Tempjudgements
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      44      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 05 16:03:15 2023

                      _i 0075                        _p 0074                        _r 004E  
                      _t 0070                        _v 0052                        _y 0050  
                     l73 0420                       l91 03E3                       l76 0441  
                     l85 0360                       l95 0406                       _VR 0054  
                     _Rt 0044      ___wmul@multiplicand 0022                      l150 04D9  
                    l303 04B0                      l305 04C4                      l153 04EE  
                    l317 0475                      l339 03BB                      _PR2 001B  
                    _ISR 0004                      u640 03CB                      u641 03CA  
                    u650 03DA                      u651 03D9                      u660 03E3  
                    u661 03E2                      u645 03C7                      u830 0424  
                    u670 03FF                      u831 0423                      u671 03FE  
                    u920 046D                      u921 046C                      u905 0458  
                    u930 0372                      u850 04AC                      u931 0371  
                    u915 045F                      u851 04AB                      u675 03FB  
                    u845 0428                      u950 0384                      u951 0383  
                    u880 04C0                      u945 0376                      u881 04BF  
                    u865 04B1                      u970 039D                      u890 044F  
                    u971 039C                      u891 044E                      u875 04B6  
                    u965 0385                      u990 03B3                      u991 03B2  
                    u975 0399                      u985 03A7                      _ad1 0040  
                    _ad2 004A                      _ad3 0048                      _add 0073  
                    wreg 0009                     ?_ISR 0076                     l1131 03DA  
                   l1133 03E6                     l1125 03BC                     l1301 04CF  
                   l1231 0415                     l1311 04DA                     l1127 03CB  
                   l1135 03EA                     l1303 04D3                     l1241 04A8  
                   l1233 041E                     l1321 04E7                     l1313 04DE  
                   l1137 03FF                     l1129 03CD                     l1305 04D4  
                   l1243 04AC                     l1235 0424                     l1331 028D  
                   l1323 04E8                     l1315 04E1                     l1139 0401  
                   l1307 04D6                     l1261 045E                     l1253 0442  
                   l1245 04B5                     l1229 0409                     l1333 0298  
                   l1341 0320                     l1325 04EA                     l1317 04E4  
                   l1309 04D8                     l1271 0375                     l1263 046D  
                   l1255 044B                     l1247 04BA                     l1239 04A5  
                   l1351 0352                     l1343 0325                     l1335 02B0  
                   l1327 04EC                     l1319 04E6                     l1281 03A5  
                   l1273 0380                     l1257 044F                     l1249 04C0  
                   l1353 035B                     l1345 0347                     l1337 02DB  
                   l1329 0288                     l1361 047A                     l1283 03A6  
                   l1275 0384                     l1267 0361                     l1259 0457  
                   l1355 035F                     l1339 031B                     l1291 04C5  
                   l1371 0490                     l1363 047D                     l1285 03AD  
                   l1277 038B                     l1269 0372                     l1349 034C  
                   l1293 04C8                     l1373 0493                     l1365 0480  
                   l1279 039D                     l1287 03B3                     l1295 04CA  
                   l1375 0496                     l1367 048C                     l1359 0476  
                   l1297 04CC                     l1369 048E                     l1299 04CE  
                   u1000 028D                     u1001 028C                     u1010 02D1  
                   u1020 0325                     u1021 0324                     u1015 02CD  
                   u1040 0352                     u1041 0351                     u1035 033F  
                   u1057 0486                     u1067 049C                     u1077 0419  
                   _main 0476                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 00E4  
        __end_of_PWMinit 04EF                    ??_ISR 0076                    ?_main 0076  
        __end_of___lldiv 03BC                    i1l121 00E2                    i1l116 00E0  
                  _TABLE 00F8                    u70_20 001D                    u70_21 001C  
                  u71_20 0024                    u71_21 0023                    u80_20 00BF  
                  u72_20 002B                    u80_21 00BE                    u72_21 002A  
                  u81_20 00D1                    u73_20 0035                    u81_21 00CE  
                  u73_21 0034                    u74_20 003E                    u74_21 003D  
                  u82_24 00D3                    u75_20 0049                    u75_21 0048  
                  u76_20 0054                    u68_20 000B                    u76_21 0053  
                  u68_21 000A                    u77_20 007D                    u69_20 0016  
                  u77_21 007C                    u69_21 0015                    u77_25 0079  
                  u78_20 00A3                    u78_21 00A2                    u78_25 009F  
                  u79_20 00B2                    u79_21 00B1      ___lmul@multiplicand 0024  
                  _setup 04C5                    status 0003                    wtemp0 007E  
        __initialization 00E6             __end_of_main 04A5                   ??_main 003E  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _CCPR1L 0291                   ?_setup 0076        __end_of_ADsensing 0361  
                 i1l1201 007D                   i1l1221 00C3                   i1l1205 0085  
                 i1l1213 00AD                   i1l1223 00C5                   i1l1215 00B2  
                 i1l1207 00A3                   i1l1225 00C7                   i1l1217 00BF  
                 i1l1209 00A8                   i1l1161 000B                   i1l1227 00D3  
                 i1l1219 00C1                   i1l1171 0024                   i1l1163 0010  
                 i1l1173 0026                   i1l1165 0016                   i1l1181 0038  
                 i1l1191 0049                   i1l1183 003E                   i1l1175 002B  
                 i1l1167 001D                   i1l1159 0006                   i1l1193 004D  
                 i1l1185 0041                   i1l1177 0030                   i1l1169 001F  
                 i1l1195 004E                   i1l1187 0043                   i1l1179 0035  
                 i1l1189 0045                   i1l1199 0055                ??_PWMinit 0020  
                 u108_27 00D8                   _OSCCON 0099                   ___lmul 0442  
                 ___wmul 04A5                ??___lldiv 0034  __end_of__initialization 00F4  
     getADCValue@channel 0029            __end_of_TABLE 0288           __pcstackCOMMON 0076  
          __end_of_setup 04DA                  ??_setup 0020               __pbssBANK0 0040  
             __pmaintext 0476                  ?___lmul 0020                  ?___wmul 0020  
             __pintentry 0004                  _CCP1CON 0293           ___lmul@product 0028  
         _Tempjudgements 03BC                  _PWMinit 04DA            ??_getADCValue 0022  
                ___lldiv 0361   __end_of_Tempjudgements 0407                  __ptext1 04C5  
                __ptext2 03BC                  __ptext3 04DA                  __ptext4 0288  
                __ptext5 0407                  __ptext6 04A5                  __ptext7 0442  
                __ptext8 0361                _T2CONbits 001C                  clrloop0 04F0  
   end_of_initialization 00F4                _ADsensing 0288          ___lldiv@divisor 002C  
        ___lldiv@counter 0039          ?_Tempjudgements 0076      __end_of_getADCValue 0442  
              _PORTAbits 000C                _TRISAbits 008C              _CCP1CONbits 0293  
             ?_ADsensing 0076           __end_of___lmul 0476           __end_of___wmul 04C5  
    start_initialization 00E6              __end_of_ISR 00E4              _getADCValue 0407  
               ??___lmul 0028                 ??___wmul 0024              __pbssCOMMON 0070  
              ___latbits 0001            __pcstackBANK0 0020                 ?_PWMinit 0076  
            ??_ADsensing 003A                 ?___lldiv 002C           ___wmul@product 0024  
              clear_ram0 04EF                 _PIE1bits 0091         ??_Tempjudgements 0020  
               _PIR1bits 0011               _ADCON0bits 009D        ___wmul@multiplier 0020  
      ___lmul@multiplier 0020               _APFCONbits 011D               _ANSELAbits 018C  
           ?_getADCValue 0020                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000             _timerCounter 004C         ___lldiv@dividend 0030  
          __pstringtext1 00F8              _timerActive 0072         ___lldiv@quotient 0035  
