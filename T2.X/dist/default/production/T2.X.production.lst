

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 01 17:29:48 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12LF1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 07/09/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC12LF1840 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     008C                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0097                     	;# 
    88     0098                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     010C                     	;# 
    97     0111                     	;# 
    98     0112                     	;# 
    99     0115                     	;# 
   100     0116                     	;# 
   101     0117                     	;# 
   102     0118                     	;# 
   103     0119                     	;# 
   104     011A                     	;# 
   105     011B                     	;# 
   106     011D                     	;# 
   107     011D                     	;# 
   108     018C                     	;# 
   109     0191                     	;# 
   110     0191                     	;# 
   111     0192                     	;# 
   112     0193                     	;# 
   113     0193                     	;# 
   114     0193                     	;# 
   115     0194                     	;# 
   116     0195                     	;# 
   117     0196                     	;# 
   118     0199                     	;# 
   119     019A                     	;# 
   120     019B                     	;# 
   121     019B                     	;# 
   122     019B                     	;# 
   123     019B                     	;# 
   124     019C                     	;# 
   125     019C                     	;# 
   126     019D                     	;# 
   127     019E                     	;# 
   128     019F                     	;# 
   129     020C                     	;# 
   130     0211                     	;# 
   131     0211                     	;# 
   132     0212                     	;# 
   133     0212                     	;# 
   134     0213                     	;# 
   135     0213                     	;# 
   136     0214                     	;# 
   137     0214                     	;# 
   138     0215                     	;# 
   139     0215                     	;# 
   140     0215                     	;# 
   141     0216                     	;# 
   142     0216                     	;# 
   143     0217                     	;# 
   144     0217                     	;# 
   145     0291                     	;# 
   146     0291                     	;# 
   147     0292                     	;# 
   148     0293                     	;# 
   149     0294                     	;# 
   150     0295                     	;# 
   151     0295                     	;# 
   152     0296                     	;# 
   153     0391                     	;# 
   154     0392                     	;# 
   155     0393                     	;# 
   156     039A                     	;# 
   157     039C                     	;# 
   158     039D                     	;# 
   159     039E                     	;# 
   160     039F                     	;# 
   161     0FE4                     	;# 
   162     0FE5                     	;# 
   163     0FE6                     	;# 
   164     0FE7                     	;# 
   165     0FE8                     	;# 
   166     0FE9                     	;# 
   167     0FEA                     	;# 
   168     0FEB                     	;# 
   169     0FED                     	;# 
   170     0FEE                     	;# 
   171     0FEF                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0015                     	;# 
   188     0016                     	;# 
   189     0016                     	;# 
   190     0017                     	;# 
   191     0018                     	;# 
   192     0019                     	;# 
   193     001A                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001E                     	;# 
   197     001F                     	;# 
   198     008C                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     010C                     	;# 
   213     0111                     	;# 
   214     0112                     	;# 
   215     0115                     	;# 
   216     0116                     	;# 
   217     0117                     	;# 
   218     0118                     	;# 
   219     0119                     	;# 
   220     011A                     	;# 
   221     011B                     	;# 
   222     011D                     	;# 
   223     011D                     	;# 
   224     018C                     	;# 
   225     0191                     	;# 
   226     0191                     	;# 
   227     0192                     	;# 
   228     0193                     	;# 
   229     0193                     	;# 
   230     0193                     	;# 
   231     0194                     	;# 
   232     0195                     	;# 
   233     0196                     	;# 
   234     0199                     	;# 
   235     019A                     	;# 
   236     019B                     	;# 
   237     019B                     	;# 
   238     019B                     	;# 
   239     019B                     	;# 
   240     019C                     	;# 
   241     019C                     	;# 
   242     019D                     	;# 
   243     019E                     	;# 
   244     019F                     	;# 
   245     020C                     	;# 
   246     0211                     	;# 
   247     0211                     	;# 
   248     0212                     	;# 
   249     0212                     	;# 
   250     0213                     	;# 
   251     0213                     	;# 
   252     0214                     	;# 
   253     0214                     	;# 
   254     0215                     	;# 
   255     0215                     	;# 
   256     0215                     	;# 
   257     0216                     	;# 
   258     0216                     	;# 
   259     0217                     	;# 
   260     0217                     	;# 
   261     0291                     	;# 
   262     0291                     	;# 
   263     0292                     	;# 
   264     0293                     	;# 
   265     0294                     	;# 
   266     0295                     	;# 
   267     0295                     	;# 
   268     0296                     	;# 
   269     0391                     	;# 
   270     0392                     	;# 
   271     0393                     	;# 
   272     039A                     	;# 
   273     039C                     	;# 
   274     039D                     	;# 
   275     039E                     	;# 
   276     039F                     	;# 
   277     0FE4                     	;# 
   278     0FE5                     	;# 
   279     0FE6                     	;# 
   280     0FE7                     	;# 
   281     0FE8                     	;# 
   282     0FE9                     	;# 
   283     0FEA                     	;# 
   284     0FEB                     	;# 
   285     0FED                     	;# 
   286     0FEE                     	;# 
   287     0FEF                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     0008                     	;# 
   297     0009                     	;# 
   298     000A                     	;# 
   299     000B                     	;# 
   300     000C                     	;# 
   301     0011                     	;# 
   302     0012                     	;# 
   303     0015                     	;# 
   304     0016                     	;# 
   305     0016                     	;# 
   306     0017                     	;# 
   307     0018                     	;# 
   308     0019                     	;# 
   309     001A                     	;# 
   310     001B                     	;# 
   311     001C                     	;# 
   312     001E                     	;# 
   313     001F                     	;# 
   314     008C                     	;# 
   315     0091                     	;# 
   316     0092                     	;# 
   317     0095                     	;# 
   318     0096                     	;# 
   319     0097                     	;# 
   320     0098                     	;# 
   321     0099                     	;# 
   322     009A                     	;# 
   323     009B                     	;# 
   324     009B                     	;# 
   325     009C                     	;# 
   326     009D                     	;# 
   327     009E                     	;# 
   328     010C                     	;# 
   329     0111                     	;# 
   330     0112                     	;# 
   331     0115                     	;# 
   332     0116                     	;# 
   333     0117                     	;# 
   334     0118                     	;# 
   335     0119                     	;# 
   336     011A                     	;# 
   337     011B                     	;# 
   338     011D                     	;# 
   339     011D                     	;# 
   340     018C                     	;# 
   341     0191                     	;# 
   342     0191                     	;# 
   343     0192                     	;# 
   344     0193                     	;# 
   345     0193                     	;# 
   346     0193                     	;# 
   347     0194                     	;# 
   348     0195                     	;# 
   349     0196                     	;# 
   350     0199                     	;# 
   351     019A                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019C                     	;# 
   357     019C                     	;# 
   358     019D                     	;# 
   359     019E                     	;# 
   360     019F                     	;# 
   361     020C                     	;# 
   362     0211                     	;# 
   363     0211                     	;# 
   364     0212                     	;# 
   365     0212                     	;# 
   366     0213                     	;# 
   367     0213                     	;# 
   368     0214                     	;# 
   369     0214                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0215                     	;# 
   373     0216                     	;# 
   374     0216                     	;# 
   375     0217                     	;# 
   376     0217                     	;# 
   377     0291                     	;# 
   378     0291                     	;# 
   379     0292                     	;# 
   380     0293                     	;# 
   381     0294                     	;# 
   382     0295                     	;# 
   383     0295                     	;# 
   384     0296                     	;# 
   385     0391                     	;# 
   386     0392                     	;# 
   387     0393                     	;# 
   388     039A                     	;# 
   389     039C                     	;# 
   390     039D                     	;# 
   391     039E                     	;# 
   392     039F                     	;# 
   393     0FE4                     	;# 
   394     0FE5                     	;# 
   395     0FE6                     	;# 
   396     0FE7                     	;# 
   397     0FE8                     	;# 
   398     0FE9                     	;# 
   399     0FEA                     	;# 
   400     0FEB                     	;# 
   401     0FED                     	;# 
   402     0FEE                     	;# 
   403     0FEF                     	;# 
   404                           
   405                           	psect	stringtext1
   406     023F                     __pstringtext1:
   407     023F                     _TABLE:
   408     023F  34F0               	retlw	240
   409     0240  3425               	retlw	37
   410     0241  34CE               	retlw	206
   411     0242  3423               	retlw	35
   412     0243  34CE               	retlw	206
   413     0244  3421               	retlw	33
   414     0245  34EC               	retlw	236
   415     0246  341F               	retlw	31
   416     0247  342A               	retlw	42
   417     0248  341E               	retlw	30
   418     0249  3482               	retlw	130
   419     024A  341C               	retlw	28
   420     024B  34F4               	retlw	244
   421     024C  341A               	retlw	26
   422     024D  347E               	retlw	126
   423     024E  3419               	retlw	25
   424     024F  3420               	retlw	32
   425     0250  3418               	retlw	24
   426     0251  349E               	retlw	158
   427     0252  3415               	retlw	21
   428     0253  347A               	retlw	122
   429     0254  3414               	retlw	20
   430     0255  3466               	retlw	102
   431     0256  3413               	retlw	19
   432     0257  3464               	retlw	100
   433     0258  3412               	retlw	18
   434     0259  3470               	retlw	112
   435     025A  3411               	retlw	17
   436     025B  348A               	retlw	138
   437     025C  3410               	retlw	16
   438     025D  34B0               	retlw	176
   439     025E  340F               	retlw	15
   440     025F  34E4               	retlw	228
   441     0260  340E               	retlw	14
   442     0261  3424               	retlw	36
   443     0262  340E               	retlw	14
   444     0263  346E               	retlw	110
   445     0264  340D               	retlw	13
   446     0265  34C2               	retlw	194
   447     0266  340C               	retlw	12
   448     0267  3420               	retlw	32
   449     0268  340C               	retlw	12
   450     0269  3486               	retlw	134
   451     026A  340B               	retlw	11
   452     026B  34F6               	retlw	246
   453     026C  340A               	retlw	10
   454     026D  346C               	retlw	108
   455     026E  340A               	retlw	10
   456     026F  34EC               	retlw	236
   457     0270  3409               	retlw	9
   458     0271  3472               	retlw	114
   459     0272  3409               	retlw	9
   460     0273  34FE               	retlw	254
   461     0274  3408               	retlw	8
   462     0275  3490               	retlw	144
   463     0276  3408               	retlw	8
   464     0277  3428               	retlw	40
   465     0278  3408               	retlw	8
   466     0279  34C6               	retlw	198
   467     027A  3407               	retlw	7
   468     027B  3469               	retlw	105
   469     027C  3407               	retlw	7
   470     027D  3411               	retlw	17
   471     027E  3407               	retlw	7
   472     027F  34BE               	retlw	190
   473     0280  3406               	retlw	6
   474     0281  346E               	retlw	110
   475     0282  3406               	retlw	6
   476     0283  3423               	retlw	35
   477     0284  3406               	retlw	6
   478     0285  34DC               	retlw	220
   479     0286  3405               	retlw	5
   480     0287  3498               	retlw	152
   481     0288  3405               	retlw	5
   482     0289  3458               	retlw	88
   483     028A  3405               	retlw	5
   484     028B  341B               	retlw	27
   485     028C  3405               	retlw	5
   486     028D  34E1               	retlw	225
   487     028E  3404               	retlw	4
   488     028F  34AA               	retlw	170
   489     0290  3404               	retlw	4
   490     0291  3476               	retlw	118
   491     0292  3404               	retlw	4
   492     0293  3444               	retlw	68
   493     0294  3404               	retlw	4
   494     0295  3415               	retlw	21
   495     0296  3404               	retlw	4
   496     0297  34E8               	retlw	232
   497     0298  3403               	retlw	3
   498     0299  34BD               	retlw	189
   499     029A  3403               	retlw	3
   500     029B  3494               	retlw	148
   501     029C  3403               	retlw	3
   502     029D  346D               	retlw	109
   503     029E  3403               	retlw	3
   504     029F  3448               	retlw	72
   505     02A0  3403               	retlw	3
   506     02A1  3425               	retlw	37
   507     02A2  3403               	retlw	3
   508     02A3  3404               	retlw	4
   509     02A4  3403               	retlw	3
   510     02A5  34E4               	retlw	228
   511     02A6  3402               	retlw	2
   512     02A7  34C5               	retlw	197
   513     02A8  3402               	retlw	2
   514     02A9  34A8               	retlw	168
   515     02AA  3402               	retlw	2
   516     02AB  348D               	retlw	141
   517     02AC  3402               	retlw	2
   518     02AD  3472               	retlw	114
   519     02AE  3402               	retlw	2
   520     02AF  3459               	retlw	89
   521     02B0  3402               	retlw	2
   522     02B1  3441               	retlw	65
   523     02B2  3402               	retlw	2
   524     02B3  342A               	retlw	42
   525     02B4  3402               	retlw	2
   526     02B5  3414               	retlw	20
   527     02B6  3402               	retlw	2
   528     02B7  34FF               	retlw	255
   529     02B8  3401               	retlw	1
   530     02B9  34EB               	retlw	235
   531     02BA  3401               	retlw	1
   532     02BB  34D8               	retlw	216
   533     02BC  3401               	retlw	1
   534     02BD  34C6               	retlw	198
   535     02BE  3401               	retlw	1
   536     02BF  34B4               	retlw	180
   537     02C0  3401               	retlw	1
   538     02C1  34A4               	retlw	164
   539     02C2  3401               	retlw	1
   540     02C3  3494               	retlw	148
   541     02C4  3401               	retlw	1
   542     02C5  3484               	retlw	132
   543     02C6  3401               	retlw	1
   544     02C7  3476               	retlw	118
   545     02C8  3401               	retlw	1
   546     02C9  3468               	retlw	104
   547     02CA  3401               	retlw	1
   548     02CB  345A               	retlw	90
   549     02CC  3401               	retlw	1
   550     02CD  344E               	retlw	78
   551     02CE  3401               	retlw	1
   552     02CF  3441               	retlw	65
   553     02D0  3401               	retlw	1
   554     02D1  3435               	retlw	53
   555     02D2  3401               	retlw	1
   556     02D3  342A               	retlw	42
   557     02D4  3401               	retlw	1
   558     02D5  341F               	retlw	31
   559     02D6  3401               	retlw	1
   560     02D7  3415               	retlw	21
   561     02D8  3401               	retlw	1
   562     02D9  340B               	retlw	11
   563     02DA  3401               	retlw	1
   564     02DB  3402               	retlw	2
   565     02DC  3401               	retlw	1
   566     02DD  34F8               	retlw	248
   567     02DE  3400               	retlw	0
   568     02DF                     __end_of_TABLE:
   569     000B                     _INTCONbits	set	11
   570     001B                     _PR2	set	27
   571     0011                     _PIR1bits	set	17
   572     000C                     _PORTAbits	set	12
   573     001C                     _T2CONbits	set	28
   574     009E                     _ADCON1	set	158
   575     0099                     _OSCCON	set	153
   576     0091                     _PIE1bits	set	145
   577     009B                     _ADRESL	set	155
   578     009C                     _ADRESH	set	156
   579     009D                     _ADCON0bits	set	157
   580     008C                     _TRISAbits	set	140
   581     011D                     _APFCONbits	set	285
   582     018C                     _ANSELAbits	set	396
   583     0293                     _CCP1CONbits	set	659
   584     0293                     _CCP1CON	set	659
   585     0291                     _CCPR1L	set	657
   586                           
   587                           	psect	cinit
   588     00E5                     start_initialization:	
   589                           ; #config settings
   590                           
   591     00E5                     __initialization:
   592                           
   593                           ; Clear objects allocated to COMMON
   594     00E5  01F6               	clrf	__pbssCOMMON& (0+127)
   595     00E6  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   596     00E7  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   597     00E8  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   598     00E9  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601     00EA  3043               	movlw	low __pbssBANK0
   602     00EB  0084               	movwf	4
   603     00EC  3000               	movlw	high __pbssBANK0
   604     00ED  0085               	movwf	5
   605     00EE  3012               	movlw	18
   606     00EF  3183  23F3  3180   	fcall	clear_ram0
   607     00F2                     end_of_initialization:	
   608                           ;End of C runtime variable initialization code
   609                           
   610     00F2                     __end_of__initialization:
   611     00F2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   612     00F3  0020               	movlb	0
   613     00F4  3180  28F6         	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMMON
   616     0076                     __pbssCOMMON:
   617     0076                     _timerCounter:
   618     0076                     	ds	2
   619     0078                     _y:
   620     0078                     	ds	2
   621     007A                     _timerActive:
   622     007A                     	ds	1
   623                           
   624                           	psect	bssBANK0
   625     0043                     __pbssBANK0:
   626     0043                     _ad1:
   627     0043                     	ds	4
   628     0047                     _Rt:
   629     0047                     	ds	4
   630     004B                     _ad3:
   631     004B                     	ds	2
   632     004D                     _ad2:
   633     004D                     	ds	2
   634     004F                     _r:
   635     004F                     	ds	2
   636     0051                     _v:
   637     0051                     	ds	2
   638     0053                     _t:
   639     0053                     	ds	2
   640                           
   641                           	psect	clrtext
   642     03F3                     clear_ram0:	
   643                           ;	Called with FSR0 containing the base address, and
   644                           ;	WREG with the size to clear
   645                           
   646     03F3  0064               	clrwdt	;clear the watchdog before getting into this loop
   647     03F4                     clrloop0:
   648     03F4  0180               	clrf	0	;clear RAM location pointed to by FSR
   649     03F5  3101               	addfsr 0,1
   650     03F6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   651     03F7  2BF4               	goto	clrloop0	;have we reached the end yet?
   652     03F8  3400               	retlw	0	;all done for this memory range, return
   653                           
   654                           	psect	cstackCOMMON
   655     0070                     __pcstackCOMMON:
   656     0070                     ?_setup:
   657     0070                     ?_PWMinit:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_ISR:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ??_ISR:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671     0070                     	ds	4
   672     0074                     ISR@p:
   673                           
   674                           ; 1 bytes @ 0x4
   675     0074                     	ds	1
   676     0075                     ISR@i:
   677                           
   678                           ; 1 bytes @ 0x5
   679     0075                     	ds	1
   680                           
   681                           	psect	cstackBANK0
   682     0020                     __pcstackBANK0:
   683     0020                     ??_setup:
   684     0020                     ??_PWMinit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0020                     ?_getADCValue:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0020                     ?___wmul:	
   691                           ; 2 bytes @ 0x0
   692                           
   693     0020                     ?___lmul:	
   694                           ; 2 bytes @ 0x0
   695                           
   696     0020                     ___wmul@multiplier:	
   697                           ; 4 bytes @ 0x0
   698                           
   699     0020                     ___lmul@multiplier:	
   700                           ; 2 bytes @ 0x0
   701                           
   702                           
   703                           ; 4 bytes @ 0x0
   704     0020                     	ds	2
   705     0022                     ??_getADCValue:
   706     0022                     ___wmul@multiplicand:	
   707                           ; 1 bytes @ 0x2
   708                           
   709                           
   710                           ; 2 bytes @ 0x2
   711     0022                     	ds	2
   712     0024                     ??___wmul:
   713     0024                     ___wmul@product:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0024                     ___lmul@multiplicand:	
   717                           ; 2 bytes @ 0x4
   718                           
   719                           
   720                           ; 4 bytes @ 0x4
   721     0024                     	ds	4
   722     0028                     ??___lmul:
   723     0028                     ___lmul@product:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 4 bytes @ 0x8
   728     0028                     	ds	1
   729     0029                     getADCValue@channel:
   730                           
   731                           ; 1 bytes @ 0x9
   732     0029                     	ds	3
   733     002C                     ?___lldiv:
   734     002C                     ___lldiv@divisor:	
   735                           ; 4 bytes @ 0xC
   736                           
   737                           
   738                           ; 4 bytes @ 0xC
   739     002C                     	ds	4
   740     0030                     ___lldiv@dividend:
   741                           
   742                           ; 4 bytes @ 0x10
   743     0030                     	ds	4
   744     0034                     ??___lldiv:
   745                           
   746                           ; 1 bytes @ 0x14
   747     0034                     	ds	1
   748     0035                     ___lldiv@quotient:
   749                           
   750                           ; 4 bytes @ 0x15
   751     0035                     	ds	4
   752     0039                     ___lldiv@counter:
   753                           
   754                           ; 1 bytes @ 0x19
   755     0039                     	ds	1
   756     003A                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x1A
   759     003A                     	ds	4
   760     003E                     main@VR:
   761                           
   762                           ; 4 bytes @ 0x1E
   763     003E                     	ds	4
   764     0042                     main@add:
   765                           
   766                           ; 1 bytes @ 0x22
   767     0042                     	ds	1
   768                           
   769                           	psect	maintext
   770     00F6                     __pmaintext:	
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 35 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  VR              4   30[BANK0 ] unsigned long 
   781 ;;  add             1   34[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : B1F/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   791 ;;      Params:         0       0       0       0
   792 ;;      Locals:         0       5       0       0
   793 ;;      Temps:          0       4       0       0
   794 ;;      Totals:         0       9       0       0
   795 ;;Total ram usage:        9 bytes
   796 ;; Hardware stack levels required when called: 2
   797 ;; This function calls:
   798 ;;		_PWMinit
   799 ;;		___lldiv
   800 ;;		___lmul
   801 ;;		___wmul
   802 ;;		_getADCValue
   803 ;;		_setup
   804 ;; This function is called by:
   805 ;;		Startup code after reset
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809     00F6                     _main:	
   810                           ;psect for function _main
   811                           
   812     00F6                     l1313:	
   813                           ;incstack = 0
   814                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   815                           
   816                           
   817                           ;main.c: 37:  timerActive = 0;
   818     00F6  01FA               	clrf	_timerActive
   819                           
   820                           ;main.c: 38:     timerCounter = 0;
   821     00F7  01F6               	clrf	_timerCounter
   822     00F8  01F7               	clrf	_timerCounter+1
   823     00F9                     l1315:
   824                           
   825                           ;main.c: 39:     char add = 1;
   826     00F9  0020               	movlb	0	; select bank0
   827     00FA  01C2               	clrf	main@add
   828     00FB  0AC2               	incf	main@add,f
   829     00FC                     l1317:
   830                           
   831                           ;main.c: 40:     setup();
   832     00FC  3183  23C9  3180   	fcall	_setup
   833     00FF                     l1319:
   834                           
   835                           ;main.c: 41:     PWMinit();
   836     00FF  3183  23DE  3180   	fcall	_PWMinit
   837                           
   838                           ;main.c: 42:  CCPR1L = 0;
   839     0102  0025               	movlb	5	; select bank5
   840     0103  0191               	clrf	17	;volatile
   841     0104                     l1321:
   842                           
   843                           ;main.c: 43:     _delay((unsigned long)((1200)*(32000000/4000.0)));
   844     0104  3031               	movlw	49
   845     0105  0020               	movlb	0	; select bank0
   846     0106  00BB               	movwf	??_main+1
   847     0107  30B4               	movlw	180
   848     0108  00BA               	movwf	??_main
   849     0109  3065               	movlw	101
   850     010A                     u1067:
   851     010A  0B89               	decfsz	9,f
   852     010B  290A               	goto	u1067
   853     010C  0BBA               	decfsz	??_main,f
   854     010D  290A               	goto	u1067
   855     010E  0BBB               	decfsz	??_main+1,f
   856     010F  290A               	goto	u1067
   857     0110  3200               	nop2
   858     0111                     l1323:
   859                           
   860                           ;main.c: 44:  TRISAbits.TRISA5 = 0;
   861     0111  0021               	movlb	1	; select bank1
   862     0112  128C               	bcf	12,5	;volatile
   863     0113                     l1325:
   864                           
   865                           ;main.c: 45:  T2CONbits.TMR2ON = 1;
   866     0113  0020               	movlb	0	; select bank0
   867     0114  151C               	bsf	28,2	;volatile
   868     0115                     l1327:
   869                           
   870                           ;main.c: 48:     {;main.c: 49:         if(add == 1)
   871     0115  0020               	movlb	0	; select bank0
   872     0116  0342               	decf	main@add,w
   873     0117  1D03               	btfss	3,2
   874     0118  291A               	goto	u981
   875     0119  291B               	goto	u980
   876     011A                     u981:
   877     011A  29AE               	goto	l1339
   878     011B                     u980:
   879     011B                     l1329:
   880                           
   881                           ;main.c: 50:         {;main.c: 51:             unsigned long VR;;main.c: 52:            
      +                           ad1 = getADCValue(0x00);
   882     011B  3000               	movlw	0
   883     011C  3183  233A  3180   	fcall	_getADCValue
   884     011F  0020               	movlb	0	; select bank0
   885     0120  0820               	movf	?_getADCValue,w
   886     0121  00C3               	movwf	_ad1
   887     0122  0821               	movf	?_getADCValue+1,w
   888     0123  00C4               	movwf	_ad1+1
   889     0124  01C5               	clrf	_ad1+2
   890     0125  01C6               	clrf	_ad1+3
   891     0126                     l1331:
   892                           
   893                           ;main.c: 53:             ad1 = 1024 - ad1;
   894     0126  3000               	movlw	0
   895     0127  00BA               	movwf	??_main
   896     0128  3004               	movlw	4
   897     0129  00BB               	movwf	??_main+1
   898     012A  3000               	movlw	0
   899     012B  00BC               	movwf	??_main+2
   900     012C  3000               	movlw	0
   901     012D  00BD               	movwf	??_main+3
   902     012E  0843               	movf	_ad1,w
   903     012F  02BA               	subwf	??_main,f
   904     0130  0844               	movf	_ad1+1,w
   905     0131  3BBB               	subwfb	??_main+1,f
   906     0132  0845               	movf	_ad1+2,w
   907     0133  3BBC               	subwfb	??_main+2,f
   908     0134  0846               	movf	_ad1+3,w
   909     0135  3BBD               	subwfb	??_main+3,f
   910     0136  083D               	movf	??_main+3,w
   911     0137  00C6               	movwf	_ad1+3
   912     0138  083C               	movf	??_main+2,w
   913     0139  00C5               	movwf	_ad1+2
   914     013A  083B               	movf	??_main+1,w
   915     013B  00C4               	movwf	_ad1+1
   916     013C  083A               	movf	??_main,w
   917     013D  00C3               	movwf	_ad1
   918     013E                     l1333:
   919                           
   920                           ;main.c: 54:             VR = ad1 * 500 / 1024;
   921     013E  0846               	movf	_ad1+3,w
   922     013F  00A3               	movwf	___lmul@multiplier+3
   923     0140  0845               	movf	_ad1+2,w
   924     0141  00A2               	movwf	___lmul@multiplier+2
   925     0142  0844               	movf	_ad1+1,w
   926     0143  00A1               	movwf	___lmul@multiplier+1
   927     0144  0843               	movf	_ad1,w
   928     0145  00A0               	movwf	___lmul@multiplier
   929     0146  3000               	movlw	0
   930     0147  00A7               	movwf	___lmul@multiplicand+3
   931     0148  3000               	movlw	0
   932     0149  00A6               	movwf	___lmul@multiplicand+2
   933     014A  3001               	movlw	1
   934     014B  00A5               	movwf	___lmul@multiplicand+1
   935     014C  30F4               	movlw	244
   936     014D  00A4               	movwf	___lmul@multiplicand
   937     014E  3183  2375  3180   	fcall	___lmul
   938     0151  0020               	movlb	0	; select bank0
   939     0152  0820               	movf	?___lmul,w
   940     0153  00BA               	movwf	??_main
   941     0154  0821               	movf	?___lmul+1,w
   942     0155  00BB               	movwf	??_main+1
   943     0156  0822               	movf	?___lmul+2,w
   944     0157  00BC               	movwf	??_main+2
   945     0158  0823               	movf	?___lmul+3,w
   946     0159  00BD               	movwf	??_main+3
   947     015A  300A               	movlw	10
   948     015B                     u995:
   949     015B  36BD               	lsrf	??_main+3,f
   950     015C  0CBC               	rrf	??_main+2,f
   951     015D  0CBB               	rrf	??_main+1,f
   952     015E  0CBA               	rrf	??_main,f
   953     015F                     u990:
   954     015F  0B89               	decfsz	9,f
   955     0160  295B               	goto	u995
   956     0161  083D               	movf	??_main+3,w
   957     0162  00C1               	movwf	main@VR+3
   958     0163  083C               	movf	??_main+2,w
   959     0164  00C0               	movwf	main@VR+2
   960     0165  083B               	movf	??_main+1,w
   961     0166  00BF               	movwf	main@VR+1
   962     0167  083A               	movf	??_main,w
   963     0168  00BE               	movwf	main@VR
   964     0169                     l1335:
   965                           
   966                           ;main.c: 55:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   967     0169  0841               	movf	main@VR+3,w
   968     016A  00AF               	movwf	___lldiv@divisor+3
   969     016B  0840               	movf	main@VR+2,w
   970     016C  00AE               	movwf	___lldiv@divisor+2
   971     016D  083F               	movf	main@VR+1,w
   972     016E  00AD               	movwf	___lldiv@divisor+1
   973     016F  083E               	movf	main@VR,w
   974     0170  00AC               	movwf	___lldiv@divisor
   975     0171  30F4               	movlw	244
   976     0172  00BA               	movwf	??_main
   977     0173  3001               	movlw	1
   978     0174  00BB               	movwf	??_main+1
   979     0175  3000               	movlw	0
   980     0176  00BC               	movwf	??_main+2
   981     0177  3000               	movlw	0
   982     0178  00BD               	movwf	??_main+3
   983     0179  083E               	movf	main@VR,w
   984     017A  02BA               	subwf	??_main,f
   985     017B  083F               	movf	main@VR+1,w
   986     017C  3BBB               	subwfb	??_main+1,f
   987     017D  0840               	movf	main@VR+2,w
   988     017E  3BBC               	subwfb	??_main+2,f
   989     017F  0841               	movf	main@VR+3,w
   990     0180  3BBD               	subwfb	??_main+3,f
   991     0181  083D               	movf	??_main+3,w
   992     0182  00A3               	movwf	___lmul@multiplier+3
   993     0183  083C               	movf	??_main+2,w
   994     0184  00A2               	movwf	___lmul@multiplier+2
   995     0185  083B               	movf	??_main+1,w
   996     0186  00A1               	movwf	___lmul@multiplier+1
   997     0187  083A               	movf	??_main,w
   998     0188  00A0               	movwf	___lmul@multiplier
   999     0189  3000               	movlw	0
  1000     018A  00A7               	movwf	___lmul@multiplicand+3
  1001     018B  3000               	movlw	0
  1002     018C  00A6               	movwf	___lmul@multiplicand+2
  1003     018D  3003               	movlw	3
  1004     018E  00A5               	movwf	___lmul@multiplicand+1
  1005     018F  30E8               	movlw	232
  1006     0190  00A4               	movwf	___lmul@multiplicand
  1007     0191  3183  2375  3180   	fcall	___lmul
  1008     0194  0020               	movlb	0	; select bank0
  1009     0195  0823               	movf	?___lmul+3,w
  1010     0196  00B3               	movwf	___lldiv@dividend+3
  1011     0197  0822               	movf	?___lmul+2,w
  1012     0198  00B2               	movwf	___lldiv@dividend+2
  1013     0199  0821               	movf	?___lmul+1,w
  1014     019A  00B1               	movwf	___lldiv@dividend+1
  1015     019B  0820               	movf	?___lmul,w
  1016     019C  00B0               	movwf	___lldiv@dividend
  1017     019D  3182  22DF  3180   	fcall	___lldiv
  1018     01A0  0020               	movlb	0	; select bank0
  1019     01A1  082F               	movf	?___lldiv+3,w
  1020     01A2  00CA               	movwf	_Rt+3
  1021     01A3  082E               	movf	?___lldiv+2,w
  1022     01A4  00C9               	movwf	_Rt+2
  1023     01A5  082D               	movf	?___lldiv+1,w
  1024     01A6  00C8               	movwf	_Rt+1
  1025     01A7  082C               	movf	?___lldiv,w
  1026     01A8  00C7               	movwf	_Rt
  1027     01A9                     l1337:
  1028                           
  1029                           ;main.c: 56:             add++;
  1030     01A9  3001               	movlw	1
  1031     01AA  00BA               	movwf	??_main
  1032     01AB  083A               	movf	??_main,w
  1033     01AC  07C2               	addwf	main@add,f
  1034                           
  1035                           ;main.c: 57:         }
  1036     01AD  29E6               	goto	l1351
  1037     01AE                     l1339:
  1038     01AE  3002               	movlw	2
  1039     01AF  0642               	xorwf	main@add,w
  1040     01B0  1D03               	btfss	3,2
  1041     01B1  29B3               	goto	u1001
  1042     01B2  29B4               	goto	u1000
  1043     01B3                     u1001:
  1044     01B3  29D7               	goto	l1345
  1045     01B4                     u1000:
  1046     01B4                     l1341:
  1047                           
  1048                           ;main.c: 59:         {;main.c: 60:             ad2 = getADCValue(0x01);
  1049     01B4  3001               	movlw	1
  1050     01B5  3183  233A  3180   	fcall	_getADCValue
  1051     01B8  0020               	movlb	0	; select bank0
  1052     01B9  0821               	movf	?_getADCValue+1,w
  1053     01BA  00CE               	movwf	_ad2+1
  1054     01BB  0820               	movf	?_getADCValue,w
  1055     01BC  00CD               	movwf	_ad2
  1056                           
  1057                           ;main.c: 61:             t = (int)(ad2 * 10 / 128);
  1058     01BD  084E               	movf	_ad2+1,w
  1059     01BE  00A1               	movwf	___wmul@multiplier+1
  1060     01BF  084D               	movf	_ad2,w
  1061     01C0  00A0               	movwf	___wmul@multiplier
  1062     01C1  300A               	movlw	10
  1063     01C2  00A2               	movwf	___wmul@multiplicand
  1064     01C3  3000               	movlw	0
  1065     01C4  00A3               	movwf	___wmul@multiplicand+1
  1066     01C5  3183  23A9  3180   	fcall	___wmul
  1067     01C8  0020               	movlb	0	; select bank0
  1068     01C9  0820               	movf	?___wmul,w
  1069     01CA  00BA               	movwf	??_main
  1070     01CB  0821               	movf	?___wmul+1,w
  1071     01CC  00BB               	movwf	??_main+1
  1072     01CD  3007               	movlw	7
  1073     01CE                     u1015:
  1074     01CE  36BB               	lsrf	??_main+1,f
  1075     01CF  0CBA               	rrf	??_main,f
  1076     01D0  0B89               	decfsz	9,f
  1077     01D1  29CE               	goto	u1015
  1078     01D2  083A               	movf	??_main,w
  1079     01D3  00D3               	movwf	_t
  1080     01D4  083B               	movf	??_main+1,w
  1081     01D5  00D4               	movwf	_t+1
  1082     01D6  29A9               	goto	l1337
  1083     01D7                     l1345:
  1084                           
  1085                           ;main.c: 65:         {;main.c: 66:             ad3 = getADCValue(0x02);
  1086     01D7  3002               	movlw	2
  1087     01D8  3183  233A  3180   	fcall	_getADCValue
  1088     01DB  0020               	movlb	0	; select bank0
  1089     01DC  0821               	movf	?_getADCValue+1,w
  1090     01DD  00CC               	movwf	_ad3+1
  1091     01DE  0820               	movf	?_getADCValue,w
  1092     01DF  00CB               	movwf	_ad3
  1093     01E0                     l1347:
  1094                           
  1095                           ;main.c: 67:             r = ad3;
  1096     01E0  084C               	movf	_ad3+1,w
  1097     01E1  00D0               	movwf	_r+1
  1098     01E2  084B               	movf	_ad3,w
  1099     01E3  00CF               	movwf	_r
  1100     01E4                     l1349:
  1101                           
  1102                           ;main.c: 68:             add = 1;
  1103     01E4  01C2               	clrf	main@add
  1104     01E5  0AC2               	incf	main@add,f
  1105     01E6                     l1351:
  1106                           
  1107                           ;main.c: 71:   if(v <= (t - 2))
  1108     01E6  0853               	movf	_t,w
  1109     01E7  3EFE               	addlw	254
  1110     01E8  00BA               	movwf	??_main
  1111     01E9  30FF               	movlw	255
  1112     01EA  3D54               	addwfc	_t+1,w
  1113     01EB  00BB               	movwf	??_main+1
  1114     01EC  083B               	movf	??_main+1,w
  1115     01ED  3A80               	xorlw	128
  1116     01EE  00BC               	movwf	??_main+2
  1117     01EF  0852               	movf	_v+1,w
  1118     01F0  3A80               	xorlw	128
  1119     01F1  023C               	subwf	??_main+2,w
  1120     01F2  1D03               	skipz
  1121     01F3  29F6               	goto	u1025
  1122     01F4  0851               	movf	_v,w
  1123     01F5  023A               	subwf	??_main,w
  1124     01F6                     u1025:
  1125     01F6  1C03               	skipc
  1126     01F7  29F9               	goto	u1021
  1127     01F8  29FA               	goto	u1020
  1128     01F9                     u1021:
  1129     01F9  2A19               	goto	l1361
  1130     01FA                     u1020:
  1131     01FA                     l1353:
  1132                           
  1133                           ;main.c: 72:   {;main.c: 73:    PORTAbits.RA4 = 1;
  1134     01FA  0020               	movlb	0	; select bank0
  1135     01FB  160C               	bsf	12,4	;volatile
  1136     01FC                     l1355:
  1137                           
  1138                           ;main.c: 74:    y = 1;
  1139     01FC  3001               	movlw	1
  1140     01FD  00F8               	movwf	_y
  1141     01FE  3000               	movlw	0
  1142     01FF  00F9               	movwf	_y+1
  1143                           
  1144                           ;main.c: 75:    if (r < 100 || r > 900)
  1145     0200  3000               	movlw	0
  1146     0201  0250               	subwf	_r+1,w
  1147     0202  3064               	movlw	100
  1148     0203  1903               	skipnz
  1149     0204  024F               	subwf	_r,w
  1150     0205  1C03               	skipc
  1151     0206  2A08               	goto	u1031
  1152     0207  2A09               	goto	u1030
  1153     0208                     u1031:
  1154     0208  2A12               	goto	l65
  1155     0209                     u1030:
  1156     0209                     l1357:
  1157     0209  3003               	movlw	3
  1158     020A  0250               	subwf	_r+1,w
  1159     020B  3085               	movlw	133
  1160     020C  1903               	skipnz
  1161     020D  024F               	subwf	_r,w
  1162     020E  1C03               	skipc
  1163     020F  2A11               	goto	u1041
  1164     0210  2A12               	goto	u1040
  1165     0211                     u1041:
  1166     0211  2A15               	goto	l1359
  1167     0212                     u1040:
  1168     0212                     l65:
  1169                           
  1170                           ;main.c: 76:    {;main.c: 77:     timerActive = 1;
  1171     0212  01FA               	clrf	_timerActive
  1172     0213  0AFA               	incf	_timerActive,f
  1173                           
  1174                           ;main.c: 78:    }
  1175     0214  2A2F               	goto	l1367
  1176     0215                     l1359:
  1177                           
  1178                           ;main.c: 80:    {;main.c: 81:     timerActive = 0;
  1179     0215  01FA               	clrf	_timerActive
  1180                           
  1181                           ;main.c: 82:     timerCounter = 0;
  1182     0216  01F6               	clrf	_timerCounter
  1183     0217  01F7               	clrf	_timerCounter+1
  1184     0218  2A2F               	goto	l1367
  1185     0219                     l1361:
  1186     0219  0020               	movlb	0	; select bank0
  1187     021A  0854               	movf	_t+1,w
  1188     021B  3A80               	xorlw	128
  1189     021C  00BA               	movwf	??_main
  1190     021D  0852               	movf	_v+1,w
  1191     021E  3A80               	xorlw	128
  1192     021F  023A               	subwf	??_main,w
  1193     0220  1D03               	skipz
  1194     0221  2A24               	goto	u1055
  1195     0222  0851               	movf	_v,w
  1196     0223  0253               	subwf	_t,w
  1197     0224                     u1055:
  1198     0224  1803               	skipnc
  1199     0225  2A27               	goto	u1051
  1200     0226  2A28               	goto	u1050
  1201     0227                     u1051:
  1202     0227  2A2F               	goto	l1367
  1203     0228                     u1050:
  1204     0228                     l1363:
  1205                           
  1206                           ;main.c: 86:   {;main.c: 87:    PORTAbits.RA4 = 0;
  1207     0228  0020               	movlb	0	; select bank0
  1208     0229  120C               	bcf	12,4	;volatile
  1209     022A                     l1365:
  1210                           
  1211                           ;main.c: 88:    y = 0;
  1212     022A  01F8               	clrf	_y
  1213     022B  01F9               	clrf	_y+1
  1214                           
  1215                           ;main.c: 89:    timerActive = 0;
  1216     022C  01FA               	clrf	_timerActive
  1217                           
  1218                           ;main.c: 90:    timerCounter = 0;
  1219     022D  01F6               	clrf	_timerCounter
  1220     022E  01F7               	clrf	_timerCounter+1
  1221     022F                     l1367:
  1222                           
  1223                           ;main.c: 92:   _delay((unsigned long)((200)*(32000000/4000.0)));
  1224     022F  3009               	movlw	9
  1225     0230  0020               	movlb	0	; select bank0
  1226     0231  00BB               	movwf	??_main+1
  1227     0232  301E               	movlw	30
  1228     0233  00BA               	movwf	??_main
  1229     0234  30E4               	movlw	228
  1230     0235                     u1077:
  1231     0235  0B89               	decfsz	9,f
  1232     0236  2A35               	goto	u1077
  1233     0237  0BBA               	decfsz	??_main,f
  1234     0238  2A35               	goto	u1077
  1235     0239  0BBB               	decfsz	??_main+1,f
  1236     023A  2A35               	goto	u1077
  1237     023B  0000               	nop
  1238     023C  2915               	goto	l1327
  1239     023D  3180  28E3         	ljmp	start
  1240     023F                     __end_of_main:
  1241                           
  1242                           	psect	text1
  1243     03C9                     __ptext1:	
  1244 ;; *************** function _setup *****************
  1245 ;; Defined at:
  1246 ;;		line 5 in file "KF2.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1260 ;;      Params:         0       0       0       0
  1261 ;;      Locals:         0       0       0       0
  1262 ;;      Temps:          0       0       0       0
  1263 ;;      Totals:         0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274     03C9                     _setup:	
  1275                           ;psect for function _setup
  1276                           
  1277     03C9                     l1213:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _setup: [wreg]
  1280                           
  1281                           
  1282                           ;KF2.c: 7:     OSCCON = 0b01110000;
  1283     03C9  3070               	movlw	112
  1284     03CA  0021               	movlb	1	; select bank1
  1285     03CB  0099               	movwf	25	;volatile
  1286     03CC                     l1215:
  1287                           
  1288                           ;KF2.c: 10:     PORTAbits.RA4 = 0;
  1289     03CC  0020               	movlb	0	; select bank0
  1290     03CD  120C               	bcf	12,4	;volatile
  1291     03CE                     l1217:
  1292                           
  1293                           ;KF2.c: 11:     TRISAbits.TRISA4 = 0;
  1294     03CE  0021               	movlb	1	; select bank1
  1295     03CF  120C               	bcf	12,4	;volatile
  1296     03D0                     l1219:
  1297                           
  1298                           ;KF2.c: 14:     ANSELAbits.ANSA0 = 1;
  1299     03D0  0023               	movlb	3	; select bank3
  1300     03D1  140C               	bsf	12,0	;volatile
  1301     03D2                     l1221:
  1302                           
  1303                           ;KF2.c: 15:     ANSELAbits.ANSA1 = 1;
  1304     03D2  148C               	bsf	12,1	;volatile
  1305     03D3                     l1223:
  1306                           
  1307                           ;KF2.c: 16:     ANSELAbits.ANSA2 = 1;
  1308     03D3  150C               	bsf	12,2	;volatile
  1309                           
  1310                           ;KF2.c: 17:     ADCON1 = 0x50;
  1311     03D4  3050               	movlw	80
  1312     03D5  0021               	movlb	1	; select bank1
  1313     03D6  009E               	movwf	30	;volatile
  1314     03D7                     l1225:
  1315                           
  1316                           ;KF2.c: 18:     PIE1bits.ADIE = 1;
  1317     03D7  1711               	bsf	17,6	;volatile
  1318     03D8                     l1227:
  1319                           
  1320                           ;KF2.c: 19:     PIR1bits.ADIF = 0;
  1321     03D8  0020               	movlb	0	; select bank0
  1322     03D9  1311               	bcf	17,6	;volatile
  1323     03DA                     l1229:
  1324                           
  1325                           ;KF2.c: 20:     ADCON0bits.GO = 0;
  1326     03DA  0021               	movlb	1	; select bank1
  1327     03DB  109D               	bcf	29,1	;volatile
  1328     03DC                     l1231:
  1329                           
  1330                           ;KF2.c: 21:     ADCON0bits.ADON = 1;
  1331     03DC  141D               	bsf	29,0	;volatile
  1332     03DD                     l134:
  1333     03DD  0008               	return
  1334     03DE                     __end_of_setup:
  1335                           
  1336                           	psect	text2
  1337     033A                     __ptext2:	
  1338 ;; *************** function _getADCValue *****************
  1339 ;; Defined at:
  1340 ;;		line 97 in file "main.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  channel         1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  channel         1    9[BANK0 ] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  2    0[BANK0 ] unsigned int 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1354 ;;      Params:         0       2       0       0
  1355 ;;      Locals:         0       1       0       0
  1356 ;;      Temps:          0       7       0       0
  1357 ;;      Totals:         0      10       0       0
  1358 ;;Total ram usage:       10 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368     033A                     _getADCValue:	
  1369                           ;psect for function _getADCValue
  1370                           
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1374                           ;getADCValue@channel stored from wreg
  1375     033A  0020               	movlb	0	; select bank0
  1376     033B  00A9               	movwf	getADCValue@channel
  1377     033C                     l1251:
  1378                           
  1379                           ;main.c: 97: unsigned int getADCValue(unsigned char channel);main.c: 98: {;main.c: 99:  
      +                             ADCON0bits.CHS = channel;
  1380     033C  0829               	movf	getADCValue@channel,w
  1381     033D  00A2               	movwf	??_getADCValue
  1382     033E  0DA2               	rlf	??_getADCValue,f
  1383     033F  0DA2               	rlf	??_getADCValue,f
  1384     0340  0021               	movlb	1	; select bank1
  1385     0341  081D               	movf	29,w	;volatile
  1386     0342  0020               	movlb	0	; select bank0
  1387     0343  0622               	xorwf	??_getADCValue,w
  1388     0344  3983               	andlw	-125
  1389     0345  0622               	xorwf	??_getADCValue,w
  1390     0346  0021               	movlb	1	; select bank1
  1391     0347  009D               	movwf	29	;volatile
  1392     0348                     l1253:
  1393                           
  1394                           ;main.c: 100:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1395     0348  3034               	movlw	52
  1396     0349  0020               	movlb	0	; select bank0
  1397     034A  00A2               	movwf	??_getADCValue
  1398     034B  30F1               	movlw	241
  1399     034C                     u1087:
  1400     034C  0B89               	decfsz	9,f
  1401     034D  2B4C               	goto	u1087
  1402     034E  0BA2               	decfsz	??_getADCValue,f
  1403     034F  2B4C               	goto	u1087
  1404     0350  3200               	nop2
  1405     0351                     l1255:
  1406                           
  1407                           ;main.c: 101:     ADCON0bits.GO = 1;
  1408     0351  0021               	movlb	1	; select bank1
  1409     0352  149D               	bsf	29,1	;volatile
  1410     0353                     l74:	
  1411                           ;main.c: 102:     while (ADCON0bits.GO);
  1412                           
  1413     0353  189D               	btfsc	29,1	;volatile
  1414     0354  2B56               	goto	u811
  1415     0355  2B57               	goto	u810
  1416     0356                     u811:
  1417     0356  2B53               	goto	l74
  1418     0357                     u810:
  1419     0357                     l1257:
  1420                           
  1421                           ;main.c: 103:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1422     0357  081B               	movf	27,w	;volatile
  1423     0358  0020               	movlb	0	; select bank0
  1424     0359  00A2               	movwf	??_getADCValue
  1425     035A  3006               	movlw	6
  1426     035B                     u825:
  1427     035B  36A2               	lsrf	??_getADCValue,f
  1428     035C  0B89               	decfsz	9,f
  1429     035D  2B5B               	goto	u825
  1430     035E  0822               	movf	??_getADCValue,w
  1431     035F  00A3               	movwf	??_getADCValue+1
  1432     0360  01A4               	clrf	??_getADCValue+2
  1433     0361  0021               	movlb	1	; select bank1
  1434     0362  081C               	movf	28,w	;volatile
  1435     0363  0020               	movlb	0	; select bank0
  1436     0364  00A5               	movwf	??_getADCValue+3
  1437     0365  01A6               	clrf	??_getADCValue+4
  1438     0366  35A5               	lslf	??_getADCValue+3,f
  1439     0367  0DA6               	rlf	??_getADCValue+4,f
  1440     0368  35A5               	lslf	??_getADCValue+3,f
  1441     0369  0DA6               	rlf	??_getADCValue+4,f
  1442     036A  0823               	movf	??_getADCValue+1,w
  1443     036B  0425               	iorwf	??_getADCValue+3,w
  1444     036C  00A7               	movwf	??_getADCValue+5
  1445     036D  0824               	movf	??_getADCValue+2,w
  1446     036E  0426               	iorwf	??_getADCValue+4,w
  1447     036F  00A8               	movwf	??_getADCValue+6
  1448     0370  0827               	movf	??_getADCValue+5,w
  1449     0371  00A0               	movwf	?_getADCValue
  1450     0372  0828               	movf	??_getADCValue+6,w
  1451     0373  00A1               	movwf	?_getADCValue+1
  1452     0374                     l77:
  1453     0374  0008               	return
  1454     0375                     __end_of_getADCValue:
  1455                           
  1456                           	psect	text3
  1457     03A9                     __ptext3:	
  1458 ;; *************** function ___wmul *****************
  1459 ;; Defined at:
  1460 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul16.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1463 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  product         2    4[BANK0 ] unsigned int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    0[BANK0 ] unsigned int 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1475 ;;      Params:         0       4       0       0
  1476 ;;      Locals:         0       2       0       0
  1477 ;;      Temps:          0       0       0       0
  1478 ;;      Totals:         0       6       0       0
  1479 ;;Total ram usage:        6 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489     03A9                     ___wmul:	
  1490                           ;psect for function ___wmul
  1491                           
  1492     03A9                     l1261:	
  1493                           ;incstack = 0
  1494                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1495                           
  1496     03A9  0020               	movlb	0	; select bank0
  1497     03AA  01A4               	clrf	___wmul@product
  1498     03AB  01A5               	clrf	___wmul@product+1
  1499     03AC                     l1263:
  1500     03AC  1C20               	btfss	___wmul@multiplier,0
  1501     03AD  2BAF               	goto	u831
  1502     03AE  2BB0               	goto	u830
  1503     03AF                     u831:
  1504     03AF  2BB4               	goto	l287
  1505     03B0                     u830:
  1506     03B0                     l1265:
  1507     03B0  0822               	movf	___wmul@multiplicand,w
  1508     03B1  07A4               	addwf	___wmul@product,f
  1509     03B2  0823               	movf	___wmul@multiplicand+1,w
  1510     03B3  3DA5               	addwfc	___wmul@product+1,f
  1511     03B4                     l287:
  1512     03B4  3001               	movlw	1
  1513     03B5                     u845:
  1514     03B5  35A2               	lslf	___wmul@multiplicand,f
  1515     03B6  0DA3               	rlf	___wmul@multiplicand+1,f
  1516     03B7  0B89               	decfsz	9,f
  1517     03B8  2BB5               	goto	u845
  1518     03B9                     l1267:
  1519     03B9  3001               	movlw	1
  1520     03BA                     u855:
  1521     03BA  36A1               	lsrf	___wmul@multiplier+1,f
  1522     03BB  0CA0               	rrf	___wmul@multiplier,f
  1523     03BC  0B89               	decfsz	9,f
  1524     03BD  2BBA               	goto	u855
  1525     03BE                     l1269:
  1526     03BE  0820               	movf	___wmul@multiplier,w
  1527     03BF  0421               	iorwf	___wmul@multiplier+1,w
  1528     03C0  1D03               	btfss	3,2
  1529     03C1  2BC3               	goto	u861
  1530     03C2  2BC4               	goto	u860
  1531     03C3                     u861:
  1532     03C3  2BAC               	goto	l1263
  1533     03C4                     u860:
  1534     03C4                     l1271:
  1535     03C4  0825               	movf	___wmul@product+1,w
  1536     03C5  00A1               	movwf	?___wmul+1
  1537     03C6  0824               	movf	___wmul@product,w
  1538     03C7  00A0               	movwf	?___wmul
  1539     03C8                     l289:
  1540     03C8  0008               	return
  1541     03C9                     __end_of___wmul:
  1542                           
  1543                           	psect	text4
  1544     0375                     __ptext4:	
  1545 ;; *************** function ___lmul *****************
  1546 ;; Defined at:
  1547 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1550 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  product         4    8[BANK0 ] unsigned long 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  4    0[BANK0 ] unsigned long 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1562 ;;      Params:         0       8       0       0
  1563 ;;      Locals:         0       4       0       0
  1564 ;;      Temps:          0       0       0       0
  1565 ;;      Totals:         0      12       0       0
  1566 ;;Total ram usage:       12 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576     0375                     ___lmul:	
  1577                           ;psect for function ___lmul
  1578                           
  1579     0375                     l1275:	
  1580                           ;incstack = 0
  1581                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1582                           
  1583     0375  3000               	movlw	0
  1584     0376  0020               	movlb	0	; select bank0
  1585     0377  00AB               	movwf	___lmul@product+3
  1586     0378  3000               	movlw	0
  1587     0379  00AA               	movwf	___lmul@product+2
  1588     037A  3000               	movlw	0
  1589     037B  00A9               	movwf	___lmul@product+1
  1590     037C  3000               	movlw	0
  1591     037D  00A8               	movwf	___lmul@product
  1592     037E                     l1277:
  1593     037E  1C20               	btfss	___lmul@multiplier,0
  1594     037F  2B81               	goto	u871
  1595     0380  2B82               	goto	u870
  1596     0381                     u871:
  1597     0381  2B8A               	goto	l1281
  1598     0382                     u870:
  1599     0382                     l1279:
  1600     0382  0824               	movf	___lmul@multiplicand,w
  1601     0383  07A8               	addwf	___lmul@product,f
  1602     0384  0825               	movf	___lmul@multiplicand+1,w
  1603     0385  3DA9               	addwfc	___lmul@product+1,f
  1604     0386  0826               	movf	___lmul@multiplicand+2,w
  1605     0387  3DAA               	addwfc	___lmul@product+2,f
  1606     0388  0827               	movf	___lmul@multiplicand+3,w
  1607     0389  3DAB               	addwfc	___lmul@product+3,f
  1608     038A                     l1281:
  1609     038A  3001               	movlw	1
  1610     038B                     u885:
  1611     038B  35A4               	lslf	___lmul@multiplicand,f
  1612     038C  0DA5               	rlf	___lmul@multiplicand+1,f
  1613     038D  0DA6               	rlf	___lmul@multiplicand+2,f
  1614     038E  0DA7               	rlf	___lmul@multiplicand+3,f
  1615     038F  0B89               	decfsz	9,f
  1616     0390  2B8B               	goto	u885
  1617     0391                     l1283:
  1618     0391  3001               	movlw	1
  1619     0392                     u895:
  1620     0392  36A3               	lsrf	___lmul@multiplier+3,f
  1621     0393  0CA2               	rrf	___lmul@multiplier+2,f
  1622     0394  0CA1               	rrf	___lmul@multiplier+1,f
  1623     0395  0CA0               	rrf	___lmul@multiplier,f
  1624     0396  0B89               	decfsz	9,f
  1625     0397  2B92               	goto	u895
  1626     0398  0823               	movf	___lmul@multiplier+3,w
  1627     0399  0422               	iorwf	___lmul@multiplier+2,w
  1628     039A  0421               	iorwf	___lmul@multiplier+1,w
  1629     039B  0420               	iorwf	___lmul@multiplier,w
  1630     039C  1D03               	skipz
  1631     039D  2B9F               	goto	u901
  1632     039E  2BA0               	goto	u900
  1633     039F                     u901:
  1634     039F  2B7E               	goto	l1277
  1635     03A0                     u900:
  1636     03A0                     l1285:
  1637     03A0  082B               	movf	___lmul@product+3,w
  1638     03A1  00A3               	movwf	?___lmul+3
  1639     03A2  082A               	movf	___lmul@product+2,w
  1640     03A3  00A2               	movwf	?___lmul+2
  1641     03A4  0829               	movf	___lmul@product+1,w
  1642     03A5  00A1               	movwf	?___lmul+1
  1643     03A6  0828               	movf	___lmul@product,w
  1644     03A7  00A0               	movwf	?___lmul
  1645     03A8                     l301:
  1646     03A8  0008               	return
  1647     03A9                     __end_of___lmul:
  1648                           
  1649                           	psect	text5
  1650     02DF                     __ptext5:	
  1651 ;; *************** function ___lldiv *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  divisor         4   12[BANK0 ] unsigned long 
  1656 ;;  dividend        4   16[BANK0 ] unsigned long 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  quotient        4   21[BANK0 ] unsigned long 
  1659 ;;  counter         1   25[BANK0 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  4   12[BANK0 ] unsigned long 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1669 ;;      Params:         0       8       0       0
  1670 ;;      Locals:         0       5       0       0
  1671 ;;      Temps:          0       1       0       0
  1672 ;;      Totals:         0      14       0       0
  1673 ;;Total ram usage:       14 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     02DF                     ___lldiv:	
  1684                           ;psect for function ___lldiv
  1685                           
  1686     02DF                     l1289:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1689                           
  1690     02DF  3000               	movlw	0
  1691     02E0  0020               	movlb	0	; select bank0
  1692     02E1  00B8               	movwf	___lldiv@quotient+3
  1693     02E2  3000               	movlw	0
  1694     02E3  00B7               	movwf	___lldiv@quotient+2
  1695     02E4  3000               	movlw	0
  1696     02E5  00B6               	movwf	___lldiv@quotient+1
  1697     02E6  3000               	movlw	0
  1698     02E7  00B5               	movwf	___lldiv@quotient
  1699     02E8  082F               	movf	___lldiv@divisor+3,w
  1700     02E9  042E               	iorwf	___lldiv@divisor+2,w
  1701     02EA  042D               	iorwf	___lldiv@divisor+1,w
  1702     02EB  042C               	iorwf	___lldiv@divisor,w
  1703     02EC  1903               	skipnz
  1704     02ED  2AEF               	goto	u911
  1705     02EE  2AF0               	goto	u910
  1706     02EF                     u911:
  1707     02EF  2B31               	goto	l1309
  1708     02F0                     u910:
  1709     02F0                     l1291:
  1710     02F0  01B9               	clrf	___lldiv@counter
  1711     02F1  0AB9               	incf	___lldiv@counter,f
  1712     02F2  2AFE               	goto	l1295
  1713     02F3                     l1293:
  1714     02F3  3001               	movlw	1
  1715     02F4                     u925:
  1716     02F4  35AC               	lslf	___lldiv@divisor,f
  1717     02F5  0DAD               	rlf	___lldiv@divisor+1,f
  1718     02F6  0DAE               	rlf	___lldiv@divisor+2,f
  1719     02F7  0DAF               	rlf	___lldiv@divisor+3,f
  1720     02F8  0B89               	decfsz	9,f
  1721     02F9  2AF4               	goto	u925
  1722     02FA  3001               	movlw	1
  1723     02FB  00B4               	movwf	??___lldiv
  1724     02FC  0834               	movf	??___lldiv,w
  1725     02FD  07B9               	addwf	___lldiv@counter,f
  1726     02FE                     l1295:
  1727     02FE  1FAF               	btfss	___lldiv@divisor+3,7
  1728     02FF  2B01               	goto	u931
  1729     0300  2B02               	goto	u930
  1730     0301                     u931:
  1731     0301  2AF3               	goto	l1293
  1732     0302                     u930:
  1733     0302                     l1297:
  1734     0302  3001               	movlw	1
  1735     0303                     u945:
  1736     0303  35B5               	lslf	___lldiv@quotient,f
  1737     0304  0DB6               	rlf	___lldiv@quotient+1,f
  1738     0305  0DB7               	rlf	___lldiv@quotient+2,f
  1739     0306  0DB8               	rlf	___lldiv@quotient+3,f
  1740     0307  0B89               	decfsz	9,f
  1741     0308  2B03               	goto	u945
  1742     0309                     l1299:
  1743     0309  082F               	movf	___lldiv@divisor+3,w
  1744     030A  0233               	subwf	___lldiv@dividend+3,w
  1745     030B  1D03               	skipz
  1746     030C  2B17               	goto	u955
  1747     030D  082E               	movf	___lldiv@divisor+2,w
  1748     030E  0232               	subwf	___lldiv@dividend+2,w
  1749     030F  1D03               	skipz
  1750     0310  2B17               	goto	u955
  1751     0311  082D               	movf	___lldiv@divisor+1,w
  1752     0312  0231               	subwf	___lldiv@dividend+1,w
  1753     0313  1D03               	skipz
  1754     0314  2B17               	goto	u955
  1755     0315  082C               	movf	___lldiv@divisor,w
  1756     0316  0230               	subwf	___lldiv@dividend,w
  1757     0317                     u955:
  1758     0317  1C03               	skipc
  1759     0318  2B1A               	goto	u951
  1760     0319  2B1B               	goto	u950
  1761     031A                     u951:
  1762     031A  2B24               	goto	l1305
  1763     031B                     u950:
  1764     031B                     l1301:
  1765     031B  082C               	movf	___lldiv@divisor,w
  1766     031C  02B0               	subwf	___lldiv@dividend,f
  1767     031D  082D               	movf	___lldiv@divisor+1,w
  1768     031E  3BB1               	subwfb	___lldiv@dividend+1,f
  1769     031F  082E               	movf	___lldiv@divisor+2,w
  1770     0320  3BB2               	subwfb	___lldiv@dividend+2,f
  1771     0321  082F               	movf	___lldiv@divisor+3,w
  1772     0322  3BB3               	subwfb	___lldiv@dividend+3,f
  1773     0323                     l1303:
  1774     0323  1435               	bsf	___lldiv@quotient,0
  1775     0324                     l1305:
  1776     0324  3001               	movlw	1
  1777     0325                     u965:
  1778     0325  36AF               	lsrf	___lldiv@divisor+3,f
  1779     0326  0CAE               	rrf	___lldiv@divisor+2,f
  1780     0327  0CAD               	rrf	___lldiv@divisor+1,f
  1781     0328  0CAC               	rrf	___lldiv@divisor,f
  1782     0329  0B89               	decfsz	9,f
  1783     032A  2B25               	goto	u965
  1784     032B                     l1307:
  1785     032B  3001               	movlw	1
  1786     032C  02B9               	subwf	___lldiv@counter,f
  1787     032D  1D03               	btfss	3,2
  1788     032E  2B30               	goto	u971
  1789     032F  2B31               	goto	u970
  1790     0330                     u971:
  1791     0330  2B02               	goto	l1297
  1792     0331                     u970:
  1793     0331                     l1309:
  1794     0331  0838               	movf	___lldiv@quotient+3,w
  1795     0332  00AF               	movwf	?___lldiv+3
  1796     0333  0837               	movf	___lldiv@quotient+2,w
  1797     0334  00AE               	movwf	?___lldiv+2
  1798     0335  0836               	movf	___lldiv@quotient+1,w
  1799     0336  00AD               	movwf	?___lldiv+1
  1800     0337  0835               	movf	___lldiv@quotient,w
  1801     0338  00AC               	movwf	?___lldiv
  1802     0339                     l323:
  1803     0339  0008               	return
  1804     033A                     __end_of___lldiv:
  1805                           
  1806                           	psect	text6
  1807     03DE                     __ptext6:	
  1808 ;; *************** function _PWMinit *****************
  1809 ;; Defined at:
  1810 ;;		line 24 in file "KF2.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1824 ;;      Params:         0       0       0       0
  1825 ;;      Locals:         0       0       0       0
  1826 ;;      Temps:          0       0       0       0
  1827 ;;      Totals:         0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838     03DE                     _PWMinit:	
  1839                           ;psect for function _PWMinit
  1840                           
  1841     03DE                     l1233:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1844                           
  1845                           
  1846                           ;KF2.c: 26:  TRISAbits.TRISA5 = 1;
  1847     03DE  0021               	movlb	1	; select bank1
  1848     03DF  168C               	bsf	12,5	;volatile
  1849                           
  1850                           ;KF2.c: 27:  APFCONbits.CCP1SEL = 1;
  1851     03E0  0022               	movlb	2	; select bank2
  1852     03E1  141D               	bsf	29,0	;volatile
  1853     03E2                     l1235:
  1854                           
  1855                           ;KF2.c: 28:     PR2 = 0xFF;
  1856     03E2  30FF               	movlw	255
  1857     03E3  0020               	movlb	0	; select bank0
  1858     03E4  009B               	movwf	27	;volatile
  1859     03E5                     l1237:
  1860                           
  1861                           ;KF2.c: 29:  CCP1CONbits.CCP1M = 0x0F;
  1862     03E5  300F               	movlw	15
  1863     03E6  0025               	movlb	5	; select bank5
  1864     03E7  0493               	iorwf	19,f	;volatile
  1865     03E8                     l1239:
  1866                           
  1867                           ;KF2.c: 30:  CCP1CONbits.P1M = 0;
  1868     03E8  303F               	movlw	-193
  1869     03E9  0593               	andwf	19,f	;volatile
  1870     03EA                     l1241:
  1871                           
  1872                           ;KF2.c: 31:     INTCONbits.GIE = 1;
  1873     03EA  178B               	bsf	11,7	;volatile
  1874     03EB                     l1243:
  1875                           
  1876                           ;KF2.c: 32:     INTCONbits.PEIE = 1;
  1877     03EB  170B               	bsf	11,6	;volatile
  1878     03EC                     l1245:
  1879                           
  1880                           ;KF2.c: 33:     PIE1bits.TMR2IE = 1;
  1881     03EC  0021               	movlb	1	; select bank1
  1882     03ED  1491               	bsf	17,1	;volatile
  1883     03EE                     l1247:
  1884                           
  1885                           ;KF2.c: 34:     PIR1bits.TMR2IF = 0;
  1886     03EE  0020               	movlb	0	; select bank0
  1887     03EF  1091               	bcf	17,1	;volatile
  1888     03F0                     l1249:
  1889                           
  1890                           ;KF2.c: 35:     T2CONbits.T2CKPS = 3;
  1891     03F0  3003               	movlw	3
  1892     03F1  049C               	iorwf	28,f	;volatile
  1893     03F2                     l137:
  1894     03F2  0008               	return
  1895     03F3                     __end_of_PWMinit:
  1896                           
  1897                           	psect	intentry
  1898     0004                     __pintentry:	
  1899 ;; *************** function _ISR *****************
  1900 ;; Defined at:
  1901 ;;		line 106 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  i               1    5[COMMON] unsigned char 
  1906 ;;  p               1    4[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1916 ;;      Params:         0       0       0       0
  1917 ;;      Locals:         2       0       0       0
  1918 ;;      Temps:          4       0       0       0
  1919 ;;      Totals:         6       0       0       0
  1920 ;;Total ram usage:        6 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		Interrupt level 1
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929     0004                     _ISR:
  1930                           
  1931                           ;incstack = 0
  1932     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1933                           
  1934                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  1935     0005  3180               	pagesel	$
  1936     0006                     i1l1135:
  1937                           
  1938                           ;main.c: 108:  if(PIR1bits.TMR2IF == 1)
  1939     0006  0020               	movlb	0	; select bank0
  1940     0007  1C91               	btfss	17,1	;volatile
  1941     0008  280A               	goto	u66_21
  1942     0009  280B               	goto	u66_20
  1943     000A                     u66_21:
  1944     000A  2846               	goto	i1l1165
  1945     000B                     u66_20:
  1946     000B                     i1l1137:
  1947                           
  1948                           ;main.c: 109:  {;main.c: 110:   char p;;main.c: 111:   PIE1bits.TMR2IE = 0;
  1949     000B  0021               	movlb	1	; select bank1
  1950     000C  1091               	bcf	17,1	;volatile
  1951                           
  1952                           ;main.c: 112:   T2CONbits.TMR2ON = 0;
  1953     000D  0020               	movlb	0	; select bank0
  1954     000E  111C               	bcf	28,2	;volatile
  1955                           
  1956                           ;main.c: 113:   PIR1bits.TMR2IF = 0;
  1957     000F  1091               	bcf	17,1	;volatile
  1958     0010                     i1l1139:
  1959                           
  1960                           ;main.c: 114:   if(y == 0)
  1961     0010  0878               	movf	_y,w
  1962     0011  0479               	iorwf	_y+1,w
  1963     0012  1D03               	btfss	3,2
  1964     0013  2815               	goto	u67_21
  1965     0014  2816               	goto	u67_20
  1966     0015                     u67_21:
  1967     0015  2838               	goto	i1l1157
  1968     0016                     u67_20:
  1969     0016                     i1l1141:
  1970                           
  1971                           ;main.c: 115:   {;main.c: 116:    if(CCPR1L >= PR2)
  1972     0016  081B               	movf	27,w	;volatile
  1973     0017  0025               	movlb	5	; select bank5
  1974     0018  0211               	subwf	17,w	;volatile
  1975     0019  1C03               	skipc
  1976     001A  281C               	goto	u68_21
  1977     001B  281D               	goto	u68_20
  1978     001C                     u68_21:
  1979     001C  281F               	goto	i1l1145
  1980     001D                     u68_20:
  1981     001D                     i1l1143:
  1982                           
  1983                           ;main.c: 117:    {;main.c: 118:     p = 0;
  1984     001D  01F4               	clrf	ISR@p
  1985                           
  1986                           ;main.c: 119:    }
  1987     001E  2826               	goto	i1l1149
  1988     001F                     i1l1145:
  1989     001F  0811               	movf	17,w	;volatile
  1990     0020  1D03               	btfss	3,2
  1991     0021  2823               	goto	u69_21
  1992     0022  2824               	goto	u69_20
  1993     0023                     u69_21:
  1994     0023  2826               	goto	i1l1149
  1995     0024                     u69_20:
  1996     0024                     i1l1147:
  1997                           
  1998                           ;main.c: 121:    {;main.c: 122:     p = 1;
  1999     0024  01F4               	clrf	ISR@p
  2000     0025  0AF4               	incf	ISR@p,f
  2001     0026                     i1l1149:
  2002                           
  2003                           ;main.c: 124:    if(p == 1)
  2004     0026  0374               	decf	ISR@p,w
  2005     0027  1D03               	btfss	3,2
  2006     0028  282A               	goto	u70_21
  2007     0029  282B               	goto	u70_20
  2008     002A                     u70_21:
  2009     002A  2830               	goto	i1l1153
  2010     002B                     u70_20:
  2011     002B                     i1l1151:
  2012                           
  2013                           ;main.c: 125:    {;main.c: 126:     CCPR1L++;
  2014     002B  3001               	movlw	1
  2015     002C  00F0               	movwf	??_ISR
  2016     002D  0870               	movf	??_ISR,w
  2017     002E  0791               	addwf	17,f	;volatile
  2018                           
  2019                           ;main.c: 127:    }
  2020     002F  2842               	goto	i1l1161
  2021     0030                     i1l1153:
  2022     0030  0874               	movf	ISR@p,w
  2023     0031  1D03               	btfss	3,2
  2024     0032  2834               	goto	u71_21
  2025     0033  2835               	goto	u71_20
  2026     0034                     u71_21:
  2027     0034  2842               	goto	i1l1161
  2028     0035                     u71_20:
  2029     0035                     i1l1155:
  2030                           
  2031                           ;main.c: 129:    {;main.c: 130:     CCPR1L--;
  2032     0035  3001               	movlw	1
  2033     0036  0291               	subwf	17,f	;volatile
  2034     0037  2842               	goto	i1l1161
  2035     0038                     i1l1157:
  2036     0038  0378               	decf	_y,w
  2037     0039  0479               	iorwf	_y+1,w
  2038     003A  1D03               	btfss	3,2
  2039     003B  283D               	goto	u72_21
  2040     003C  283E               	goto	u72_20
  2041     003D                     u72_21:
  2042     003D  2842               	goto	i1l1161
  2043     003E                     u72_20:
  2044     003E                     i1l1159:
  2045                           
  2046                           ;main.c: 134:   {;main.c: 135:    CCPR1L = PR2 - 1;
  2047     003E  081B               	movf	27,w	;volatile
  2048     003F  3EFF               	addlw	255
  2049     0040  0025               	movlb	5	; select bank5
  2050     0041  0091               	movwf	17	;volatile
  2051     0042                     i1l1161:
  2052                           
  2053                           ;main.c: 137:   PIE1bits.TMR2IE = 1;
  2054     0042  0021               	movlb	1	; select bank1
  2055     0043  1491               	bsf	17,1	;volatile
  2056     0044                     i1l1163:
  2057                           
  2058                           ;main.c: 138:   T2CONbits.TMR2ON = 1;
  2059     0044  0020               	movlb	0	; select bank0
  2060     0045  151C               	bsf	28,2	;volatile
  2061     0046                     i1l1165:
  2062                           
  2063                           ;main.c: 141:  if(PIR1bits.ADIF == 1)
  2064     0046  1F11               	btfss	17,6	;volatile
  2065     0047  2849               	goto	u73_21
  2066     0048  284A               	goto	u73_20
  2067     0049                     u73_21:
  2068     0049  28E1               	goto	i1l105
  2069     004A                     u73_20:
  2070     004A                     i1l1167:
  2071                           
  2072                           ;main.c: 142:  {;main.c: 143:   PIE1bits.ADIE = 0;
  2073     004A  0021               	movlb	1	; select bank1
  2074     004B  1311               	bcf	17,6	;volatile
  2075                           
  2076                           ;main.c: 144:   PIR1bits.ADIF = 0;
  2077     004C  0020               	movlb	0	; select bank0
  2078     004D  1311               	bcf	17,6	;volatile
  2079     004E                     i1l1169:
  2080                           
  2081                           ;main.c: 145:   char i;;main.c: 146:   for(i = 0; i < 80; i++)
  2082     004E  01F5               	clrf	ISR@i
  2083     004F                     i1l1175:
  2084                           
  2085                           ;main.c: 147:   {;main.c: 148:    if((unsigned int)Rt >= TABLE[i])
  2086     004F  0875               	movf	ISR@i,w
  2087     0050  00F0               	movwf	??_ISR
  2088     0051  01F1               	clrf	??_ISR+1
  2089     0052  35F0               	lslf	??_ISR,f
  2090     0053  0DF1               	rlf	??_ISR+1,f
  2091     0054  303F               	movlw	low _TABLE
  2092     0055  0770               	addwf	??_ISR,w
  2093     0056  0084               	movwf	4
  2094     0057  3002               	movlw	high _TABLE
  2095     0058  3D71               	addwfc	??_ISR+1,w
  2096     0059  3880               	iorlw	128
  2097     005A  0085               	movwf	5
  2098     005B  3F00               	moviw [0]fsr0
  2099     005C  00F2               	movwf	??_ISR+2
  2100     005D  3F01               	moviw [1]fsr0
  2101     005E  00F3               	movwf	??_ISR+3
  2102     005F  0873               	movf	??_ISR+3,w
  2103     0060  0248               	subwf	_Rt+1,w
  2104     0061  1D03               	skipz
  2105     0062  2865               	goto	u74_25
  2106     0063  0872               	movf	??_ISR+2,w
  2107     0064  0247               	subwf	_Rt,w
  2108     0065                     u74_25:
  2109     0065  1C03               	skipc
  2110     0066  2868               	goto	u74_21
  2111     0067  2869               	goto	u74_20
  2112     0068                     u74_21:
  2113     0068  2871               	goto	i1l1179
  2114     0069                     u74_20:
  2115     0069                     i1l1177:
  2116                           
  2117                           ;main.c: 149:    {;main.c: 150:     v = i;
  2118     0069  0875               	movf	ISR@i,w
  2119     006A  00F0               	movwf	??_ISR
  2120     006B  01F1               	clrf	??_ISR+1
  2121     006C  0870               	movf	??_ISR,w
  2122     006D  00D1               	movwf	_v
  2123     006E  0871               	movf	??_ISR+1,w
  2124     006F  00D2               	movwf	_v+1
  2125                           
  2126                           ;main.c: 151:     break;
  2127     0070  287B               	goto	i1l1183
  2128     0071                     i1l1179:
  2129                           
  2130                           ;main.c: 153:   }
  2131     0071  3001               	movlw	1
  2132     0072  00F0               	movwf	??_ISR
  2133     0073  0870               	movf	??_ISR,w
  2134     0074  07F5               	addwf	ISR@i,f
  2135     0075                     i1l1181:
  2136     0075  3050               	movlw	80
  2137     0076  0275               	subwf	ISR@i,w
  2138     0077  1C03               	skipc
  2139     0078  287A               	goto	u75_21
  2140     0079  287B               	goto	u75_20
  2141     007A                     u75_21:
  2142     007A  284F               	goto	i1l1175
  2143     007B                     u75_20:
  2144     007B                     i1l1183:
  2145                           
  2146                           ;main.c: 179:   if (timerActive)
  2147     007B  087A               	movf	_timerActive,w
  2148     007C  1903               	btfsc	3,2
  2149     007D  287F               	goto	u76_21
  2150     007E  2880               	goto	u76_20
  2151     007F                     u76_21:
  2152     007F  28DF               	goto	i1l96
  2153     0080                     u76_20:
  2154     0080                     i1l1185:
  2155                           
  2156                           ;main.c: 180:   {;main.c: 181:             if((r < 100 || r > 900) && (v <= (t - 2)))
  2157     0080  3000               	movlw	0
  2158     0081  0250               	subwf	_r+1,w
  2159     0082  3064               	movlw	100
  2160     0083  1903               	skipnz
  2161     0084  024F               	subwf	_r,w
  2162     0085  1C03               	skipc
  2163     0086  2888               	goto	u77_21
  2164     0087  2889               	goto	u77_20
  2165     0088                     u77_21:
  2166     0088  2892               	goto	i1l1189
  2167     0089                     u77_20:
  2168     0089                     i1l1187:
  2169     0089  3003               	movlw	3
  2170     008A  0250               	subwf	_r+1,w
  2171     008B  3085               	movlw	133
  2172     008C  1903               	skipnz
  2173     008D  024F               	subwf	_r,w
  2174     008E  1C03               	skipc
  2175     008F  2891               	goto	u78_21
  2176     0090  2892               	goto	u78_20
  2177     0091                     u78_21:
  2178     0091  28AB               	goto	i1l1193
  2179     0092                     u78_20:
  2180     0092                     i1l1189:
  2181     0092  0853               	movf	_t,w
  2182     0093  3EFE               	addlw	254
  2183     0094  00F0               	movwf	??_ISR
  2184     0095  30FF               	movlw	255
  2185     0096  3D54               	addwfc	_t+1,w
  2186     0097  00F1               	movwf	??_ISR+1
  2187     0098  0871               	movf	??_ISR+1,w
  2188     0099  3A80               	xorlw	128
  2189     009A  00F2               	movwf	??_ISR+2
  2190     009B  0852               	movf	_v+1,w
  2191     009C  3A80               	xorlw	128
  2192     009D  0272               	subwf	??_ISR+2,w
  2193     009E  1D03               	skipz
  2194     009F  28A2               	goto	u79_25
  2195     00A0  0851               	movf	_v,w
  2196     00A1  0270               	subwf	??_ISR,w
  2197     00A2                     u79_25:
  2198     00A2  1C03               	skipc
  2199     00A3  28A5               	goto	u79_21
  2200     00A4  28A6               	goto	u79_20
  2201     00A5                     u79_21:
  2202     00A5  28AB               	goto	i1l1193
  2203     00A6                     u79_20:
  2204     00A6                     i1l1191:
  2205                           
  2206                           ;main.c: 182:    {;main.c: 183:                 timerCounter++;
  2207     00A6  3001               	movlw	1
  2208     00A7  07F6               	addwf	_timerCounter,f
  2209     00A8  3000               	movlw	0
  2210     00A9  3DF7               	addwfc	_timerCounter+1,f
  2211                           
  2212                           ;main.c: 184:             }else
  2213     00AA  28AE               	goto	i1l1195
  2214     00AB                     i1l1193:
  2215                           
  2216                           ;main.c: 185:    {;main.c: 186:                 timerCounter = 0;
  2217     00AB  01F6               	clrf	_timerCounter
  2218     00AC  01F7               	clrf	_timerCounter+1
  2219                           
  2220                           ;main.c: 187:     timerActive = 0;
  2221     00AD  01FA               	clrf	_timerActive
  2222     00AE                     i1l1195:
  2223                           
  2224                           ;main.c: 190:             if(timerCounter >= 5)
  2225     00AE  3000               	movlw	0
  2226     00AF  0277               	subwf	_timerCounter+1,w
  2227     00B0  3005               	movlw	5
  2228     00B1  1903               	skipnz
  2229     00B2  0276               	subwf	_timerCounter,w
  2230     00B3  1C03               	skipc
  2231     00B4  28B6               	goto	u80_21
  2232     00B5  28B7               	goto	u80_20
  2233     00B6                     u80_21:
  2234     00B6  28DF               	goto	i1l96
  2235     00B7                     u80_20:
  2236     00B7                     i1l1197:
  2237                           
  2238                           ;main.c: 191:    {;main.c: 192:     PORTAbits.RA4 = 0;
  2239     00B7  0020               	movlb	0	; select bank0
  2240     00B8  120C               	bcf	12,4	;volatile
  2241                           
  2242                           ;main.c: 193:     T2CONbits.TMR2ON = 0;
  2243     00B9  111C               	bcf	28,2	;volatile
  2244                           
  2245                           ;main.c: 194:     PIE1bits.TMR2IE = 0;
  2246     00BA  0021               	movlb	1	; select bank1
  2247     00BB  1091               	bcf	17,1	;volatile
  2248     00BC                     i1l1199:
  2249                           
  2250                           ;main.c: 195:     CCPR1L = 0;
  2251     00BC  0025               	movlb	5	; select bank5
  2252     00BD  0191               	clrf	17	;volatile
  2253                           
  2254                           ;main.c: 196:     CCP1CON = 0;
  2255     00BE  0193               	clrf	19	;volatile
  2256     00BF                     i1l1201:
  2257                           
  2258                           ;main.c: 197:     TRISAbits.TRISA5 = 0;
  2259     00BF  0021               	movlb	1	; select bank1
  2260     00C0  128C               	bcf	12,5	;volatile
  2261     00C1                     i1l1203:
  2262                           
  2263                           ;main.c: 198:     ADCON0bits.ADON = 0;
  2264     00C1  101D               	bcf	29,0	;volatile
  2265     00C2                     i1l1205:
  2266                           
  2267                           ;main.c: 200:     {;main.c: 201:      PORTAbits.RA5 = 0;
  2268     00C2  0020               	movlb	0	; select bank0
  2269     00C3  128C               	bcf	12,5	;volatile
  2270     00C4                     i1l1207:
  2271                           
  2272                           ;main.c: 202:      _delay((unsigned long)((100)*(32000000/4000.0)));
  2273     00C4  3005               	movlw	5
  2274     00C5  00F1               	movwf	??_ISR+1
  2275     00C6  300F               	movlw	15
  2276     00C7  00F0               	movwf	??_ISR
  2277     00C8  30F1               	movlw	241
  2278     00C9                     u109_27:
  2279     00C9  0B89               	decfsz	9,f
  2280     00CA  28C9               	goto	u109_27
  2281     00CB  0BF0               	decfsz	??_ISR,f
  2282     00CC  28C9               	goto	u109_27
  2283     00CD  0BF1               	decfsz	??_ISR+1,f
  2284     00CE  28C9               	goto	u109_27
  2285     00CF  0000               	nop
  2286     00D0                     i1l1209:
  2287                           
  2288                           ;main.c: 203:      PORTAbits.RA5 = 1;
  2289     00D0  0020               	movlb	0	; select bank0
  2290     00D1  168C               	bsf	12,5	;volatile
  2291     00D2                     i1l1211:
  2292                           
  2293                           ;main.c: 204:      _delay((unsigned long)((100)*(32000000/4000.0)));
  2294     00D2  3005               	movlw	5
  2295     00D3  00F1               	movwf	??_ISR+1
  2296     00D4  300F               	movlw	15
  2297     00D5  00F0               	movwf	??_ISR
  2298     00D6  30F1               	movlw	241
  2299     00D7                     u110_27:
  2300     00D7  0B89               	decfsz	9,f
  2301     00D8  28D7               	goto	u110_27
  2302     00D9  0BF0               	decfsz	??_ISR,f
  2303     00DA  28D7               	goto	u110_27
  2304     00DB  0BF1               	decfsz	??_ISR+1,f
  2305     00DC  28D7               	goto	u110_27
  2306     00DD  0000               	nop
  2307     00DE  28C2               	goto	i1l1205
  2308     00DF                     i1l96:	
  2309                           ;main.c: 207:         }
  2310                           
  2311                           
  2312                           ;main.c: 208:   PIE1bits.ADIE = 1;
  2313     00DF  0021               	movlb	1	; select bank1
  2314     00E0  1711               	bsf	17,6	;volatile
  2315     00E1                     i1l105:
  2316     00E1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2317     00E2  0009               	retfie
  2318     00E3                     __end_of_ISR:
  2319     007E                     btemp	set	126	;btemp
  2320     007E                     int$flags	set	126
  2321     007E                     wtemp0	set	126
  2322                           
  2323                           	psect	config
  2324                           
  2325                           ;Config register CONFIG1 @ 0x8007
  2326                           ;	Oscillator Selection
  2327                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2328                           ;	Watchdog Timer Enable
  2329                           ;	WDTE = OFF, WDT disabled
  2330                           ;	Power-up Timer Enable
  2331                           ;	PWRTE = OFF, PWRT disabled
  2332                           ;	MCLR Pin Function Select
  2333                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2334                           ;	Flash Program Memory Code Protection
  2335                           ;	CP = OFF, Program memory code protection is disabled
  2336                           ;	Data Memory Code Protection
  2337                           ;	CPD = OFF, Data memory code protection is disabled
  2338                           ;	Brown-out Reset Enable
  2339                           ;	BOREN = ON, Brown-out Reset enabled
  2340                           ;	Clock Out Enable
  2341                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2342                           ;	Internal/External Switchover
  2343                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2344                           ;	Fail-Safe Clock Monitor Enable
  2345                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2346     8007                     	org	32775
  2347     8007  2FE4               	dw	12260
  2348                           
  2349                           ;Config register CONFIG2 @ 0x8008
  2350                           ;	Flash Memory Self-Write Protection
  2351                           ;	WRT = OFF, Write protection off
  2352                           ;	PLL Enable
  2353                           ;	PLLEN = ON, 4x PLL enabled
  2354                           ;	Stack Overflow/Underflow Reset Enable
  2355                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2356                           ;	Brown-out Reset Voltage Selection
  2357                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2358                           ;	In-Circuit Debugger Mode
  2359                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  2360                           ;	Low-Voltage Programming Enable
  2361                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2362     8008                     	org	32776
  2363     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     35      53
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1403
                                             26 BANK0      9     9      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                             ___wmul
                        _getADCValue
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADCValue                                         10     8      2      31
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0     136
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
   _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      40       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      40      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 01 17:29:48 2023

                      _r 004F                        _t 0053                        _v 0051  
                      _y 0078                       l65 0212                       l74 0353  
                     l77 0374                       _Rt 0047      ___wmul@multiplicand 0022  
                    l301 03A8                      l134 03DD                      l137 03F2  
                    l323 0339                      l287 03B4                      l289 03C8  
                    _PR2 001B                      _ISR 0004                      u810 0357  
                    u811 0356                      u900 03A0                      u901 039F  
                    u910 02F0                      u830 03B0                      u911 02EF  
                    u831 03AF                      u825 035B                      u930 0302  
                    u931 0301                      u860 03C4                      u925 02F4  
                    u861 03C3                      u845 03B5                      u950 031B  
                    u870 0382                      u951 031A                      u871 0381  
                    u855 03BA                      u945 0303                      u970 0331  
                    u971 0330                      u955 0317                      u980 011B  
                    u965 0325                      u885 038B                      u981 011A  
                    u990 015F                      u895 0392                      u995 015B  
                    _ad1 0043                      _ad2 004D                      _ad3 004B  
                    wreg 0009                     ?_ISR 0070                     ISR@i 0075  
                   ISR@p 0074                     l1301 031B                     l1221 03D2  
                   l1213 03C9                     l1303 0323                     l1231 03DC  
                   l1223 03D3                     l1215 03CC                     l1241 03EA  
                   l1233 03DE                     l1305 0324                     l1225 03D7  
                   l1217 03CE                     l1321 0104                     l1313 00F6  
                   l1243 03EB                     l1235 03E2                     l1307 032B  
                   l1251 033C                     l1227 03D8                     l1219 03D0  
                   l1331 0126                     l1323 0111                     l1315 00F9  
                   l1245 03EC                     l1237 03E5                     l1309 0331  
                   l1261 03A9                     l1253 0348                     l1229 03DA  
                   l1341 01B4                     l1333 013E                     l1325 0113  
                   l1317 00FC                     l1247 03EE                     l1239 03E8  
                   l1271 03C4                     l1263 03AC                     l1255 0351  
                   l1351 01E6                     l1335 0169                     l1327 0115  
                   l1319 00FF                     l1249 03F0                     l1281 038A  
                   l1265 03B0                     l1257 0357                     l1353 01FA  
                   l1361 0219                     l1345 01D7                     l1337 01A9  
                   l1329 011B                     l1291 02F0                     l1283 0391  
                   l1275 0375                     l1267 03B9                     l1363 0228  
                   l1355 01FC                     l1347 01E0                     l1339 01AE  
                   l1293 02F3                     l1285 03A0                     l1277 037E  
                   l1269 03BE                     l1365 022A                     l1357 0209  
                   l1349 01E4                     l1295 02FE                     l1279 0382  
                   l1367 022F                     l1359 0215                     l1297 0302  
                   l1289 02DF                     l1299 0309                     u1000 01B4  
                   u1001 01B3                     u1020 01FA                     u1021 01F9  
                   u1030 0209                     u1031 0208                     u1015 01CE  
                   u1040 0212                     u1041 0211                     u1025 01F6  
                   u1050 0228                     u1051 0227                     u1055 0224  
                   u1067 010A                     u1077 0235                     u1087 034C  
                   i1l96 00DF                     _main 00F6                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 00E3          __end_of_PWMinit 03F3                    ??_ISR 0070  
                  ?_main 0070          __end_of___lldiv 033A                    i1l105 00E1  
                  _TABLE 023F                    u70_20 002B                    u70_21 002A  
                  u71_20 0035                    u71_21 0034                    u80_20 00B7  
                  u72_20 003E                    u80_21 00B6                    u72_21 003D  
                  u73_20 004A                    u73_21 0049                    u74_20 0069  
                  u66_20 000B                    u74_21 0068                    u66_21 000A  
                  u74_25 0065                    u75_20 007B                    u67_20 0016  
                  u75_21 007A                    u67_21 0015                    u76_20 0080  
                  u68_20 001D                    u76_21 007F                    u68_21 001C  
                  u77_20 0089                    u69_20 0024                    u77_21 0088  
                  u69_21 0023                    u78_20 0092                    u78_21 0091  
                  u79_20 00A6                    u79_21 00A5                    u79_25 00A2  
    ___lmul@multiplicand 0024                    _setup 03C9                    status 0003  
                  wtemp0 007E          __initialization 00E5             __end_of_main 023F  
                 ??_main 003A                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   _CCPR1L 0291                   ?_setup 0070  
                 i1l1201 00BF                   i1l1211 00D2                   i1l1203 00C1  
                 i1l1205 00C2                   i1l1141 0016                   u110_27 00D7  
                 i1l1207 00C4                   i1l1151 002B                   i1l1143 001D  
                 i1l1135 0006                   i1l1209 00D0                   i1l1161 0042  
                 i1l1153 0030                   i1l1145 001F                   i1l1137 000B  
                 i1l1163 0044                   i1l1155 0035                   i1l1147 0024  
                 i1l1139 0010                   i1l1181 0075                   i1l1149 0026  
                 i1l1157 0038                   i1l1165 0046                   i1l1191 00A6  
                 i1l1183 007B                   i1l1175 004F                   i1l1167 004A  
                 i1l1159 003E                   i1l1193 00AB                   i1l1185 0080  
                 i1l1177 0069                   i1l1169 004E                   i1l1195 00AE  
                 i1l1187 0089                   i1l1179 0071                   i1l1197 00B7  
                 i1l1189 0092                   i1l1199 00BC                ??_PWMinit 0020  
                 u109_27 00C9                   _OSCCON 0099                   ___lmul 0375  
                 ___wmul 03A9                ??___lldiv 0034                   main@VR 003E  
__end_of__initialization 00F2       getADCValue@channel 0029            __end_of_TABLE 02DF  
         __pcstackCOMMON 0070            __end_of_setup 03DE                  ??_setup 0020  
             __pbssBANK0 0043               __pmaintext 00F6                  ?___lmul 0020  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0293  
         ___lmul@product 0028                  _PWMinit 03DE            ??_getADCValue 0022  
                ___lldiv 02DF                  __ptext1 03C9                  __ptext2 033A  
                __ptext3 03A9                  __ptext4 0375                  __ptext5 02DF  
                __ptext6 03DE                _T2CONbits 001C                  main@add 0042  
                clrloop0 03F4     end_of_initialization 00F2          ___lldiv@divisor 002C  
        ___lldiv@counter 0039      __end_of_getADCValue 0375                _PORTAbits 000C  
              _TRISAbits 008C              _CCP1CONbits 0293           __end_of___lmul 03A9  
         __end_of___wmul 03C9      start_initialization 00E5              __end_of_ISR 00E3  
            _getADCValue 033A                 ??___lmul 0028                 ??___wmul 0024  
            __pbssCOMMON 0076                ___latbits 0001            __pcstackBANK0 0020  
               ?_PWMinit 0070                 ?___lldiv 002C           ___wmul@product 0024  
              clear_ram0 03F3                 _PIE1bits 0091                 _PIR1bits 0011  
             _ADCON0bits 009D        ___wmul@multiplier 0020        ___lmul@multiplier 0020  
             _APFCONbits 011D               _ANSELAbits 018C             ?_getADCValue 0020  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
           _timerCounter 0076         ___lldiv@dividend 0030            __pstringtext1 023F  
            _timerActive 007A         ___lldiv@quotient 0035  
