

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 02 16:29:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12LF1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 07/09/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC12LF1840 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     008C                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0097                     	;# 
    88     0098                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     010C                     	;# 
    97     0111                     	;# 
    98     0112                     	;# 
    99     0115                     	;# 
   100     0116                     	;# 
   101     0117                     	;# 
   102     0118                     	;# 
   103     0119                     	;# 
   104     011A                     	;# 
   105     011B                     	;# 
   106     011D                     	;# 
   107     011D                     	;# 
   108     018C                     	;# 
   109     0191                     	;# 
   110     0191                     	;# 
   111     0192                     	;# 
   112     0193                     	;# 
   113     0193                     	;# 
   114     0193                     	;# 
   115     0194                     	;# 
   116     0195                     	;# 
   117     0196                     	;# 
   118     0199                     	;# 
   119     019A                     	;# 
   120     019B                     	;# 
   121     019B                     	;# 
   122     019B                     	;# 
   123     019B                     	;# 
   124     019C                     	;# 
   125     019C                     	;# 
   126     019D                     	;# 
   127     019E                     	;# 
   128     019F                     	;# 
   129     020C                     	;# 
   130     0211                     	;# 
   131     0211                     	;# 
   132     0212                     	;# 
   133     0212                     	;# 
   134     0213                     	;# 
   135     0213                     	;# 
   136     0214                     	;# 
   137     0214                     	;# 
   138     0215                     	;# 
   139     0215                     	;# 
   140     0215                     	;# 
   141     0216                     	;# 
   142     0216                     	;# 
   143     0217                     	;# 
   144     0217                     	;# 
   145     0291                     	;# 
   146     0291                     	;# 
   147     0292                     	;# 
   148     0293                     	;# 
   149     0294                     	;# 
   150     0295                     	;# 
   151     0295                     	;# 
   152     0296                     	;# 
   153     0391                     	;# 
   154     0392                     	;# 
   155     0393                     	;# 
   156     039A                     	;# 
   157     039C                     	;# 
   158     039D                     	;# 
   159     039E                     	;# 
   160     039F                     	;# 
   161     0FE4                     	;# 
   162     0FE5                     	;# 
   163     0FE6                     	;# 
   164     0FE7                     	;# 
   165     0FE8                     	;# 
   166     0FE9                     	;# 
   167     0FEA                     	;# 
   168     0FEB                     	;# 
   169     0FED                     	;# 
   170     0FEE                     	;# 
   171     0FEF                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0015                     	;# 
   188     0016                     	;# 
   189     0016                     	;# 
   190     0017                     	;# 
   191     0018                     	;# 
   192     0019                     	;# 
   193     001A                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001E                     	;# 
   197     001F                     	;# 
   198     008C                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     010C                     	;# 
   213     0111                     	;# 
   214     0112                     	;# 
   215     0115                     	;# 
   216     0116                     	;# 
   217     0117                     	;# 
   218     0118                     	;# 
   219     0119                     	;# 
   220     011A                     	;# 
   221     011B                     	;# 
   222     011D                     	;# 
   223     011D                     	;# 
   224     018C                     	;# 
   225     0191                     	;# 
   226     0191                     	;# 
   227     0192                     	;# 
   228     0193                     	;# 
   229     0193                     	;# 
   230     0193                     	;# 
   231     0194                     	;# 
   232     0195                     	;# 
   233     0196                     	;# 
   234     0199                     	;# 
   235     019A                     	;# 
   236     019B                     	;# 
   237     019B                     	;# 
   238     019B                     	;# 
   239     019B                     	;# 
   240     019C                     	;# 
   241     019C                     	;# 
   242     019D                     	;# 
   243     019E                     	;# 
   244     019F                     	;# 
   245     020C                     	;# 
   246     0211                     	;# 
   247     0211                     	;# 
   248     0212                     	;# 
   249     0212                     	;# 
   250     0213                     	;# 
   251     0213                     	;# 
   252     0214                     	;# 
   253     0214                     	;# 
   254     0215                     	;# 
   255     0215                     	;# 
   256     0215                     	;# 
   257     0216                     	;# 
   258     0216                     	;# 
   259     0217                     	;# 
   260     0217                     	;# 
   261     0291                     	;# 
   262     0291                     	;# 
   263     0292                     	;# 
   264     0293                     	;# 
   265     0294                     	;# 
   266     0295                     	;# 
   267     0295                     	;# 
   268     0296                     	;# 
   269     0391                     	;# 
   270     0392                     	;# 
   271     0393                     	;# 
   272     039A                     	;# 
   273     039C                     	;# 
   274     039D                     	;# 
   275     039E                     	;# 
   276     039F                     	;# 
   277     0FE4                     	;# 
   278     0FE5                     	;# 
   279     0FE6                     	;# 
   280     0FE7                     	;# 
   281     0FE8                     	;# 
   282     0FE9                     	;# 
   283     0FEA                     	;# 
   284     0FEB                     	;# 
   285     0FED                     	;# 
   286     0FEE                     	;# 
   287     0FEF                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     0008                     	;# 
   297     0009                     	;# 
   298     000A                     	;# 
   299     000B                     	;# 
   300     000C                     	;# 
   301     0011                     	;# 
   302     0012                     	;# 
   303     0015                     	;# 
   304     0016                     	;# 
   305     0016                     	;# 
   306     0017                     	;# 
   307     0018                     	;# 
   308     0019                     	;# 
   309     001A                     	;# 
   310     001B                     	;# 
   311     001C                     	;# 
   312     001E                     	;# 
   313     001F                     	;# 
   314     008C                     	;# 
   315     0091                     	;# 
   316     0092                     	;# 
   317     0095                     	;# 
   318     0096                     	;# 
   319     0097                     	;# 
   320     0098                     	;# 
   321     0099                     	;# 
   322     009A                     	;# 
   323     009B                     	;# 
   324     009B                     	;# 
   325     009C                     	;# 
   326     009D                     	;# 
   327     009E                     	;# 
   328     010C                     	;# 
   329     0111                     	;# 
   330     0112                     	;# 
   331     0115                     	;# 
   332     0116                     	;# 
   333     0117                     	;# 
   334     0118                     	;# 
   335     0119                     	;# 
   336     011A                     	;# 
   337     011B                     	;# 
   338     011D                     	;# 
   339     011D                     	;# 
   340     018C                     	;# 
   341     0191                     	;# 
   342     0191                     	;# 
   343     0192                     	;# 
   344     0193                     	;# 
   345     0193                     	;# 
   346     0193                     	;# 
   347     0194                     	;# 
   348     0195                     	;# 
   349     0196                     	;# 
   350     0199                     	;# 
   351     019A                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019C                     	;# 
   357     019C                     	;# 
   358     019D                     	;# 
   359     019E                     	;# 
   360     019F                     	;# 
   361     020C                     	;# 
   362     0211                     	;# 
   363     0211                     	;# 
   364     0212                     	;# 
   365     0212                     	;# 
   366     0213                     	;# 
   367     0213                     	;# 
   368     0214                     	;# 
   369     0214                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0215                     	;# 
   373     0216                     	;# 
   374     0216                     	;# 
   375     0217                     	;# 
   376     0217                     	;# 
   377     0291                     	;# 
   378     0291                     	;# 
   379     0292                     	;# 
   380     0293                     	;# 
   381     0294                     	;# 
   382     0295                     	;# 
   383     0295                     	;# 
   384     0296                     	;# 
   385     0391                     	;# 
   386     0392                     	;# 
   387     0393                     	;# 
   388     039A                     	;# 
   389     039C                     	;# 
   390     039D                     	;# 
   391     039E                     	;# 
   392     039F                     	;# 
   393     0FE4                     	;# 
   394     0FE5                     	;# 
   395     0FE6                     	;# 
   396     0FE7                     	;# 
   397     0FE8                     	;# 
   398     0FE9                     	;# 
   399     0FEA                     	;# 
   400     0FEB                     	;# 
   401     0FED                     	;# 
   402     0FEE                     	;# 
   403     0FEF                     	;# 
   404                           
   405                           	psect	stringtext1
   406     0234                     __pstringtext1:
   407     0234                     _TABLE:
   408     0234  34F0               	retlw	240
   409     0235  3425               	retlw	37
   410     0236  34CE               	retlw	206
   411     0237  3423               	retlw	35
   412     0238  34CE               	retlw	206
   413     0239  3421               	retlw	33
   414     023A  34EC               	retlw	236
   415     023B  341F               	retlw	31
   416     023C  342A               	retlw	42
   417     023D  341E               	retlw	30
   418     023E  3482               	retlw	130
   419     023F  341C               	retlw	28
   420     0240  34F4               	retlw	244
   421     0241  341A               	retlw	26
   422     0242  347E               	retlw	126
   423     0243  3419               	retlw	25
   424     0244  3420               	retlw	32
   425     0245  3418               	retlw	24
   426     0246  349E               	retlw	158
   427     0247  3415               	retlw	21
   428     0248  347A               	retlw	122
   429     0249  3414               	retlw	20
   430     024A  3466               	retlw	102
   431     024B  3413               	retlw	19
   432     024C  3464               	retlw	100
   433     024D  3412               	retlw	18
   434     024E  3470               	retlw	112
   435     024F  3411               	retlw	17
   436     0250  348A               	retlw	138
   437     0251  3410               	retlw	16
   438     0252  34B0               	retlw	176
   439     0253  340F               	retlw	15
   440     0254  34E4               	retlw	228
   441     0255  340E               	retlw	14
   442     0256  3424               	retlw	36
   443     0257  340E               	retlw	14
   444     0258  346E               	retlw	110
   445     0259  340D               	retlw	13
   446     025A  34C2               	retlw	194
   447     025B  340C               	retlw	12
   448     025C  3420               	retlw	32
   449     025D  340C               	retlw	12
   450     025E  3486               	retlw	134
   451     025F  340B               	retlw	11
   452     0260  34F6               	retlw	246
   453     0261  340A               	retlw	10
   454     0262  346C               	retlw	108
   455     0263  340A               	retlw	10
   456     0264  34EC               	retlw	236
   457     0265  3409               	retlw	9
   458     0266  3472               	retlw	114
   459     0267  3409               	retlw	9
   460     0268  34FE               	retlw	254
   461     0269  3408               	retlw	8
   462     026A  3490               	retlw	144
   463     026B  3408               	retlw	8
   464     026C  3428               	retlw	40
   465     026D  3408               	retlw	8
   466     026E  34C6               	retlw	198
   467     026F  3407               	retlw	7
   468     0270  3469               	retlw	105
   469     0271  3407               	retlw	7
   470     0272  3411               	retlw	17
   471     0273  3407               	retlw	7
   472     0274  34BE               	retlw	190
   473     0275  3406               	retlw	6
   474     0276  346E               	retlw	110
   475     0277  3406               	retlw	6
   476     0278  3423               	retlw	35
   477     0279  3406               	retlw	6
   478     027A  34DC               	retlw	220
   479     027B  3405               	retlw	5
   480     027C  3498               	retlw	152
   481     027D  3405               	retlw	5
   482     027E  3458               	retlw	88
   483     027F  3405               	retlw	5
   484     0280  341B               	retlw	27
   485     0281  3405               	retlw	5
   486     0282  34E1               	retlw	225
   487     0283  3404               	retlw	4
   488     0284  34AA               	retlw	170
   489     0285  3404               	retlw	4
   490     0286  3476               	retlw	118
   491     0287  3404               	retlw	4
   492     0288  3444               	retlw	68
   493     0289  3404               	retlw	4
   494     028A  3415               	retlw	21
   495     028B  3404               	retlw	4
   496     028C  34E8               	retlw	232
   497     028D  3403               	retlw	3
   498     028E  34BD               	retlw	189
   499     028F  3403               	retlw	3
   500     0290  3494               	retlw	148
   501     0291  3403               	retlw	3
   502     0292  346D               	retlw	109
   503     0293  3403               	retlw	3
   504     0294  3448               	retlw	72
   505     0295  3403               	retlw	3
   506     0296  3425               	retlw	37
   507     0297  3403               	retlw	3
   508     0298  3404               	retlw	4
   509     0299  3403               	retlw	3
   510     029A  34E4               	retlw	228
   511     029B  3402               	retlw	2
   512     029C  34C5               	retlw	197
   513     029D  3402               	retlw	2
   514     029E  34A8               	retlw	168
   515     029F  3402               	retlw	2
   516     02A0  348D               	retlw	141
   517     02A1  3402               	retlw	2
   518     02A2  3472               	retlw	114
   519     02A3  3402               	retlw	2
   520     02A4  3459               	retlw	89
   521     02A5  3402               	retlw	2
   522     02A6  3441               	retlw	65
   523     02A7  3402               	retlw	2
   524     02A8  342A               	retlw	42
   525     02A9  3402               	retlw	2
   526     02AA  3414               	retlw	20
   527     02AB  3402               	retlw	2
   528     02AC  34FF               	retlw	255
   529     02AD  3401               	retlw	1
   530     02AE  34EB               	retlw	235
   531     02AF  3401               	retlw	1
   532     02B0  34D8               	retlw	216
   533     02B1  3401               	retlw	1
   534     02B2  34C6               	retlw	198
   535     02B3  3401               	retlw	1
   536     02B4  34B4               	retlw	180
   537     02B5  3401               	retlw	1
   538     02B6  34A4               	retlw	164
   539     02B7  3401               	retlw	1
   540     02B8  3494               	retlw	148
   541     02B9  3401               	retlw	1
   542     02BA  3484               	retlw	132
   543     02BB  3401               	retlw	1
   544     02BC  3476               	retlw	118
   545     02BD  3401               	retlw	1
   546     02BE  3468               	retlw	104
   547     02BF  3401               	retlw	1
   548     02C0  345A               	retlw	90
   549     02C1  3401               	retlw	1
   550     02C2  344E               	retlw	78
   551     02C3  3401               	retlw	1
   552     02C4  3441               	retlw	65
   553     02C5  3401               	retlw	1
   554     02C6  3435               	retlw	53
   555     02C7  3401               	retlw	1
   556     02C8  342A               	retlw	42
   557     02C9  3401               	retlw	1
   558     02CA  341F               	retlw	31
   559     02CB  3401               	retlw	1
   560     02CC  3415               	retlw	21
   561     02CD  3401               	retlw	1
   562     02CE  340B               	retlw	11
   563     02CF  3401               	retlw	1
   564     02D0  3402               	retlw	2
   565     02D1  3401               	retlw	1
   566     02D2  34F8               	retlw	248
   567     02D3  3400               	retlw	0
   568     02D4                     __end_of_TABLE:
   569     000B                     _INTCONbits	set	11
   570     001B                     _PR2	set	27
   571     0011                     _PIR1bits	set	17
   572     000C                     _PORTAbits	set	12
   573     001C                     _T2CONbits	set	28
   574     009E                     _ADCON1	set	158
   575     0099                     _OSCCON	set	153
   576     0091                     _PIE1bits	set	145
   577     009B                     _ADRESL	set	155
   578     009C                     _ADRESH	set	156
   579     009D                     _ADCON0bits	set	157
   580     008C                     _TRISAbits	set	140
   581     011D                     _APFCONbits	set	285
   582     018C                     _ANSELAbits	set	396
   583     0293                     _CCP1CONbits	set	659
   584     0293                     _CCP1CON	set	659
   585     0291                     _CCPR1L	set	657
   586                           
   587                           	psect	cinit
   588     00DE                     start_initialization:	
   589                           ; #config settings
   590                           
   591     00DE                     __initialization:
   592                           
   593                           ; Clear objects allocated to COMMON
   594     00DE  01F6               	clrf	__pbssCOMMON& (0+127)
   595     00DF  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   596     00E0  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   597     00E1  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   598     00E2  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601     00E3  3043               	movlw	low __pbssBANK0
   602     00E4  0084               	movwf	4
   603     00E5  3000               	movlw	high __pbssBANK0
   604     00E6  0085               	movwf	5
   605     00E7  3012               	movlw	18
   606     00E8  3183  23E8  3180   	fcall	clear_ram0
   607     00EB                     end_of_initialization:	
   608                           ;End of C runtime variable initialization code
   609                           
   610     00EB                     __end_of__initialization:
   611     00EB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   612     00EC  0020               	movlb	0
   613     00ED  3180  28EF         	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMMON
   616     0076                     __pbssCOMMON:
   617     0076                     _timerCounter:
   618     0076                     	ds	2
   619     0078                     _y:
   620     0078                     	ds	2
   621     007A                     _timerActive:
   622     007A                     	ds	1
   623                           
   624                           	psect	bssBANK0
   625     0043                     __pbssBANK0:
   626     0043                     _ad1:
   627     0043                     	ds	4
   628     0047                     _Rt:
   629     0047                     	ds	4
   630     004B                     _ad3:
   631     004B                     	ds	2
   632     004D                     _ad2:
   633     004D                     	ds	2
   634     004F                     _r:
   635     004F                     	ds	2
   636     0051                     _v:
   637     0051                     	ds	2
   638     0053                     _t:
   639     0053                     	ds	2
   640                           
   641                           	psect	clrtext
   642     03E8                     clear_ram0:	
   643                           ;	Called with FSR0 containing the base address, and
   644                           ;	WREG with the size to clear
   645                           
   646     03E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   647     03E9                     clrloop0:
   648     03E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   649     03EA  3101               	addfsr 0,1
   650     03EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   651     03EC  2BE9               	goto	clrloop0	;have we reached the end yet?
   652     03ED  3400               	retlw	0	;all done for this memory range, return
   653                           
   654                           	psect	cstackCOMMON
   655     0070                     __pcstackCOMMON:
   656     0070                     ?_setup:
   657     0070                     ?_PWMinit:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_ISR:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ??_ISR:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671     0070                     	ds	4
   672     0074                     ISR@p:
   673                           
   674                           ; 1 bytes @ 0x4
   675     0074                     	ds	1
   676     0075                     ISR@i:
   677                           
   678                           ; 1 bytes @ 0x5
   679     0075                     	ds	1
   680                           
   681                           	psect	cstackBANK0
   682     0020                     __pcstackBANK0:
   683     0020                     ??_setup:
   684     0020                     ??_PWMinit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0020                     ?_getADCValue:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0020                     ?___wmul:	
   691                           ; 2 bytes @ 0x0
   692                           
   693     0020                     ?___lmul:	
   694                           ; 2 bytes @ 0x0
   695                           
   696     0020                     ___wmul@multiplier:	
   697                           ; 4 bytes @ 0x0
   698                           
   699     0020                     ___lmul@multiplier:	
   700                           ; 2 bytes @ 0x0
   701                           
   702                           
   703                           ; 4 bytes @ 0x0
   704     0020                     	ds	2
   705     0022                     ??_getADCValue:
   706     0022                     ___wmul@multiplicand:	
   707                           ; 1 bytes @ 0x2
   708                           
   709                           
   710                           ; 2 bytes @ 0x2
   711     0022                     	ds	2
   712     0024                     ??___wmul:
   713     0024                     ___wmul@product:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0024                     ___lmul@multiplicand:	
   717                           ; 2 bytes @ 0x4
   718                           
   719                           
   720                           ; 4 bytes @ 0x4
   721     0024                     	ds	4
   722     0028                     ??___lmul:
   723     0028                     ___lmul@product:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 4 bytes @ 0x8
   728     0028                     	ds	1
   729     0029                     getADCValue@channel:
   730                           
   731                           ; 1 bytes @ 0x9
   732     0029                     	ds	3
   733     002C                     ?___lldiv:
   734     002C                     ___lldiv@divisor:	
   735                           ; 4 bytes @ 0xC
   736                           
   737                           
   738                           ; 4 bytes @ 0xC
   739     002C                     	ds	4
   740     0030                     ___lldiv@dividend:
   741                           
   742                           ; 4 bytes @ 0x10
   743     0030                     	ds	4
   744     0034                     ??___lldiv:
   745                           
   746                           ; 1 bytes @ 0x14
   747     0034                     	ds	1
   748     0035                     ___lldiv@quotient:
   749                           
   750                           ; 4 bytes @ 0x15
   751     0035                     	ds	4
   752     0039                     ___lldiv@counter:
   753                           
   754                           ; 1 bytes @ 0x19
   755     0039                     	ds	1
   756     003A                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x1A
   759     003A                     	ds	4
   760     003E                     main@VR:
   761                           
   762                           ; 4 bytes @ 0x1E
   763     003E                     	ds	4
   764     0042                     main@add:
   765                           
   766                           ; 1 bytes @ 0x22
   767     0042                     	ds	1
   768                           
   769                           	psect	maintext
   770     00EF                     __pmaintext:	
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 36 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  VR              4   30[BANK0 ] unsigned long 
   781 ;;  add             1   34[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : B1F/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   791 ;;      Params:         0       0       0       0
   792 ;;      Locals:         0       5       0       0
   793 ;;      Temps:          0       4       0       0
   794 ;;      Totals:         0       9       0       0
   795 ;;Total ram usage:        9 bytes
   796 ;; Hardware stack levels required when called: 2
   797 ;; This function calls:
   798 ;;		_PWMinit
   799 ;;		___lldiv
   800 ;;		___lmul
   801 ;;		___wmul
   802 ;;		_getADCValue
   803 ;;		_setup
   804 ;; This function is called by:
   805 ;;		Startup code after reset
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809     00EF                     _main:	
   810                           ;psect for function _main
   811                           
   812     00EF                     l1305:	
   813                           ;incstack = 0
   814                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   815                           
   816                           
   817                           ;main.c: 38:  timerActive = 0;
   818     00EF  01FA               	clrf	_timerActive
   819                           
   820                           ;main.c: 39:     timerCounter = 0;
   821     00F0  01F6               	clrf	_timerCounter
   822     00F1  01F7               	clrf	_timerCounter+1
   823     00F2                     l1307:
   824                           
   825                           ;main.c: 40:     char add = 1;
   826     00F2  0020               	movlb	0	; select bank0
   827     00F3  01C2               	clrf	main@add
   828     00F4  0AC2               	incf	main@add,f
   829     00F5                     l1309:
   830                           
   831                           ;main.c: 41:     setup();
   832     00F5  3183  23BE  3180   	fcall	_setup
   833     00F8                     l1311:
   834                           
   835                           ;main.c: 42:     PWMinit();
   836     00F8  3183  23D3  3180   	fcall	_PWMinit
   837     00FB                     l1313:
   838                           
   839                           ;main.c: 44:     _delay((unsigned long)((1000)*(32000000/4000.0)));
   840     00FB  3029               	movlw	41
   841     00FC  0020               	movlb	0	; select bank0
   842     00FD  00BB               	movwf	??_main+1
   843     00FE  3096               	movlw	150
   844     00FF  00BA               	movwf	??_main
   845     0100  307F               	movlw	127
   846     0101                     u1107:
   847     0101  0B89               	decfsz	9,f
   848     0102  2901               	goto	u1107
   849     0103  0BBA               	decfsz	??_main,f
   850     0104  2901               	goto	u1107
   851     0105  0BBB               	decfsz	??_main+1,f
   852     0106  2901               	goto	u1107
   853     0107                     l1315:
   854                           
   855                           ;main.c: 45:  T2CONbits.TMR2ON = 1;
   856     0107  0020               	movlb	0	; select bank0
   857     0108  151C               	bsf	28,2	;volatile
   858     0109                     l1317:
   859                           
   860                           ;main.c: 46:  TRISAbits.TRISA5 = 0;
   861     0109  0021               	movlb	1	; select bank1
   862     010A  128C               	bcf	12,5	;volatile
   863     010B                     l1319:
   864                           
   865                           ;main.c: 49:     {;main.c: 50:         if(add == 1)
   866     010B  0020               	movlb	0	; select bank0
   867     010C  0342               	decf	main@add,w
   868     010D  1D03               	btfss	3,2
   869     010E  2910               	goto	u1021
   870     010F  2911               	goto	u1020
   871     0110                     u1021:
   872     0110  29A4               	goto	l1331
   873     0111                     u1020:
   874     0111                     l1321:
   875                           
   876                           ;main.c: 51:         {;main.c: 52:             unsigned long VR;;main.c: 53:            
      +                           ad1 = getADCValue(0x00);
   877     0111  3000               	movlw	0
   878     0112  3183  232F  3180   	fcall	_getADCValue
   879     0115  0020               	movlb	0	; select bank0
   880     0116  0820               	movf	?_getADCValue,w
   881     0117  00C3               	movwf	_ad1
   882     0118  0821               	movf	?_getADCValue+1,w
   883     0119  00C4               	movwf	_ad1+1
   884     011A  01C5               	clrf	_ad1+2
   885     011B  01C6               	clrf	_ad1+3
   886     011C                     l1323:
   887                           
   888                           ;main.c: 54:             ad1 = 1024 - ad1;
   889     011C  3000               	movlw	0
   890     011D  00BA               	movwf	??_main
   891     011E  3004               	movlw	4
   892     011F  00BB               	movwf	??_main+1
   893     0120  3000               	movlw	0
   894     0121  00BC               	movwf	??_main+2
   895     0122  3000               	movlw	0
   896     0123  00BD               	movwf	??_main+3
   897     0124  0843               	movf	_ad1,w
   898     0125  02BA               	subwf	??_main,f
   899     0126  0844               	movf	_ad1+1,w
   900     0127  3BBB               	subwfb	??_main+1,f
   901     0128  0845               	movf	_ad1+2,w
   902     0129  3BBC               	subwfb	??_main+2,f
   903     012A  0846               	movf	_ad1+3,w
   904     012B  3BBD               	subwfb	??_main+3,f
   905     012C  083D               	movf	??_main+3,w
   906     012D  00C6               	movwf	_ad1+3
   907     012E  083C               	movf	??_main+2,w
   908     012F  00C5               	movwf	_ad1+2
   909     0130  083B               	movf	??_main+1,w
   910     0131  00C4               	movwf	_ad1+1
   911     0132  083A               	movf	??_main,w
   912     0133  00C3               	movwf	_ad1
   913     0134                     l1325:
   914                           
   915                           ;main.c: 55:             VR = ad1 * 500 / 1024;
   916     0134  0846               	movf	_ad1+3,w
   917     0135  00A3               	movwf	___lmul@multiplier+3
   918     0136  0845               	movf	_ad1+2,w
   919     0137  00A2               	movwf	___lmul@multiplier+2
   920     0138  0844               	movf	_ad1+1,w
   921     0139  00A1               	movwf	___lmul@multiplier+1
   922     013A  0843               	movf	_ad1,w
   923     013B  00A0               	movwf	___lmul@multiplier
   924     013C  3000               	movlw	0
   925     013D  00A7               	movwf	___lmul@multiplicand+3
   926     013E  3000               	movlw	0
   927     013F  00A6               	movwf	___lmul@multiplicand+2
   928     0140  3001               	movlw	1
   929     0141  00A5               	movwf	___lmul@multiplicand+1
   930     0142  30F4               	movlw	244
   931     0143  00A4               	movwf	___lmul@multiplicand
   932     0144  3183  236A  3180   	fcall	___lmul
   933     0147  0020               	movlb	0	; select bank0
   934     0148  0820               	movf	?___lmul,w
   935     0149  00BA               	movwf	??_main
   936     014A  0821               	movf	?___lmul+1,w
   937     014B  00BB               	movwf	??_main+1
   938     014C  0822               	movf	?___lmul+2,w
   939     014D  00BC               	movwf	??_main+2
   940     014E  0823               	movf	?___lmul+3,w
   941     014F  00BD               	movwf	??_main+3
   942     0150  300A               	movlw	10
   943     0151                     u1035:
   944     0151  36BD               	lsrf	??_main+3,f
   945     0152  0CBC               	rrf	??_main+2,f
   946     0153  0CBB               	rrf	??_main+1,f
   947     0154  0CBA               	rrf	??_main,f
   948     0155                     u1030:
   949     0155  0B89               	decfsz	9,f
   950     0156  2951               	goto	u1035
   951     0157  083D               	movf	??_main+3,w
   952     0158  00C1               	movwf	main@VR+3
   953     0159  083C               	movf	??_main+2,w
   954     015A  00C0               	movwf	main@VR+2
   955     015B  083B               	movf	??_main+1,w
   956     015C  00BF               	movwf	main@VR+1
   957     015D  083A               	movf	??_main,w
   958     015E  00BE               	movwf	main@VR
   959     015F                     l1327:
   960                           
   961                           ;main.c: 56:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   962     015F  0841               	movf	main@VR+3,w
   963     0160  00AF               	movwf	___lldiv@divisor+3
   964     0161  0840               	movf	main@VR+2,w
   965     0162  00AE               	movwf	___lldiv@divisor+2
   966     0163  083F               	movf	main@VR+1,w
   967     0164  00AD               	movwf	___lldiv@divisor+1
   968     0165  083E               	movf	main@VR,w
   969     0166  00AC               	movwf	___lldiv@divisor
   970     0167  30F4               	movlw	244
   971     0168  00BA               	movwf	??_main
   972     0169  3001               	movlw	1
   973     016A  00BB               	movwf	??_main+1
   974     016B  3000               	movlw	0
   975     016C  00BC               	movwf	??_main+2
   976     016D  3000               	movlw	0
   977     016E  00BD               	movwf	??_main+3
   978     016F  083E               	movf	main@VR,w
   979     0170  02BA               	subwf	??_main,f
   980     0171  083F               	movf	main@VR+1,w
   981     0172  3BBB               	subwfb	??_main+1,f
   982     0173  0840               	movf	main@VR+2,w
   983     0174  3BBC               	subwfb	??_main+2,f
   984     0175  0841               	movf	main@VR+3,w
   985     0176  3BBD               	subwfb	??_main+3,f
   986     0177  083D               	movf	??_main+3,w
   987     0178  00A3               	movwf	___lmul@multiplier+3
   988     0179  083C               	movf	??_main+2,w
   989     017A  00A2               	movwf	___lmul@multiplier+2
   990     017B  083B               	movf	??_main+1,w
   991     017C  00A1               	movwf	___lmul@multiplier+1
   992     017D  083A               	movf	??_main,w
   993     017E  00A0               	movwf	___lmul@multiplier
   994     017F  3000               	movlw	0
   995     0180  00A7               	movwf	___lmul@multiplicand+3
   996     0181  3000               	movlw	0
   997     0182  00A6               	movwf	___lmul@multiplicand+2
   998     0183  3003               	movlw	3
   999     0184  00A5               	movwf	___lmul@multiplicand+1
  1000     0185  30E8               	movlw	232
  1001     0186  00A4               	movwf	___lmul@multiplicand
  1002     0187  3183  236A  3180   	fcall	___lmul
  1003     018A  0020               	movlb	0	; select bank0
  1004     018B  0823               	movf	?___lmul+3,w
  1005     018C  00B3               	movwf	___lldiv@dividend+3
  1006     018D  0822               	movf	?___lmul+2,w
  1007     018E  00B2               	movwf	___lldiv@dividend+2
  1008     018F  0821               	movf	?___lmul+1,w
  1009     0190  00B1               	movwf	___lldiv@dividend+1
  1010     0191  0820               	movf	?___lmul,w
  1011     0192  00B0               	movwf	___lldiv@dividend
  1012     0193  3182  22D4  3180   	fcall	___lldiv
  1013     0196  0020               	movlb	0	; select bank0
  1014     0197  082F               	movf	?___lldiv+3,w
  1015     0198  00CA               	movwf	_Rt+3
  1016     0199  082E               	movf	?___lldiv+2,w
  1017     019A  00C9               	movwf	_Rt+2
  1018     019B  082D               	movf	?___lldiv+1,w
  1019     019C  00C8               	movwf	_Rt+1
  1020     019D  082C               	movf	?___lldiv,w
  1021     019E  00C7               	movwf	_Rt
  1022     019F                     l1329:
  1023                           
  1024                           ;main.c: 57:             add++;
  1025     019F  3001               	movlw	1
  1026     01A0  00BA               	movwf	??_main
  1027     01A1  083A               	movf	??_main,w
  1028     01A2  07C2               	addwf	main@add,f
  1029                           
  1030                           ;main.c: 58:         }
  1031     01A3  29DC               	goto	l1343
  1032     01A4                     l1331:
  1033     01A4  3002               	movlw	2
  1034     01A5  0642               	xorwf	main@add,w
  1035     01A6  1D03               	btfss	3,2
  1036     01A7  29A9               	goto	u1041
  1037     01A8  29AA               	goto	u1040
  1038     01A9                     u1041:
  1039     01A9  29CD               	goto	l1337
  1040     01AA                     u1040:
  1041     01AA                     l1333:
  1042                           
  1043                           ;main.c: 60:         {;main.c: 61:             ad2 = getADCValue(0x01);
  1044     01AA  3001               	movlw	1
  1045     01AB  3183  232F  3180   	fcall	_getADCValue
  1046     01AE  0020               	movlb	0	; select bank0
  1047     01AF  0821               	movf	?_getADCValue+1,w
  1048     01B0  00CE               	movwf	_ad2+1
  1049     01B1  0820               	movf	?_getADCValue,w
  1050     01B2  00CD               	movwf	_ad2
  1051                           
  1052                           ;main.c: 62:             t = (int)(ad2 * 10 / 128);
  1053     01B3  084E               	movf	_ad2+1,w
  1054     01B4  00A1               	movwf	___wmul@multiplier+1
  1055     01B5  084D               	movf	_ad2,w
  1056     01B6  00A0               	movwf	___wmul@multiplier
  1057     01B7  300A               	movlw	10
  1058     01B8  00A2               	movwf	___wmul@multiplicand
  1059     01B9  3000               	movlw	0
  1060     01BA  00A3               	movwf	___wmul@multiplicand+1
  1061     01BB  3183  239E  3180   	fcall	___wmul
  1062     01BE  0020               	movlb	0	; select bank0
  1063     01BF  0820               	movf	?___wmul,w
  1064     01C0  00BA               	movwf	??_main
  1065     01C1  0821               	movf	?___wmul+1,w
  1066     01C2  00BB               	movwf	??_main+1
  1067     01C3  3007               	movlw	7
  1068     01C4                     u1055:
  1069     01C4  36BB               	lsrf	??_main+1,f
  1070     01C5  0CBA               	rrf	??_main,f
  1071     01C6  0B89               	decfsz	9,f
  1072     01C7  29C4               	goto	u1055
  1073     01C8  083A               	movf	??_main,w
  1074     01C9  00D3               	movwf	_t
  1075     01CA  083B               	movf	??_main+1,w
  1076     01CB  00D4               	movwf	_t+1
  1077     01CC  299F               	goto	l1329
  1078     01CD                     l1337:
  1079                           
  1080                           ;main.c: 66:         {;main.c: 67:             ad3 = getADCValue(0x02);
  1081     01CD  3002               	movlw	2
  1082     01CE  3183  232F  3180   	fcall	_getADCValue
  1083     01D1  0020               	movlb	0	; select bank0
  1084     01D2  0821               	movf	?_getADCValue+1,w
  1085     01D3  00CC               	movwf	_ad3+1
  1086     01D4  0820               	movf	?_getADCValue,w
  1087     01D5  00CB               	movwf	_ad3
  1088     01D6                     l1339:
  1089                           
  1090                           ;main.c: 68:             r = ad3;
  1091     01D6  084C               	movf	_ad3+1,w
  1092     01D7  00D0               	movwf	_r+1
  1093     01D8  084B               	movf	_ad3,w
  1094     01D9  00CF               	movwf	_r
  1095     01DA                     l1341:
  1096                           
  1097                           ;main.c: 69:             add = 1;
  1098     01DA  01C2               	clrf	main@add
  1099     01DB  0AC2               	incf	main@add,f
  1100     01DC                     l1343:
  1101                           
  1102                           ;main.c: 72:   if(v <= (t - 2))
  1103     01DC  0853               	movf	_t,w
  1104     01DD  3EFE               	addlw	254
  1105     01DE  00BA               	movwf	??_main
  1106     01DF  30FF               	movlw	255
  1107     01E0  3D54               	addwfc	_t+1,w
  1108     01E1  00BB               	movwf	??_main+1
  1109     01E2  083B               	movf	??_main+1,w
  1110     01E3  3A80               	xorlw	128
  1111     01E4  00BC               	movwf	??_main+2
  1112     01E5  0852               	movf	_v+1,w
  1113     01E6  3A80               	xorlw	128
  1114     01E7  023C               	subwf	??_main+2,w
  1115     01E8  1D03               	skipz
  1116     01E9  29EC               	goto	u1065
  1117     01EA  0851               	movf	_v,w
  1118     01EB  023A               	subwf	??_main,w
  1119     01EC                     u1065:
  1120     01EC  1C03               	skipc
  1121     01ED  29EF               	goto	u1061
  1122     01EE  29F0               	goto	u1060
  1123     01EF                     u1061:
  1124     01EF  2A0F               	goto	l1353
  1125     01F0                     u1060:
  1126     01F0                     l1345:
  1127                           
  1128                           ;main.c: 73:   {;main.c: 74:    PORTAbits.RA4 = 1;
  1129     01F0  0020               	movlb	0	; select bank0
  1130     01F1  160C               	bsf	12,4	;volatile
  1131     01F2                     l1347:
  1132                           
  1133                           ;main.c: 75:    y = 1;
  1134     01F2  3001               	movlw	1
  1135     01F3  00F8               	movwf	_y
  1136     01F4  3000               	movlw	0
  1137     01F5  00F9               	movwf	_y+1
  1138                           
  1139                           ;main.c: 76:    if (r < 100 || r > 900)
  1140     01F6  3000               	movlw	0
  1141     01F7  0250               	subwf	_r+1,w
  1142     01F8  3064               	movlw	100
  1143     01F9  1903               	skipnz
  1144     01FA  024F               	subwf	_r,w
  1145     01FB  1C03               	skipc
  1146     01FC  29FE               	goto	u1071
  1147     01FD  29FF               	goto	u1070
  1148     01FE                     u1071:
  1149     01FE  2A08               	goto	l65
  1150     01FF                     u1070:
  1151     01FF                     l1349:
  1152     01FF  3003               	movlw	3
  1153     0200  0250               	subwf	_r+1,w
  1154     0201  3085               	movlw	133
  1155     0202  1903               	skipnz
  1156     0203  024F               	subwf	_r,w
  1157     0204  1C03               	skipc
  1158     0205  2A07               	goto	u1081
  1159     0206  2A08               	goto	u1080
  1160     0207                     u1081:
  1161     0207  2A0B               	goto	l1351
  1162     0208                     u1080:
  1163     0208                     l65:
  1164                           
  1165                           ;main.c: 77:    {;main.c: 78:     timerActive = 1;
  1166     0208  01FA               	clrf	_timerActive
  1167     0209  0AFA               	incf	_timerActive,f
  1168                           
  1169                           ;main.c: 79:    }
  1170     020A  2A25               	goto	l1359
  1171     020B                     l1351:
  1172                           
  1173                           ;main.c: 81:    {;main.c: 82:     timerActive = 0;
  1174     020B  01FA               	clrf	_timerActive
  1175                           
  1176                           ;main.c: 83:     timerCounter = 0;
  1177     020C  01F6               	clrf	_timerCounter
  1178     020D  01F7               	clrf	_timerCounter+1
  1179     020E  2A25               	goto	l1359
  1180     020F                     l1353:
  1181     020F  0020               	movlb	0	; select bank0
  1182     0210  0854               	movf	_t+1,w
  1183     0211  3A80               	xorlw	128
  1184     0212  00BA               	movwf	??_main
  1185     0213  0852               	movf	_v+1,w
  1186     0214  3A80               	xorlw	128
  1187     0215  023A               	subwf	??_main,w
  1188     0216  1D03               	skipz
  1189     0217  2A1A               	goto	u1095
  1190     0218  0851               	movf	_v,w
  1191     0219  0253               	subwf	_t,w
  1192     021A                     u1095:
  1193     021A  1803               	skipnc
  1194     021B  2A1D               	goto	u1091
  1195     021C  2A1E               	goto	u1090
  1196     021D                     u1091:
  1197     021D  2A25               	goto	l1359
  1198     021E                     u1090:
  1199     021E                     l1355:
  1200                           
  1201                           ;main.c: 87:   {;main.c: 88:    PORTAbits.RA4 = 0;
  1202     021E  0020               	movlb	0	; select bank0
  1203     021F  120C               	bcf	12,4	;volatile
  1204     0220                     l1357:
  1205                           
  1206                           ;main.c: 89:    y = 0;
  1207     0220  01F8               	clrf	_y
  1208     0221  01F9               	clrf	_y+1
  1209                           
  1210                           ;main.c: 90:    timerActive = 0;
  1211     0222  01FA               	clrf	_timerActive
  1212                           
  1213                           ;main.c: 91:    timerCounter = 0;
  1214     0223  01F6               	clrf	_timerCounter
  1215     0224  01F7               	clrf	_timerCounter+1
  1216     0225                     l1359:
  1217                           
  1218                           ;main.c: 93:   _delay((unsigned long)((100)*(32000000/4000.0)));
  1219     0225  3005               	movlw	5
  1220     0226  0020               	movlb	0	; select bank0
  1221     0227  00BB               	movwf	??_main+1
  1222     0228  300F               	movlw	15
  1223     0229  00BA               	movwf	??_main
  1224     022A  30F1               	movlw	241
  1225     022B                     u1117:
  1226     022B  0B89               	decfsz	9,f
  1227     022C  2A2B               	goto	u1117
  1228     022D  0BBA               	decfsz	??_main,f
  1229     022E  2A2B               	goto	u1117
  1230     022F  0BBB               	decfsz	??_main+1,f
  1231     0230  2A2B               	goto	u1117
  1232     0231  290B               	goto	l1319
  1233     0232  3180  28DC         	ljmp	start
  1234     0234                     __end_of_main:
  1235                           
  1236                           	psect	text1
  1237     03BE                     __ptext1:	
  1238 ;; *************** function _setup *****************
  1239 ;; Defined at:
  1240 ;;		line 5 in file "KF2.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1254 ;;      Params:         0       0       0       0
  1255 ;;      Locals:         0       0       0       0
  1256 ;;      Temps:          0       0       0       0
  1257 ;;      Totals:         0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268     03BE                     _setup:	
  1269                           ;psect for function _setup
  1270                           
  1271     03BE                     l1205:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _setup: [wreg]
  1274                           
  1275                           
  1276                           ;KF2.c: 7:     OSCCON = 0b01110000;
  1277     03BE  3070               	movlw	112
  1278     03BF  0021               	movlb	1	; select bank1
  1279     03C0  0099               	movwf	25	;volatile
  1280     03C1                     l1207:
  1281                           
  1282                           ;KF2.c: 10:     PORTAbits.RA4 = 0;
  1283     03C1  0020               	movlb	0	; select bank0
  1284     03C2  120C               	bcf	12,4	;volatile
  1285     03C3                     l1209:
  1286                           
  1287                           ;KF2.c: 11:     TRISAbits.TRISA4 = 0;
  1288     03C3  0021               	movlb	1	; select bank1
  1289     03C4  120C               	bcf	12,4	;volatile
  1290     03C5                     l1211:
  1291                           
  1292                           ;KF2.c: 14:     ANSELAbits.ANSA0 = 1;
  1293     03C5  0023               	movlb	3	; select bank3
  1294     03C6  140C               	bsf	12,0	;volatile
  1295     03C7                     l1213:
  1296                           
  1297                           ;KF2.c: 15:     ANSELAbits.ANSA1 = 1;
  1298     03C7  148C               	bsf	12,1	;volatile
  1299     03C8                     l1215:
  1300                           
  1301                           ;KF2.c: 16:     ANSELAbits.ANSA2 = 1;
  1302     03C8  150C               	bsf	12,2	;volatile
  1303                           
  1304                           ;KF2.c: 17:     ADCON1 = 0x50;
  1305     03C9  3050               	movlw	80
  1306     03CA  0021               	movlb	1	; select bank1
  1307     03CB  009E               	movwf	30	;volatile
  1308     03CC                     l1217:
  1309                           
  1310                           ;KF2.c: 18:     PIE1bits.ADIE = 1;
  1311     03CC  1711               	bsf	17,6	;volatile
  1312     03CD                     l1219:
  1313                           
  1314                           ;KF2.c: 19:     PIR1bits.ADIF = 0;
  1315     03CD  0020               	movlb	0	; select bank0
  1316     03CE  1311               	bcf	17,6	;volatile
  1317     03CF                     l1221:
  1318                           
  1319                           ;KF2.c: 20:     ADCON0bits.GO = 0;
  1320     03CF  0021               	movlb	1	; select bank1
  1321     03D0  109D               	bcf	29,1	;volatile
  1322     03D1                     l1223:
  1323                           
  1324                           ;KF2.c: 21:     ADCON0bits.ADON = 1;
  1325     03D1  141D               	bsf	29,0	;volatile
  1326     03D2                     l134:
  1327     03D2  0008               	return
  1328     03D3                     __end_of_setup:
  1329                           
  1330                           	psect	text2
  1331     032F                     __ptext2:	
  1332 ;; *************** function _getADCValue *****************
  1333 ;; Defined at:
  1334 ;;		line 98 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  channel         1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  channel         1    9[BANK0 ] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2    0[BANK0 ] unsigned int 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1348 ;;      Params:         0       2       0       0
  1349 ;;      Locals:         0       1       0       0
  1350 ;;      Temps:          0       7       0       0
  1351 ;;      Totals:         0      10       0       0
  1352 ;;Total ram usage:       10 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362     032F                     _getADCValue:	
  1363                           ;psect for function _getADCValue
  1364                           
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1368                           ;getADCValue@channel stored from wreg
  1369     032F  0020               	movlb	0	; select bank0
  1370     0330  00A9               	movwf	getADCValue@channel
  1371     0331                     l1243:
  1372                           
  1373                           ;main.c: 98: unsigned int getADCValue(unsigned char channel);main.c: 99: {;main.c: 100: 
      +                              ADCON0bits.CHS = channel;
  1374     0331  0829               	movf	getADCValue@channel,w
  1375     0332  00A2               	movwf	??_getADCValue
  1376     0333  0DA2               	rlf	??_getADCValue,f
  1377     0334  0DA2               	rlf	??_getADCValue,f
  1378     0335  0021               	movlb	1	; select bank1
  1379     0336  081D               	movf	29,w	;volatile
  1380     0337  0020               	movlb	0	; select bank0
  1381     0338  0622               	xorwf	??_getADCValue,w
  1382     0339  3983               	andlw	-125
  1383     033A  0622               	xorwf	??_getADCValue,w
  1384     033B  0021               	movlb	1	; select bank1
  1385     033C  009D               	movwf	29	;volatile
  1386     033D                     l1245:
  1387                           
  1388                           ;main.c: 101:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1389     033D  3034               	movlw	52
  1390     033E  0020               	movlb	0	; select bank0
  1391     033F  00A2               	movwf	??_getADCValue
  1392     0340  30F1               	movlw	241
  1393     0341                     u1127:
  1394     0341  0B89               	decfsz	9,f
  1395     0342  2B41               	goto	u1127
  1396     0343  0BA2               	decfsz	??_getADCValue,f
  1397     0344  2B41               	goto	u1127
  1398     0345  3200               	nop2
  1399     0346                     l1247:
  1400                           
  1401                           ;main.c: 102:     ADCON0bits.GO = 1;
  1402     0346  0021               	movlb	1	; select bank1
  1403     0347  149D               	bsf	29,1	;volatile
  1404     0348                     l74:	
  1405                           ;main.c: 103:     while (ADCON0bits.GO);
  1406                           
  1407     0348  189D               	btfsc	29,1	;volatile
  1408     0349  2B4B               	goto	u851
  1409     034A  2B4C               	goto	u850
  1410     034B                     u851:
  1411     034B  2B48               	goto	l74
  1412     034C                     u850:
  1413     034C                     l1249:
  1414                           
  1415                           ;main.c: 104:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1416     034C  081B               	movf	27,w	;volatile
  1417     034D  0020               	movlb	0	; select bank0
  1418     034E  00A2               	movwf	??_getADCValue
  1419     034F  3006               	movlw	6
  1420     0350                     u865:
  1421     0350  36A2               	lsrf	??_getADCValue,f
  1422     0351  0B89               	decfsz	9,f
  1423     0352  2B50               	goto	u865
  1424     0353  0822               	movf	??_getADCValue,w
  1425     0354  00A3               	movwf	??_getADCValue+1
  1426     0355  01A4               	clrf	??_getADCValue+2
  1427     0356  0021               	movlb	1	; select bank1
  1428     0357  081C               	movf	28,w	;volatile
  1429     0358  0020               	movlb	0	; select bank0
  1430     0359  00A5               	movwf	??_getADCValue+3
  1431     035A  01A6               	clrf	??_getADCValue+4
  1432     035B  35A5               	lslf	??_getADCValue+3,f
  1433     035C  0DA6               	rlf	??_getADCValue+4,f
  1434     035D  35A5               	lslf	??_getADCValue+3,f
  1435     035E  0DA6               	rlf	??_getADCValue+4,f
  1436     035F  0823               	movf	??_getADCValue+1,w
  1437     0360  0425               	iorwf	??_getADCValue+3,w
  1438     0361  00A7               	movwf	??_getADCValue+5
  1439     0362  0824               	movf	??_getADCValue+2,w
  1440     0363  0426               	iorwf	??_getADCValue+4,w
  1441     0364  00A8               	movwf	??_getADCValue+6
  1442     0365  0827               	movf	??_getADCValue+5,w
  1443     0366  00A0               	movwf	?_getADCValue
  1444     0367  0828               	movf	??_getADCValue+6,w
  1445     0368  00A1               	movwf	?_getADCValue+1
  1446     0369                     l77:
  1447     0369  0008               	return
  1448     036A                     __end_of_getADCValue:
  1449                           
  1450                           	psect	text3
  1451     039E                     __ptext3:	
  1452 ;; *************** function ___wmul *****************
  1453 ;; Defined at:
  1454 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul16.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1457 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  product         2    4[BANK0 ] unsigned int 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    0[BANK0 ] unsigned int 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1469 ;;      Params:         0       4       0       0
  1470 ;;      Locals:         0       2       0       0
  1471 ;;      Temps:          0       0       0       0
  1472 ;;      Totals:         0       6       0       0
  1473 ;;Total ram usage:        6 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483     039E                     ___wmul:	
  1484                           ;psect for function ___wmul
  1485                           
  1486     039E                     l1253:	
  1487                           ;incstack = 0
  1488                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1489                           
  1490     039E  0020               	movlb	0	; select bank0
  1491     039F  01A4               	clrf	___wmul@product
  1492     03A0  01A5               	clrf	___wmul@product+1
  1493     03A1                     l1255:
  1494     03A1  1C20               	btfss	___wmul@multiplier,0
  1495     03A2  2BA4               	goto	u871
  1496     03A3  2BA5               	goto	u870
  1497     03A4                     u871:
  1498     03A4  2BA9               	goto	l287
  1499     03A5                     u870:
  1500     03A5                     l1257:
  1501     03A5  0822               	movf	___wmul@multiplicand,w
  1502     03A6  07A4               	addwf	___wmul@product,f
  1503     03A7  0823               	movf	___wmul@multiplicand+1,w
  1504     03A8  3DA5               	addwfc	___wmul@product+1,f
  1505     03A9                     l287:
  1506     03A9  3001               	movlw	1
  1507     03AA                     u885:
  1508     03AA  35A2               	lslf	___wmul@multiplicand,f
  1509     03AB  0DA3               	rlf	___wmul@multiplicand+1,f
  1510     03AC  0B89               	decfsz	9,f
  1511     03AD  2BAA               	goto	u885
  1512     03AE                     l1259:
  1513     03AE  3001               	movlw	1
  1514     03AF                     u895:
  1515     03AF  36A1               	lsrf	___wmul@multiplier+1,f
  1516     03B0  0CA0               	rrf	___wmul@multiplier,f
  1517     03B1  0B89               	decfsz	9,f
  1518     03B2  2BAF               	goto	u895
  1519     03B3                     l1261:
  1520     03B3  0820               	movf	___wmul@multiplier,w
  1521     03B4  0421               	iorwf	___wmul@multiplier+1,w
  1522     03B5  1D03               	btfss	3,2
  1523     03B6  2BB8               	goto	u901
  1524     03B7  2BB9               	goto	u900
  1525     03B8                     u901:
  1526     03B8  2BA1               	goto	l1255
  1527     03B9                     u900:
  1528     03B9                     l1263:
  1529     03B9  0825               	movf	___wmul@product+1,w
  1530     03BA  00A1               	movwf	?___wmul+1
  1531     03BB  0824               	movf	___wmul@product,w
  1532     03BC  00A0               	movwf	?___wmul
  1533     03BD                     l289:
  1534     03BD  0008               	return
  1535     03BE                     __end_of___wmul:
  1536                           
  1537                           	psect	text4
  1538     036A                     __ptext4:	
  1539 ;; *************** function ___lmul *****************
  1540 ;; Defined at:
  1541 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1544 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  product         4    8[BANK0 ] unsigned long 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  4    0[BANK0 ] unsigned long 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1556 ;;      Params:         0       8       0       0
  1557 ;;      Locals:         0       4       0       0
  1558 ;;      Temps:          0       0       0       0
  1559 ;;      Totals:         0      12       0       0
  1560 ;;Total ram usage:       12 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     036A                     ___lmul:	
  1571                           ;psect for function ___lmul
  1572                           
  1573     036A                     l1267:	
  1574                           ;incstack = 0
  1575                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1576                           
  1577     036A  3000               	movlw	0
  1578     036B  0020               	movlb	0	; select bank0
  1579     036C  00AB               	movwf	___lmul@product+3
  1580     036D  3000               	movlw	0
  1581     036E  00AA               	movwf	___lmul@product+2
  1582     036F  3000               	movlw	0
  1583     0370  00A9               	movwf	___lmul@product+1
  1584     0371  3000               	movlw	0
  1585     0372  00A8               	movwf	___lmul@product
  1586     0373                     l1269:
  1587     0373  1C20               	btfss	___lmul@multiplier,0
  1588     0374  2B76               	goto	u911
  1589     0375  2B77               	goto	u910
  1590     0376                     u911:
  1591     0376  2B7F               	goto	l1273
  1592     0377                     u910:
  1593     0377                     l1271:
  1594     0377  0824               	movf	___lmul@multiplicand,w
  1595     0378  07A8               	addwf	___lmul@product,f
  1596     0379  0825               	movf	___lmul@multiplicand+1,w
  1597     037A  3DA9               	addwfc	___lmul@product+1,f
  1598     037B  0826               	movf	___lmul@multiplicand+2,w
  1599     037C  3DAA               	addwfc	___lmul@product+2,f
  1600     037D  0827               	movf	___lmul@multiplicand+3,w
  1601     037E  3DAB               	addwfc	___lmul@product+3,f
  1602     037F                     l1273:
  1603     037F  3001               	movlw	1
  1604     0380                     u925:
  1605     0380  35A4               	lslf	___lmul@multiplicand,f
  1606     0381  0DA5               	rlf	___lmul@multiplicand+1,f
  1607     0382  0DA6               	rlf	___lmul@multiplicand+2,f
  1608     0383  0DA7               	rlf	___lmul@multiplicand+3,f
  1609     0384  0B89               	decfsz	9,f
  1610     0385  2B80               	goto	u925
  1611     0386                     l1275:
  1612     0386  3001               	movlw	1
  1613     0387                     u935:
  1614     0387  36A3               	lsrf	___lmul@multiplier+3,f
  1615     0388  0CA2               	rrf	___lmul@multiplier+2,f
  1616     0389  0CA1               	rrf	___lmul@multiplier+1,f
  1617     038A  0CA0               	rrf	___lmul@multiplier,f
  1618     038B  0B89               	decfsz	9,f
  1619     038C  2B87               	goto	u935
  1620     038D  0823               	movf	___lmul@multiplier+3,w
  1621     038E  0422               	iorwf	___lmul@multiplier+2,w
  1622     038F  0421               	iorwf	___lmul@multiplier+1,w
  1623     0390  0420               	iorwf	___lmul@multiplier,w
  1624     0391  1D03               	skipz
  1625     0392  2B94               	goto	u941
  1626     0393  2B95               	goto	u940
  1627     0394                     u941:
  1628     0394  2B73               	goto	l1269
  1629     0395                     u940:
  1630     0395                     l1277:
  1631     0395  082B               	movf	___lmul@product+3,w
  1632     0396  00A3               	movwf	?___lmul+3
  1633     0397  082A               	movf	___lmul@product+2,w
  1634     0398  00A2               	movwf	?___lmul+2
  1635     0399  0829               	movf	___lmul@product+1,w
  1636     039A  00A1               	movwf	?___lmul+1
  1637     039B  0828               	movf	___lmul@product,w
  1638     039C  00A0               	movwf	?___lmul
  1639     039D                     l301:
  1640     039D  0008               	return
  1641     039E                     __end_of___lmul:
  1642                           
  1643                           	psect	text5
  1644     02D4                     __ptext5:	
  1645 ;; *************** function ___lldiv *****************
  1646 ;; Defined at:
  1647 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  divisor         4   12[BANK0 ] unsigned long 
  1650 ;;  dividend        4   16[BANK0 ] unsigned long 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  quotient        4   21[BANK0 ] unsigned long 
  1653 ;;  counter         1   25[BANK0 ] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  4   12[BANK0 ] unsigned long 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1663 ;;      Params:         0       8       0       0
  1664 ;;      Locals:         0       5       0       0
  1665 ;;      Temps:          0       1       0       0
  1666 ;;      Totals:         0      14       0       0
  1667 ;;Total ram usage:       14 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677     02D4                     ___lldiv:	
  1678                           ;psect for function ___lldiv
  1679                           
  1680     02D4                     l1281:	
  1681                           ;incstack = 0
  1682                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1683                           
  1684     02D4  3000               	movlw	0
  1685     02D5  0020               	movlb	0	; select bank0
  1686     02D6  00B8               	movwf	___lldiv@quotient+3
  1687     02D7  3000               	movlw	0
  1688     02D8  00B7               	movwf	___lldiv@quotient+2
  1689     02D9  3000               	movlw	0
  1690     02DA  00B6               	movwf	___lldiv@quotient+1
  1691     02DB  3000               	movlw	0
  1692     02DC  00B5               	movwf	___lldiv@quotient
  1693     02DD  082F               	movf	___lldiv@divisor+3,w
  1694     02DE  042E               	iorwf	___lldiv@divisor+2,w
  1695     02DF  042D               	iorwf	___lldiv@divisor+1,w
  1696     02E0  042C               	iorwf	___lldiv@divisor,w
  1697     02E1  1903               	skipnz
  1698     02E2  2AE4               	goto	u951
  1699     02E3  2AE5               	goto	u950
  1700     02E4                     u951:
  1701     02E4  2B26               	goto	l1301
  1702     02E5                     u950:
  1703     02E5                     l1283:
  1704     02E5  01B9               	clrf	___lldiv@counter
  1705     02E6  0AB9               	incf	___lldiv@counter,f
  1706     02E7  2AF3               	goto	l1287
  1707     02E8                     l1285:
  1708     02E8  3001               	movlw	1
  1709     02E9                     u965:
  1710     02E9  35AC               	lslf	___lldiv@divisor,f
  1711     02EA  0DAD               	rlf	___lldiv@divisor+1,f
  1712     02EB  0DAE               	rlf	___lldiv@divisor+2,f
  1713     02EC  0DAF               	rlf	___lldiv@divisor+3,f
  1714     02ED  0B89               	decfsz	9,f
  1715     02EE  2AE9               	goto	u965
  1716     02EF  3001               	movlw	1
  1717     02F0  00B4               	movwf	??___lldiv
  1718     02F1  0834               	movf	??___lldiv,w
  1719     02F2  07B9               	addwf	___lldiv@counter,f
  1720     02F3                     l1287:
  1721     02F3  1FAF               	btfss	___lldiv@divisor+3,7
  1722     02F4  2AF6               	goto	u971
  1723     02F5  2AF7               	goto	u970
  1724     02F6                     u971:
  1725     02F6  2AE8               	goto	l1285
  1726     02F7                     u970:
  1727     02F7                     l1289:
  1728     02F7  3001               	movlw	1
  1729     02F8                     u985:
  1730     02F8  35B5               	lslf	___lldiv@quotient,f
  1731     02F9  0DB6               	rlf	___lldiv@quotient+1,f
  1732     02FA  0DB7               	rlf	___lldiv@quotient+2,f
  1733     02FB  0DB8               	rlf	___lldiv@quotient+3,f
  1734     02FC  0B89               	decfsz	9,f
  1735     02FD  2AF8               	goto	u985
  1736     02FE                     l1291:
  1737     02FE  082F               	movf	___lldiv@divisor+3,w
  1738     02FF  0233               	subwf	___lldiv@dividend+3,w
  1739     0300  1D03               	skipz
  1740     0301  2B0C               	goto	u995
  1741     0302  082E               	movf	___lldiv@divisor+2,w
  1742     0303  0232               	subwf	___lldiv@dividend+2,w
  1743     0304  1D03               	skipz
  1744     0305  2B0C               	goto	u995
  1745     0306  082D               	movf	___lldiv@divisor+1,w
  1746     0307  0231               	subwf	___lldiv@dividend+1,w
  1747     0308  1D03               	skipz
  1748     0309  2B0C               	goto	u995
  1749     030A  082C               	movf	___lldiv@divisor,w
  1750     030B  0230               	subwf	___lldiv@dividend,w
  1751     030C                     u995:
  1752     030C  1C03               	skipc
  1753     030D  2B0F               	goto	u991
  1754     030E  2B10               	goto	u990
  1755     030F                     u991:
  1756     030F  2B19               	goto	l1297
  1757     0310                     u990:
  1758     0310                     l1293:
  1759     0310  082C               	movf	___lldiv@divisor,w
  1760     0311  02B0               	subwf	___lldiv@dividend,f
  1761     0312  082D               	movf	___lldiv@divisor+1,w
  1762     0313  3BB1               	subwfb	___lldiv@dividend+1,f
  1763     0314  082E               	movf	___lldiv@divisor+2,w
  1764     0315  3BB2               	subwfb	___lldiv@dividend+2,f
  1765     0316  082F               	movf	___lldiv@divisor+3,w
  1766     0317  3BB3               	subwfb	___lldiv@dividend+3,f
  1767     0318                     l1295:
  1768     0318  1435               	bsf	___lldiv@quotient,0
  1769     0319                     l1297:
  1770     0319  3001               	movlw	1
  1771     031A                     u1005:
  1772     031A  36AF               	lsrf	___lldiv@divisor+3,f
  1773     031B  0CAE               	rrf	___lldiv@divisor+2,f
  1774     031C  0CAD               	rrf	___lldiv@divisor+1,f
  1775     031D  0CAC               	rrf	___lldiv@divisor,f
  1776     031E  0B89               	decfsz	9,f
  1777     031F  2B1A               	goto	u1005
  1778     0320                     l1299:
  1779     0320  3001               	movlw	1
  1780     0321  02B9               	subwf	___lldiv@counter,f
  1781     0322  1D03               	btfss	3,2
  1782     0323  2B25               	goto	u1011
  1783     0324  2B26               	goto	u1010
  1784     0325                     u1011:
  1785     0325  2AF7               	goto	l1289
  1786     0326                     u1010:
  1787     0326                     l1301:
  1788     0326  0838               	movf	___lldiv@quotient+3,w
  1789     0327  00AF               	movwf	?___lldiv+3
  1790     0328  0837               	movf	___lldiv@quotient+2,w
  1791     0329  00AE               	movwf	?___lldiv+2
  1792     032A  0836               	movf	___lldiv@quotient+1,w
  1793     032B  00AD               	movwf	?___lldiv+1
  1794     032C  0835               	movf	___lldiv@quotient,w
  1795     032D  00AC               	movwf	?___lldiv
  1796     032E                     l323:
  1797     032E  0008               	return
  1798     032F                     __end_of___lldiv:
  1799                           
  1800                           	psect	text6
  1801     03D3                     __ptext6:	
  1802 ;; *************** function _PWMinit *****************
  1803 ;; Defined at:
  1804 ;;		line 24 in file "KF2.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1818 ;;      Params:         0       0       0       0
  1819 ;;      Locals:         0       0       0       0
  1820 ;;      Temps:          0       0       0       0
  1821 ;;      Totals:         0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832     03D3                     _PWMinit:	
  1833                           ;psect for function _PWMinit
  1834                           
  1835     03D3                     l1225:	
  1836                           ;incstack = 0
  1837                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1838                           
  1839                           
  1840                           ;KF2.c: 26:  TRISAbits.TRISA5 = 1;
  1841     03D3  0021               	movlb	1	; select bank1
  1842     03D4  168C               	bsf	12,5	;volatile
  1843                           
  1844                           ;KF2.c: 27:  APFCONbits.CCP1SEL = 1;
  1845     03D5  0022               	movlb	2	; select bank2
  1846     03D6  141D               	bsf	29,0	;volatile
  1847     03D7                     l1227:
  1848                           
  1849                           ;KF2.c: 28:     PR2 = 255;
  1850     03D7  30FF               	movlw	255
  1851     03D8  0020               	movlb	0	; select bank0
  1852     03D9  009B               	movwf	27	;volatile
  1853     03DA                     l1229:
  1854                           
  1855                           ;KF2.c: 29:  CCP1CONbits.CCP1M = 0x0F;
  1856     03DA  300F               	movlw	15
  1857     03DB  0025               	movlb	5	; select bank5
  1858     03DC  0493               	iorwf	19,f	;volatile
  1859     03DD                     l1231:
  1860                           
  1861                           ;KF2.c: 30:  CCP1CONbits.P1M = 0;
  1862     03DD  303F               	movlw	-193
  1863     03DE  0593               	andwf	19,f	;volatile
  1864     03DF                     l1233:
  1865                           
  1866                           ;KF2.c: 31:     INTCONbits.GIE = 1;
  1867     03DF  178B               	bsf	11,7	;volatile
  1868     03E0                     l1235:
  1869                           
  1870                           ;KF2.c: 32:     INTCONbits.PEIE = 1;
  1871     03E0  170B               	bsf	11,6	;volatile
  1872     03E1                     l1237:
  1873                           
  1874                           ;KF2.c: 33:     PIE1bits.TMR2IE = 1;
  1875     03E1  0021               	movlb	1	; select bank1
  1876     03E2  1491               	bsf	17,1	;volatile
  1877     03E3                     l1239:
  1878                           
  1879                           ;KF2.c: 34:     PIR1bits.TMR2IF = 0;
  1880     03E3  0020               	movlb	0	; select bank0
  1881     03E4  1091               	bcf	17,1	;volatile
  1882     03E5                     l1241:
  1883                           
  1884                           ;KF2.c: 35:     T2CONbits.T2CKPS = 3;
  1885     03E5  3003               	movlw	3
  1886     03E6  049C               	iorwf	28,f	;volatile
  1887     03E7                     l137:
  1888     03E7  0008               	return
  1889     03E8                     __end_of_PWMinit:
  1890                           
  1891                           	psect	intentry
  1892     0004                     __pintentry:	
  1893 ;; *************** function _ISR *****************
  1894 ;; Defined at:
  1895 ;;		line 107 in file "main.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  i               1    5[COMMON] unsigned char 
  1900 ;;  p               1    4[COMMON] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1910 ;;      Params:         0       0       0       0
  1911 ;;      Locals:         2       0       0       0
  1912 ;;      Temps:          4       0       0       0
  1913 ;;      Totals:         6       0       0       0
  1914 ;;Total ram usage:        6 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		Interrupt level 1
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     0004                     _ISR:
  1924                           
  1925                           ;incstack = 0
  1926     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1927                           
  1928                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  1929     0005  3180               	pagesel	$
  1930     0006                     i1l1131:
  1931                           
  1932                           ;main.c: 109:  if(PIR1bits.TMR2IF == 1)
  1933     0006  0020               	movlb	0	; select bank0
  1934     0007  1C91               	btfss	17,1	;volatile
  1935     0008  280A               	goto	u68_21
  1936     0009  280B               	goto	u68_20
  1937     000A                     u68_21:
  1938     000A  2845               	goto	i1l1161
  1939     000B                     u68_20:
  1940     000B                     i1l1133:
  1941                           
  1942                           ;main.c: 110:  {;main.c: 111:   char p;;main.c: 112:   PIE1bits.TMR2IE = 0;
  1943     000B  0021               	movlb	1	; select bank1
  1944     000C  1091               	bcf	17,1	;volatile
  1945                           
  1946                           ;main.c: 113:   T2CONbits.TMR2ON = 0;
  1947     000D  0020               	movlb	0	; select bank0
  1948     000E  111C               	bcf	28,2	;volatile
  1949                           
  1950                           ;main.c: 114:   PIR1bits.TMR2IF = 0;
  1951     000F  1091               	bcf	17,1	;volatile
  1952     0010                     i1l1135:
  1953                           
  1954                           ;main.c: 115:   if(y == 0)
  1955     0010  0878               	movf	_y,w
  1956     0011  0479               	iorwf	_y+1,w
  1957     0012  1D03               	btfss	3,2
  1958     0013  2815               	goto	u69_21
  1959     0014  2816               	goto	u69_20
  1960     0015                     u69_21:
  1961     0015  2838               	goto	i1l1153
  1962     0016                     u69_20:
  1963     0016                     i1l1137:
  1964                           
  1965                           ;main.c: 116:   {;main.c: 117:    if(CCPR1L >= PR2)
  1966     0016  081B               	movf	27,w	;volatile
  1967     0017  0025               	movlb	5	; select bank5
  1968     0018  0211               	subwf	17,w	;volatile
  1969     0019  1C03               	skipc
  1970     001A  281C               	goto	u70_21
  1971     001B  281D               	goto	u70_20
  1972     001C                     u70_21:
  1973     001C  281F               	goto	i1l1141
  1974     001D                     u70_20:
  1975     001D                     i1l1139:
  1976                           
  1977                           ;main.c: 118:    {;main.c: 119:     p = 0;
  1978     001D  01F4               	clrf	ISR@p
  1979                           
  1980                           ;main.c: 120:    }
  1981     001E  2826               	goto	i1l1145
  1982     001F                     i1l1141:
  1983     001F  0811               	movf	17,w	;volatile
  1984     0020  1D03               	btfss	3,2
  1985     0021  2823               	goto	u71_21
  1986     0022  2824               	goto	u71_20
  1987     0023                     u71_21:
  1988     0023  2826               	goto	i1l1145
  1989     0024                     u71_20:
  1990     0024                     i1l1143:
  1991                           
  1992                           ;main.c: 122:    {;main.c: 123:     p = 1;
  1993     0024  01F4               	clrf	ISR@p
  1994     0025  0AF4               	incf	ISR@p,f
  1995     0026                     i1l1145:
  1996                           
  1997                           ;main.c: 125:    if(p == 1)
  1998     0026  0374               	decf	ISR@p,w
  1999     0027  1D03               	btfss	3,2
  2000     0028  282A               	goto	u72_21
  2001     0029  282B               	goto	u72_20
  2002     002A                     u72_21:
  2003     002A  2830               	goto	i1l1149
  2004     002B                     u72_20:
  2005     002B                     i1l1147:
  2006                           
  2007                           ;main.c: 126:    {;main.c: 127:     CCPR1L++;
  2008     002B  3001               	movlw	1
  2009     002C  00F0               	movwf	??_ISR
  2010     002D  0870               	movf	??_ISR,w
  2011     002E  0791               	addwf	17,f	;volatile
  2012                           
  2013                           ;main.c: 128:    }
  2014     002F  2841               	goto	i1l1157
  2015     0030                     i1l1149:
  2016     0030  0874               	movf	ISR@p,w
  2017     0031  1D03               	btfss	3,2
  2018     0032  2834               	goto	u73_21
  2019     0033  2835               	goto	u73_20
  2020     0034                     u73_21:
  2021     0034  2841               	goto	i1l1157
  2022     0035                     u73_20:
  2023     0035                     i1l1151:
  2024                           
  2025                           ;main.c: 130:    {;main.c: 131:     CCPR1L--;
  2026     0035  3001               	movlw	1
  2027     0036  0291               	subwf	17,f	;volatile
  2028     0037  2841               	goto	i1l1157
  2029     0038                     i1l1153:
  2030     0038  0378               	decf	_y,w
  2031     0039  0479               	iorwf	_y+1,w
  2032     003A  1D03               	btfss	3,2
  2033     003B  283D               	goto	u74_21
  2034     003C  283E               	goto	u74_20
  2035     003D                     u74_21:
  2036     003D  2841               	goto	i1l1157
  2037     003E                     u74_20:
  2038     003E                     i1l1155:
  2039                           
  2040                           ;main.c: 135:   {;main.c: 136:    CCPR1L = 230;
  2041     003E  30E6               	movlw	230
  2042     003F  0025               	movlb	5	; select bank5
  2043     0040  0091               	movwf	17	;volatile
  2044     0041                     i1l1157:
  2045                           
  2046                           ;main.c: 138:   PIE1bits.TMR2IE = 1;
  2047     0041  0021               	movlb	1	; select bank1
  2048     0042  1491               	bsf	17,1	;volatile
  2049     0043                     i1l1159:
  2050                           
  2051                           ;main.c: 139:   T2CONbits.TMR2ON = 1;
  2052     0043  0020               	movlb	0	; select bank0
  2053     0044  151C               	bsf	28,2	;volatile
  2054     0045                     i1l1161:
  2055                           
  2056                           ;main.c: 142:  if(PIR1bits.ADIF == 1)
  2057     0045  1F11               	btfss	17,6	;volatile
  2058     0046  2848               	goto	u75_21
  2059     0047  2849               	goto	u75_20
  2060     0048                     u75_21:
  2061     0048  28DA               	goto	i1l105
  2062     0049                     u75_20:
  2063     0049                     i1l1163:
  2064                           
  2065                           ;main.c: 143:  {;main.c: 144:   PIE1bits.ADIE = 0;
  2066     0049  0021               	movlb	1	; select bank1
  2067     004A  1311               	bcf	17,6	;volatile
  2068                           
  2069                           ;main.c: 145:   PIR1bits.ADIF = 0;
  2070     004B  0020               	movlb	0	; select bank0
  2071     004C  1311               	bcf	17,6	;volatile
  2072     004D                     i1l1165:
  2073                           
  2074                           ;main.c: 146:   char i;;main.c: 147:   for(i = 0; i < 80; i++)
  2075     004D  01F5               	clrf	ISR@i
  2076     004E                     i1l1171:
  2077                           
  2078                           ;main.c: 148:   {;main.c: 149:    if((unsigned int)Rt >= TABLE[i])
  2079     004E  0875               	movf	ISR@i,w
  2080     004F  00F0               	movwf	??_ISR
  2081     0050  01F1               	clrf	??_ISR+1
  2082     0051  35F0               	lslf	??_ISR,f
  2083     0052  0DF1               	rlf	??_ISR+1,f
  2084     0053  3034               	movlw	low _TABLE
  2085     0054  0770               	addwf	??_ISR,w
  2086     0055  0084               	movwf	4
  2087     0056  3002               	movlw	high _TABLE
  2088     0057  3D71               	addwfc	??_ISR+1,w
  2089     0058  3880               	iorlw	128
  2090     0059  0085               	movwf	5
  2091     005A  3F00               	moviw [0]fsr0
  2092     005B  00F2               	movwf	??_ISR+2
  2093     005C  3F01               	moviw [1]fsr0
  2094     005D  00F3               	movwf	??_ISR+3
  2095     005E  0873               	movf	??_ISR+3,w
  2096     005F  0248               	subwf	_Rt+1,w
  2097     0060  1D03               	skipz
  2098     0061  2864               	goto	u76_25
  2099     0062  0872               	movf	??_ISR+2,w
  2100     0063  0247               	subwf	_Rt,w
  2101     0064                     u76_25:
  2102     0064  1C03               	skipc
  2103     0065  2867               	goto	u76_21
  2104     0066  2868               	goto	u76_20
  2105     0067                     u76_21:
  2106     0067  2870               	goto	i1l1175
  2107     0068                     u76_20:
  2108     0068                     i1l1173:
  2109                           
  2110                           ;main.c: 150:    {;main.c: 151:     v = i;
  2111     0068  0875               	movf	ISR@i,w
  2112     0069  00F0               	movwf	??_ISR
  2113     006A  01F1               	clrf	??_ISR+1
  2114     006B  0870               	movf	??_ISR,w
  2115     006C  00D1               	movwf	_v
  2116     006D  0871               	movf	??_ISR+1,w
  2117     006E  00D2               	movwf	_v+1
  2118                           
  2119                           ;main.c: 152:     break;
  2120     006F  287A               	goto	i1l1179
  2121     0070                     i1l1175:
  2122                           
  2123                           ;main.c: 154:   }
  2124     0070  3001               	movlw	1
  2125     0071  00F0               	movwf	??_ISR
  2126     0072  0870               	movf	??_ISR,w
  2127     0073  07F5               	addwf	ISR@i,f
  2128     0074                     i1l1177:
  2129     0074  3050               	movlw	80
  2130     0075  0275               	subwf	ISR@i,w
  2131     0076  1C03               	skipc
  2132     0077  2879               	goto	u77_21
  2133     0078  287A               	goto	u77_20
  2134     0079                     u77_21:
  2135     0079  284E               	goto	i1l1171
  2136     007A                     u77_20:
  2137     007A                     i1l1179:
  2138                           
  2139                           ;main.c: 180:   if (timerActive)
  2140     007A  087A               	movf	_timerActive,w
  2141     007B  1903               	btfsc	3,2
  2142     007C  287E               	goto	u78_21
  2143     007D  287F               	goto	u78_20
  2144     007E                     u78_21:
  2145     007E  28D8               	goto	i1l96
  2146     007F                     u78_20:
  2147     007F                     i1l1181:
  2148                           
  2149                           ;main.c: 181:   {;main.c: 182:             if((r < 100 || r > 900) && (v <= (t - 2)))
  2150     007F  3000               	movlw	0
  2151     0080  0250               	subwf	_r+1,w
  2152     0081  3064               	movlw	100
  2153     0082  1903               	skipnz
  2154     0083  024F               	subwf	_r,w
  2155     0084  1C03               	skipc
  2156     0085  2887               	goto	u79_21
  2157     0086  2888               	goto	u79_20
  2158     0087                     u79_21:
  2159     0087  2891               	goto	i1l1185
  2160     0088                     u79_20:
  2161     0088                     i1l1183:
  2162     0088  3003               	movlw	3
  2163     0089  0250               	subwf	_r+1,w
  2164     008A  3085               	movlw	133
  2165     008B  1903               	skipnz
  2166     008C  024F               	subwf	_r,w
  2167     008D  1C03               	skipc
  2168     008E  2890               	goto	u80_21
  2169     008F  2891               	goto	u80_20
  2170     0090                     u80_21:
  2171     0090  28AA               	goto	i1l1189
  2172     0091                     u80_20:
  2173     0091                     i1l1185:
  2174     0091  0853               	movf	_t,w
  2175     0092  3EFE               	addlw	254
  2176     0093  00F0               	movwf	??_ISR
  2177     0094  30FF               	movlw	255
  2178     0095  3D54               	addwfc	_t+1,w
  2179     0096  00F1               	movwf	??_ISR+1
  2180     0097  0871               	movf	??_ISR+1,w
  2181     0098  3A80               	xorlw	128
  2182     0099  00F2               	movwf	??_ISR+2
  2183     009A  0852               	movf	_v+1,w
  2184     009B  3A80               	xorlw	128
  2185     009C  0272               	subwf	??_ISR+2,w
  2186     009D  1D03               	skipz
  2187     009E  28A1               	goto	u81_25
  2188     009F  0851               	movf	_v,w
  2189     00A0  0270               	subwf	??_ISR,w
  2190     00A1                     u81_25:
  2191     00A1  1C03               	skipc
  2192     00A2  28A4               	goto	u81_21
  2193     00A3  28A5               	goto	u81_20
  2194     00A4                     u81_21:
  2195     00A4  28AA               	goto	i1l1189
  2196     00A5                     u81_20:
  2197     00A5                     i1l1187:
  2198                           
  2199                           ;main.c: 183:    {;main.c: 184:                 timerCounter++;
  2200     00A5  3001               	movlw	1
  2201     00A6  07F6               	addwf	_timerCounter,f
  2202     00A7  3000               	movlw	0
  2203     00A8  3DF7               	addwfc	_timerCounter+1,f
  2204                           
  2205                           ;main.c: 185:             }else
  2206     00A9  28AD               	goto	i1l1191
  2207     00AA                     i1l1189:
  2208                           
  2209                           ;main.c: 186:    {;main.c: 187:                 timerCounter = 0;
  2210     00AA  01F6               	clrf	_timerCounter
  2211     00AB  01F7               	clrf	_timerCounter+1
  2212                           
  2213                           ;main.c: 188:     timerActive = 0;
  2214     00AC  01FA               	clrf	_timerActive
  2215     00AD                     i1l1191:
  2216                           
  2217                           ;main.c: 191:             if(timerCounter >= 5)
  2218     00AD  3000               	movlw	0
  2219     00AE  0277               	subwf	_timerCounter+1,w
  2220     00AF  3005               	movlw	5
  2221     00B0  1903               	skipnz
  2222     00B1  0276               	subwf	_timerCounter,w
  2223     00B2  1C03               	skipc
  2224     00B3  28B5               	goto	u82_21
  2225     00B4  28B6               	goto	u82_20
  2226     00B5                     u82_21:
  2227     00B5  28D8               	goto	i1l96
  2228     00B6                     u82_20:
  2229     00B6                     i1l1193:
  2230                           
  2231                           ;main.c: 192:    {;main.c: 193:     PORTAbits.RA4 = 0;
  2232     00B6  0020               	movlb	0	; select bank0
  2233     00B7  120C               	bcf	12,4	;volatile
  2234                           
  2235                           ;main.c: 194:     T2CONbits.TMR2ON = 0;
  2236     00B8  111C               	bcf	28,2	;volatile
  2237     00B9                     i1l1195:
  2238                           
  2239                           ;main.c: 197:     CCP1CON = 0;
  2240     00B9  0025               	movlb	5	; select bank5
  2241     00BA  0193               	clrf	19	;volatile
  2242     00BB                     i1l1197:
  2243                           
  2244                           ;main.c: 199:     ADCON0bits.ADON = 0;
  2245     00BB  0021               	movlb	1	; select bank1
  2246     00BC  101D               	bcf	29,0	;volatile
  2247     00BD                     i1l1199:
  2248                           
  2249                           ;main.c: 200:     PORTAbits.RA5 = 0;
  2250     00BD  0020               	movlb	0	; select bank0
  2251     00BE  128C               	bcf	12,5	;volatile
  2252     00BF                     i1l1201:
  2253                           
  2254                           ;main.c: 202:     {;main.c: 203:      PORTAbits.RA5 = !PORTAbits.RA5;
  2255     00BF  1003               	clrc
  2256     00C0  0020               	movlb	0	; select bank0
  2257     00C1  1E8C               	btfss	12,5	;volatile
  2258     00C2  1403               	setc
  2259     00C3  1803               	btfsc	3,0
  2260     00C4  28C6               	goto	u83_21
  2261     00C5  28C9               	goto	u83_20
  2262     00C6                     u83_21:
  2263     00C6  0020               	movlb	0	; select bank0
  2264     00C7  168C               	bsf	12,5	;volatile
  2265     00C8  28CB               	goto	u84_24
  2266     00C9                     u83_20:
  2267     00C9  0020               	movlb	0	; select bank0
  2268     00CA  128C               	bcf	12,5	;volatile
  2269     00CB                     u84_24:
  2270     00CB                     i1l1203:
  2271                           
  2272                           ;main.c: 204:      _delay((unsigned long)((100)*(32000000/4000.0)));
  2273     00CB  3005               	movlw	5
  2274     00CC  00F1               	movwf	??_ISR+1
  2275     00CD  300F               	movlw	15
  2276     00CE  00F0               	movwf	??_ISR
  2277     00CF  30F1               	movlw	241
  2278     00D0                     u113_27:
  2279     00D0  0B89               	decfsz	9,f
  2280     00D1  28D0               	goto	u113_27
  2281     00D2  0BF0               	decfsz	??_ISR,f
  2282     00D3  28D0               	goto	u113_27
  2283     00D4  0BF1               	decfsz	??_ISR+1,f
  2284     00D5  28D0               	goto	u113_27
  2285     00D6  0000               	nop
  2286     00D7  28BF               	goto	i1l1201
  2287     00D8                     i1l96:	
  2288                           ;main.c: 207:         }
  2289                           
  2290                           
  2291                           ;main.c: 208:   PIE1bits.ADIE = 1;
  2292     00D8  0021               	movlb	1	; select bank1
  2293     00D9  1711               	bsf	17,6	;volatile
  2294     00DA                     i1l105:
  2295     00DA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2296     00DB  0009               	retfie
  2297     00DC                     __end_of_ISR:
  2298     007E                     btemp	set	126	;btemp
  2299     007E                     int$flags	set	126
  2300     007E                     wtemp0	set	126
  2301                           
  2302                           	psect	config
  2303                           
  2304                           ;Config register CONFIG1 @ 0x8007
  2305                           ;	Oscillator Selection
  2306                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2307                           ;	Watchdog Timer Enable
  2308                           ;	WDTE = OFF, WDT disabled
  2309                           ;	Power-up Timer Enable
  2310                           ;	PWRTE = OFF, PWRT disabled
  2311                           ;	MCLR Pin Function Select
  2312                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2313                           ;	Flash Program Memory Code Protection
  2314                           ;	CP = OFF, Program memory code protection is disabled
  2315                           ;	Data Memory Code Protection
  2316                           ;	CPD = OFF, Data memory code protection is disabled
  2317                           ;	Brown-out Reset Enable
  2318                           ;	BOREN = ON, Brown-out Reset enabled
  2319                           ;	Clock Out Enable
  2320                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2321                           ;	Internal/External Switchover
  2322                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2323                           ;	Fail-Safe Clock Monitor Enable
  2324                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2325     8007                     	org	32775
  2326     8007  2FE4               	dw	12260
  2327                           
  2328                           ;Config register CONFIG2 @ 0x8008
  2329                           ;	Flash Memory Self-Write Protection
  2330                           ;	WRT = OFF, Write protection off
  2331                           ;	PLL Enable
  2332                           ;	PLLEN = ON, 4x PLL enabled
  2333                           ;	Stack Overflow/Underflow Reset Enable
  2334                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2335                           ;	Brown-out Reset Voltage Selection
  2336                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2337                           ;	In-Circuit Debugger Mode
  2338                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  2339                           ;	Low-Voltage Programming Enable
  2340                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2341     8008                     	org	32776
  2342     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     35      53
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1403
                                             26 BANK0      9     9      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                             ___wmul
                        _getADCValue
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADCValue                                         10     8      2      31
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0     136
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
   _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      40       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      40      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 02 16:29:35 2023

                      _r 004F                        _t 0053                        _v 0051  
                      _y 0078                       l65 0208                       l74 0348  
                     l77 0369                       _Rt 0047      ___wmul@multiplicand 0022  
                    l301 039D                      l134 03D2                      l137 03E7  
                    l323 032E                      l287 03A9                      l289 03BD  
                    _PR2 001B                      _ISR 0004                      u900 03B9  
                    u901 03B8                      u910 0377                      u911 0376  
                    u850 034C                      u851 034B                      u940 0395  
                    u941 0394                      u925 0380                      u950 02E5  
                    u870 03A5                      u951 02E4                      u935 0387  
                    u871 03A4                      u865 0350                      u970 02F7  
                    u971 02F6                      u965 02E9                      u885 03AA  
                    u990 0310                      u991 030F                      u895 03AF  
                    u985 02F8                      u995 030C                      _ad1 0043  
                    _ad2 004D                      _ad3 004B                      wreg 0009  
                   ?_ISR 0070                     ISR@i 0075                     ISR@p 0074  
                   l1211 03C5                     l1301 0326                     l1221 03CF  
                   l1213 03C7                     l1205 03BE                     l1231 03DD  
                   l1223 03D1                     l1215 03C8                     l1207 03C1  
                   l1311 00F8                     l1241 03E5                     l1233 03DF  
                   l1225 03D3                     l1217 03CC                     l1209 03C3  
                   l1321 0111                     l1313 00FB                     l1305 00EF  
                   l1235 03E0                     l1227 03D7                     l1243 0331  
                   l1219 03CD                     l1323 011C                     l1331 01A4  
                   l1315 0107                     l1307 00F2                     l1237 03E1  
                   l1229 03DA                     l1261 03B3                     l1253 039E  
                   l1245 033D                     l1341 01DA                     l1333 01AA  
                   l1325 0134                     l1317 0109                     l1309 00F5  
                   l1239 03E3                     l1271 0377                     l1263 03B9  
                   l1255 03A1                     l1247 0346                     l1351 020B  
                   l1343 01DC                     l1327 015F                     l1319 010B  
                   l1281 02D4                     l1273 037F                     l1257 03A5  
                   l1249 034C                     l1345 01F0                     l1353 020F  
                   l1337 01CD                     l1329 019F                     l1291 02FE  
                   l1283 02E5                     l1275 0386                     l1267 036A  
                   l1259 03AE                     l1355 021E                     l1347 01F2  
                   l1339 01D6                     l1293 0310                     l1285 02E8  
                   l1277 0395                     l1269 0373                     l1357 0220  
                   l1349 01FF                     l1295 0318                     l1287 02F3  
                   l1359 0225                     l1297 0319                     l1289 02F7  
                   l1299 0320                     u1010 0326                     u1011 0325  
                   u1020 0111                     u1005 031A                     u1021 0110  
                   u1030 0155                     u1040 01AA                     u1041 01A9  
                   u1035 0151                     u1107 0101                     u1060 01F0  
                   u1117 022B                     u1061 01EF                     u1070 01FF  
                   u1127 0341                     u1071 01FE                     u1055 01C4  
                   u1080 0208                     u1081 0207                     u1065 01EC  
                   u1090 021E                     u1091 021D                     u1095 021A  
                   i1l96 00D8                     _main 00EF                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 00DC          __end_of_PWMinit 03E8                    ??_ISR 0070  
                  ?_main 0070          __end_of___lldiv 032F                    i1l105 00DA  
                  _TABLE 0234                    u70_20 001D                    u70_21 001C  
                  u71_20 0024                    u71_21 0023                    u80_20 0091  
                  u72_20 002B                    u80_21 0090                    u72_21 002A  
                  u81_20 00A5                    u73_20 0035                    u81_21 00A4  
                  u73_21 0034                    u81_25 00A1                    u82_20 00B6  
                  u74_20 003E                    u82_21 00B5                    u74_21 003D  
                  u83_20 00C9                    u75_20 0049                    u83_21 00C6  
                  u75_21 0048                    u76_20 0068                    u68_20 000B  
                  u76_21 0067                    u68_21 000A                    u84_24 00CB  
                  u76_25 0064                    u77_20 007A                    u69_20 0016  
                  u77_21 0079                    u69_21 0015                    u78_20 007F  
                  u78_21 007E                    u79_20 0088                    u79_21 0087  
    ___lmul@multiplicand 0024                    _setup 03BE                    status 0003  
                  wtemp0 007E          __initialization 00DE             __end_of_main 0234  
                 ??_main 003A                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   _CCPR1L 0291                   ?_setup 0070  
                 i1l1201 00BF                   i1l1203 00CB                   i1l1131 0006  
                 i1l1141 001F                   i1l1133 000B                   i1l1151 0035  
                 i1l1143 0024                   i1l1135 0010                   i1l1145 0026  
                 i1l1137 0016                   i1l1153 0038                   i1l1161 0045  
                 i1l1171 004E                   i1l1163 0049                   i1l1155 003E  
                 i1l1147 002B                   i1l1139 001D                   i1l1181 007F  
                 i1l1173 0068                   i1l1165 004D                   i1l1157 0041  
                 i1l1149 0030                   i1l1191 00AD                   i1l1183 0088  
                 i1l1175 0070                   i1l1159 0043                   i1l1193 00B6  
                 i1l1185 0091                   i1l1177 0074                   i1l1195 00B9  
                 i1l1187 00A5                   i1l1179 007A                   i1l1197 00BB  
                 i1l1189 00AA                   i1l1199 00BD                   u113_27 00D0  
              ??_PWMinit 0020                   _OSCCON 0099                   ___lmul 036A  
                 ___wmul 039E                ??___lldiv 0034                   main@VR 003E  
__end_of__initialization 00EB       getADCValue@channel 0029            __end_of_TABLE 02D4  
         __pcstackCOMMON 0070            __end_of_setup 03D3                  ??_setup 0020  
             __pbssBANK0 0043               __pmaintext 00EF                  ?___lmul 0020  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0293  
         ___lmul@product 0028                  _PWMinit 03D3            ??_getADCValue 0022  
                ___lldiv 02D4                  __ptext1 03BE                  __ptext2 032F  
                __ptext3 039E                  __ptext4 036A                  __ptext5 02D4  
                __ptext6 03D3                _T2CONbits 001C                  main@add 0042  
                clrloop0 03E9     end_of_initialization 00EB          ___lldiv@divisor 002C  
        ___lldiv@counter 0039      __end_of_getADCValue 036A                _PORTAbits 000C  
              _TRISAbits 008C              _CCP1CONbits 0293           __end_of___lmul 039E  
         __end_of___wmul 03BE      start_initialization 00DE              __end_of_ISR 00DC  
            _getADCValue 032F                 ??___lmul 0028                 ??___wmul 0024  
            __pbssCOMMON 0076                ___latbits 0001            __pcstackBANK0 0020  
               ?_PWMinit 0070                 ?___lldiv 002C           ___wmul@product 0024  
              clear_ram0 03E8                 _PIE1bits 0091                 _PIR1bits 0011  
             _ADCON0bits 009D        ___wmul@multiplier 0020        ___lmul@multiplier 0020  
             _APFCONbits 011D               _ANSELAbits 018C             ?_getADCValue 0020  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
           _timerCounter 0076         ___lldiv@dividend 0030            __pstringtext1 0234  
            _timerActive 007A         ___lldiv@quotient 0035  
